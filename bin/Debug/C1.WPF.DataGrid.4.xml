<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>C1.WPF.DataGrid.4</name>
  </assembly>
  <members>
    <member name="T:C1.WPF.DataGrid.C1DataGrid">
      <summary>表形式の情報の表示、分析、および編集に使用されます。仮想化されたデータ連結、xaml スタイル設定、および自動ソートとフィルタをクライアント/サーバーシナリオでサポートします。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.OnCreateAutomationPeer">
      <summary>コントロールのテストに使用される AutomationPeer を取得します。</summary>
      <returns>コントロールのテストに使用される AutomationPeer。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.GetCellFromFrameworkElement(System.Windows.FrameworkElement)">
      <summary>
        セル内に含まれている
        <see cref="T:System.Windows.FrameworkElement" />から、対応するセルを取得します。
      </summary>
      <remarks>
        このメソッドは、渡された要素に基づいてビジュアルツリーを調査して、
        <see cref="T:C1.WPF.DataGrid.DataGridCellPresenter" />を検索します。
      </remarks>
      <param name="element">セル内の要素。</param>
      <returns>
        <see cref="T:System.Windows.FrameworkElement" />を含むセル。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.GetCellFromPoint(System.Windows.Point)">
      <summary>画面の特定のポイントから、対応するセルを取得します。</summary>
      <param name="point">ヒットテストが行われる座標系内の点。</param>
      <returns>画面のそのポイントにあるセル</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.GetCell(System.Int32,System.Int32)">
      <summary>１つの行と１つの列に対応するセルを取得します。</summary>
      <param name="rowIndex">行のインデックス。</param>
      <param name="columnIndex">列のインデックス。</param>
      <returns>指定された行と列の位置にあるセル</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.GetDetailFromPoint(System.Windows.Point)">
      <summary>画面の特定のポイントから、詳細を取得します。</summary>
      <param name="point">ポイント。</param>
      <returns>画面の特定のポイントからの詳細プレゼンタ</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.BeginEdit">
      <summary>現在選択されているセルの編集を開始します。</summary>
      <returns>編集が開始された場合は True、それ以外の場合は False</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.BeginEdit(System.Int32,System.Int32)">
      <summary>指定されたセルの編集を開始します。</summary>
      <param name="rowIndex">行のインデックス。</param>
      <param name="columnIndex">列のインデックス。</param>
      <returns>編集が開始された場合は True、それ以外の場合は False</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.BeginEdit(C1.WPF.DataGrid.DataGridCell)">
      <summary>指定されたセルの編集を開始します。</summary>
      <param name="cell">編集するセル。</param>
      <returns>編集が開始された場合は True、それ以外の場合は False</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.BeginEdit(System.Windows.RoutedEventArgs)">
      <summary>現在選択されているセルの編集を開始します。</summary>
      <param name="editingEventArgs">
        イベントデータを含む
        <see cref="T:System.Windows.RoutedEventArgs" />インスタンス。
      </param>
      <returns>編集が開始された場合は True、それ以外の場合は False</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.CancelEdit">
      <summary>編集をキャンセルします。</summary>
      <returns>編集がキャンセルされた場合は True、それ以外の場合は False</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.EndEdit">
      <summary>変更を適用し、編集を終了します。</summary>
      <returns>編集が適用された場合は True、それ以外の場合は False</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.EndEdit(System.Boolean)">
      <summary>編集を終了します。</summary>
      <param name="commitChanges">
        <c>true</c>に設定された場合は、変更を適用します。
      </param>
      <returns>編集が終了した場合は True、それ以外の場合は False</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.EndEdit(System.Boolean,System.Boolean)">
      <summary>編集を終了します。</summary>
      <param name="commitChanges">
        <c>true</c>に設定された場合は、変更を適用します。
      </param>
      <param name="exitEditingMode">
        <c>true</c>に設定された場合は、編集モードを終了します。
      </param>
      <returns>編集が終了した場合は True、それ以外の場合は False</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.EndEditRow(System.Boolean)">
      <summary>行の編集を終了します。</summary>
      <param name="commitChanges">
        <c>true</c>に設定された場合は、変更を適用します。
      </param>
      <returns>編集が適用された場合は True、それ以外の場合は False</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.BeginNewRow">
      <summary>新しい行の編集を開始します。</summary>
      <returns>編集が開始されると True</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.EndNewRow(System.Boolean)">
      <summary>新しい行の編集を終了します。</summary>
      <param name="commitChanges">
        <c>true</c>に設定された場合は、変更を適用します。
      </param>
      <returns>新しい行の編集が終了すると True</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.RemoveRow(System.Int32)">
      <summary>グリッドから行を削除します。</summary>
      <param name="rowIndex">削除する行のインデックス。</param>
      <returns>行が削除されると True</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.RemoveRows(C1.WPF.DataGrid.DataGridRow[])">
      <summary>行セットを削除します。</summary>
      <param name="removedRows">削除する行。</param>
      <returns>行が削除されると True</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.RemoveRows(System.Int32[])">
      <summary>行セットを削除します。</summary>
      <param name="rowIndexes">削除する行インデックス。</param>
      <returns>行が削除されると True</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.ScrollIntoView(System.Object,C1.WPF.DataGrid.DataGridColumn)">
      <summary>ビューをスクロールして、指定されたセルを表示します。</summary>
      <remarks>セルが既にビューポート内にある場合は、何も起こりません。</remarks>
      <param name="item">項目。</param>
      <param name="column">列。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.ScrollIntoView">
      <summary>ビューをスクロールして、現在選択されているセルを表示します。</summary>
      <remarks>セルが既にビューポート内にある場合は、何も起こりません。</remarks>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.ScrollIntoView(System.Int32,System.Int32)">
      <summary>ビューをスクロールして、指定されたセルを表示します。</summary>
      <remarks>セルが既にビューポート内にある場合は、何も起こりません。</remarks>
      <param name="rowIndex">行のインデックス。</param>
      <param name="columnIndex">列のインデックス。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.ScrollIntoView(System.Windows.FrameworkElement)">
      <summary>
        ビューをスクロールして、指定された
        <see cref="T:System.Windows.FrameworkElement" />を表示します。
      </summary>
      <remarks>セルが既にビューポート内にある場合は、何も起こりません。</remarks>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.PageUp(System.Boolean)">
      <summary>１ページ分上にスクロールします。</summary>
      <param name="changeSelection">
        <c>true</c>に設定された場合は、選択される行を変更します。
      </param>
      <returns>スクロールが行われる場合は true</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.PageDown(System.Boolean)">
      <summary>１ページ分下にスクロールします。</summary>
      <param name="changeSelection">
        <c>true</c>に設定された場合は、選択される行を変更します。
      </param>
      <returns>スクロールが行われる場合は true</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.Reload(System.Boolean)">
      <summary>グリッドのコンテンツを再ロードします。</summary>
      <remarks>
        通常、このメソッドは、
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />には認識できない方法でデータソースが変更された場合に使用されます。たとえば、
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ItemsSource" />が
        <see cref="T:List" />であるときに、このリストに直接行が追加された場合です。
      </remarks>
      <param name="createColumns">true の場合は列が再ロードされ、そうでない場合、列は再ロードされません</param>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.Refresh(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />のすべてのビジュアル要素を再作成します。
      </summary>
      <param name="recycle">true に設定すると、次のレイアウトパスで使用できるように現在の UI 要素を保持します。</param>
      <param name="refreshRows">
        <c>true</c>に設定すると、行プレゼンタがリフレッシュされます。
      </param>
      <param name="refreshCells">
        <c>true</c>に設定すると、セルプレゼンタがリフレッシュされます。
      </param>
      <param name="refreshColumnHeaders">
        <c>true</c>に設定すると、列ヘッダープレゼンタがリフレッシュされます。
      </param>
      <param name="refreshRowHeaders">
        <c>true</c>に設定すると、行ヘッダープレゼンタがリフレッシュされます。
      </param>
      <remarks>
        要素の作成は Silverlight レイアウトメカニズムに委任されるため、このメソッドを呼び出した後でビジュアル要素を照会しても（例：grid[0,0].Presenter）、何も返されません。これらの要素にアクセスする必要がある場合は、
        <see cref="M:FrameworkElement.UpdateLayout" />メソッドを呼び出して、Silverlight レイアウトに強制的に渡してもらう必要があります。
      </remarks>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.MoveColumn(C1.WPF.DataGrid.DataGridColumn,System.Int32)">
      <summary>指定された列をターゲット表示インデックスに移動します。</summary>
      <param name="column">移動する列。</param>
      <param name="targetDisplayIndex">列のターゲット表示インデックス。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.SortBy(C1.WPF.DataGrid.DataGridColumn,C1.WPF.DataGrid.DataGridSortDirection)">
      <summary>指定された列および方向で、データをソートします。</summary>
      <param name="column">並べ替えられる列。</param>
      <param name="direction">列の順序。</param>
      <exception cref="T:C1.WPF.DataGrid.DataGridSortException">この例外は、コレクションビューがソート操作を実行する準備ができていないときに発生します。</exception>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.SortBy(C1.WPF.DataGrid.DataGridColumn,C1.WPF.DataGrid.DataGridSortDirection,System.Boolean)">
      <summary>指定された列および方向で、データをソートします。</summary>
      <param name="column">並べ替えられる列。</param>
      <param name="direction">列の順序。</param>
      <param name="preservePreviousSorting">true の場合、他の列のソート状態は維持されます。</param>
      <exception cref="T:C1.WPF.DataGrid.DataGridSortException">この例外は、コレクションビューがソート操作を実行する準備ができていないときに発生します。</exception>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.SortBy(C1.WPF.DataGrid.DataGridColumn[])">
      <summary>指定された列でデータを昇順にソートします。</summary>
      <param name="columns">並べ替えられる列。</param>
      <exception cref="T:C1.WPF.DataGrid.DataGridSortException">この例外は、コレクションビューがソート操作を実行する準備ができていないときに発生します。</exception>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.FilterBy(C1.WPF.DataGrid.DataGridColumn,C1.WPF.DataGrid.DataGridFilterState)">
      <summary>指定された列および方向で、データをソートします。</summary>
      <param name="column">並べ替えられる列。</param>
      <param name="filterState">フィルタの状態。</param>
      <exception cref="T:C1.WPF.DataGrid.DataGridFilterException">この例外は、コレクションビューがフィルタ処理を実行する準備ができていないときに発生します。</exception>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.FilterBy(C1.WPF.DataGrid.DataGridColumn,C1.WPF.DataGrid.DataGridFilterState,System.Boolean)">
      <summary>指定された列および方向で、データをソートします。</summary>
      <param name="column">並べ替えられる列。</param>
      <param name="filterState">フィルタの状態。</param>
      <param name="preservePreviousFilters">true の場合、以前のフィルタ処理された列を保持します。</param>
      <exception cref="T:C1.WPF.DataGrid.DataGridFilterException">この例外は、コレクションビューがフィルタ処理を実行する準備ができていないときに発生します。</exception>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.GroupBy(C1.WPF.DataGrid.DataGridColumn,C1.WPF.DataGrid.DataGridSortDirection)">
      <summary>指定された列および方向で、データをグループ化します。</summary>
      <param name="column">この列によってグループ化されます。</param>
      <param name="direction">グループの順序です。</param>
      <exception cref="T:C1.WPF.DataGrid.DataGridGroupException">この例外は、コレクションビューがグループ化操作を実行する準備ができていないときに発生します。</exception>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.GroupBy(C1.WPF.DataGrid.DataGridColumn,C1.WPF.DataGrid.DataGridSortDirection,System.Boolean)">
      <summary>指定された列および方向で、データをグループ化します。</summary>
      <param name="column">この列によってグループ化されます。</param>
      <param name="direction">グループの順序です。</param>
      <param name="preserveOtherColumnsGrouping">true の場合、他の列は現在の状態を維持します。</param>
      <exception cref="T:C1.WPF.DataGrid.DataGridGroupException">この例外は、コレクションビューがグループ化操作を実行する準備ができていないときに発生します。</exception>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.GroupBy(C1.WPF.DataGrid.DataGridColumn[])">
      <summary>指定された列でデータを昇順にグループ化します。</summary>
      <param name="columns">この列によってグループ化されます。</param>
      <exception cref="T:C1.WPF.DataGrid.DataGridGroupException">この例外は、コレクションビューがグループ化操作を実行する準備ができていないときに発生します。</exception>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.OnCopyPropertiesBeforeAddingItem(System.Object,System.Object,System.Reflection.PropertyInfo[])">
      <summary>新しい行がコミットされるときに、編集された要素のプロパティをコレクションビューによって作成された項目にコピーするために呼び出されます。</summary>
      <param name="editedItem">ユーザー入力から情報を収集した項目。</param>
      <param name="collectionViewItem">コレクションビューによって作成された項目。</param>
      <param name="properties">編集された項目のプロパティ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.BeginInit">
      <summary>このメソッドは、初期化プロセスの開始時に呼び出されます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.EndInit">
      <summary>このメソッドは、初期化プロセスの終了時に呼び出されます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.RaisePropertyChanged(System.String)">
      <summary>プロパティ変更イベントを発生させます。</summary>
      <param name="propertyName">変更されたプロパティの名前。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.Print(System.String)">
      <summary>印刷ダイアログを表示して、グリッドを印刷します。</summary>
      <param name="documentName">印刷するドキュメントの名前。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.Print(System.String,C1.WPF.DataGrid.ScaleMode,System.Windows.Thickness,System.Int32)">
      <summary>指定した拡大縮小モードを使用して印刷します。</summary>
      <param name="documentName">印刷するドキュメントの名前。</param>
      <param name="scaleMode">ドキュメントをページに合わせる方法。</param>
      <param name="margin">ページ周囲の余白（ピクセル単位）。</param>
      <param name="maxPages">印刷する最大ページ数。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.GetPageImages(C1.WPF.DataGrid.ScaleMode,System.Windows.Size,System.Windows.Thickness,System.Int32,System.Int32@)">
      <summary>ドキュメントのページへのレンダリングに適したグリッドのパーツを表す要素のリストを取得します。</summary>
      <param name="scaleMode">ページに収まるようにドキュメントを拡大縮小する方法。</param>
      <param name="pageSize">ページのサイズ（ピクセル単位）。</param>
      <param name="margin">ページ周囲のマージン（ピクセル単位）。</param>
      <param name="maxPages">印刷する最大ページ数。</param>
      <param name="verticalPageCount">
        垂直方向のページ数を返します。C1DataGrid の幅が指定されたページ幅に収まらない場合は、垂直方向のページが指定された幅に合うようにそれぞれ自動的にサブページに分割されます。したがって、１枚の垂直方向のページが、このメソッドから返されるコレクション内の複数の項目で表されます。この出力パラメータは、水平方向の分割を考慮しない垂直方向のページの数を返します。垂直方向の１ページに対する水平方向のサブページの数は、このメソッドから返される項目の数を
        <paramref name="verticalPageCount" />パラメータに返される値で除算して計算できます。
      </param>
      <returns>ページに対応する要素のリスト。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.GetPageImages(C1.WPF.DataGrid.ScaleMode,System.Windows.Size,System.Windows.Thickness,System.Int32,System.Boolean,System.Int32@)">
      <summary>ドキュメントのページへのレンダリングに適したグリッドのパーツを表す要素のリストを取得します。</summary>
      <param name="scaleMode">ページに収まるようにドキュメントを拡大縮小する方法。</param>
      <param name="pageSize">ページのサイズ（ピクセル単位）。</param>
      <param name="margin">ページ周囲のマージン（ピクセル単位）。</param>
      <param name="maxPages">印刷する最大ページ数。</param>
      <param name="showPageInfo">生成されるイメージにページ番号やカウントなどのページ情報を追加するかどうかを示します。</param>
      <param name="verticalPageCount">
        垂直方向のページ数を返します。C1DataGrid の幅が指定されたページ幅に収まらない場合は、垂直方向のページが指定された幅に合うようにそれぞれ自動的にサブページに分割されます。したがって、１枚の垂直方向のページが、このメソッドから返されるコレクション内の複数の項目で表されます。この出力パラメータは、水平方向の分割を考慮しない垂直方向のページの数を返します。垂直方向の１ページに対する水平方向のサブページの数は、このメソッドから返される項目の数を
        <paramref name="verticalPageCount" />パラメータに返される値で除算して計算できます。
      </param>
      <returns>ページに対応する要素のリスト。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.ChangeVisualStateLoading(System.Boolean)">
      <summary>Loading 表示状態グループの現在の表示状態をオブジェクトのプロパティに一致するように更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.ChangeVisualStateCommon(System.Boolean)">
      <summary>Common 表示状態グループの現在の表示状態をオブジェクトのプロパティに一致するように更新します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.AutoGenerateColumnsProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.AutoGenerateColumns" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.ItemsSourceProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ItemsSource" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.CanUserReorderColumnsProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.CanUserReorderColumns" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.CanUserResizeColumnsProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.CanUserResizeColumns" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.CanUserResizeRowsProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.CanUserResizeRows" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.CanUserFilterProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.CanUserFilter" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.CanUserSortProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.CanUserSort" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.CanUserGroupProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.CanUserGroup" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.CanUserAddRowsProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.CanUserAddRows" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.CanUserEditRowsProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.CanUserEditRows" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.CanUserRemoveRowsProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.CanUserRemoveRows" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.CanUserToggleDetailsProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.CanUserToggleDetails" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.CanUserFreezeColumnsProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.CanUserFreezeColumns" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.IsReadOnlyProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.IsReadOnly" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.HeadersVisibilityProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.HeadersVisibility" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.GridLinesVisibilityProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.GridLinesVisibility" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.NewRowVisibilityProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.NewRowVisibility" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.ShowFluidMouseOverProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ShowFluidMouseOver" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.ShowValidationIndicatorsProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ShowValidationIndicators" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.ShowVerticalFreezingSeparatorProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ShowVerticalFreezingSeparator" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.ShowGroupingPanelProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ShowGroupingPanel" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.VerticalScrollBarVisibilityProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.VerticalScrollBarVisibility" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.HorizontalScrollBarVisibilityProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.HorizontalScrollBarVisibility" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.ColumnWidthProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ColumnWidth" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.MinColumnWidthProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.MinColumnWidth" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.MaxColumnWidthProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.MaxColumnWidth" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.IndentWidthProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.IndentWidth" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.LeadingColumnWidthProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.LeadingColumnWidth" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.ColumnHeaderHeightProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ColumnHeaderHeight" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.RowHeightProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.RowHeight" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.GroupRowHeightProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.GroupRowHeight" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.GroupRowPositionProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.GroupRowPosition" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.MinRowHeightProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.MinRowHeight" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.MaxRowHeightProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.MaxRowHeight" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.RowHeaderWidthProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.RowHeaderWidth" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.VerticalFreezingSeparatorWidthProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.VerticalFreezingSeparatorWidth" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.FrozenColumnCountProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.FrozenColumnCount" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.FrozenTopRowsCountProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.FrozenTopRowsCount" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.FrozenBottomRowsCountProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.FrozenBottomRowsCount" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.SelectionModeProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.SelectionMode" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.SelectedIndexProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.SelectedIndex" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.SelectedItemProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.SelectedItem" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.RowDetailsTemplateProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.RowDetailsTemplate" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.RowDetailsVisibilityModeProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.RowDetailsVisibilityMode" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.IsLoadingProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.IsLoading" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.BodyRectProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.BodyRect" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.CurrentColumnProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.CurrentColumn" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.CurrentRowProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.CurrentRow" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.ColumnHeaderClickActionProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ColumnHeaderClickAction" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.ColumnHeaderOptionsVisibilityProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ColumnHeaderOptionsVisibility" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.VerticalScrollStepProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.VerticalScrollStep" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.ScrollPreviewRowTemplateProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ScrollPreviewRowTemplate" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.ScrollModeProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ScrollMode" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.FiltersCombinationProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.FiltersCombination" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.RowStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.RowStyle" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.NewRowStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.NewRowStyle" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.RowHeaderStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.RowHeaderStyle" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.NewRowHeaderStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.NewRowHeaderStyle" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.FocusStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.FocusStyle" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.CellStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.CellStyle" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.ColumnHeaderStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ColumnHeaderStyle" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.GroupColumnHeaderStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.GroupColumnHeaderStyle" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.DragSourceColumnStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.DragSourceColumnStyle" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.DropIndicatorStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.DropIndicatorStyle" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.DragOverColumnStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.DragOverColumnStyle" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.FilterStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.FilterStyle" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.GroupRowStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.GroupRowStyle" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.GroupRowHeaderStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.GroupRowHeaderStyle" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.VerticalFreezingSeparatorStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.VerticalFreezingSeparatorStyle" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.ScrollBarStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ScrollBarStyle" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.RowBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.RowBackground" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.RowForegroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.RowForeground" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.AlternatingRowBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.AlternatingRowBackground" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.AlternatingRowForegroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.AlternatingRowForeground" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.HorizontalGridLinesBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.HorizontalGridLinesBrush" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.VerticalGridLinesBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.VerticalGridLinesBrush" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.HeaderBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.HeaderBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.HeaderForegroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.HeaderForeground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.GroupingPanelBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.GroupingPanelBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.GroupingPanelForegroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.GroupingPanelForeground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.GroupingPanelStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.GroupingPanelStyle" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.ClipboardCopyModeProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ClipboardCopyMode" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.ClipboardPasteModeProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ClipboardPasteMode" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.CanUserSelectByDraggingProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.CanUserSelectByDragging" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.MouseOverBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.MouseOverBrush" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.PressedBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.PressedBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.SelectedBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.SelectedBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.ValidationBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ValidationBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.ValidationForegroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ValidationForeground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.OnApplyTemplate">
      <summary>関連するコントロールのパーツを参照できるように、コントロールのテンプレートをロードします。</summary>
      <remarks>
        このメソッドは、アプリケーションコードや内部処理（再構築レイアウトパスなど）が
        <see cref="M:ApplyTemplate" />メソッドを呼び出すときに必ず呼び出されます。
      </remarks>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>依存プロパティの実効値が更新されている場合に呼び出されます。</summary>
      <param name="e">変更されたプロパティと、その古い値と新しい値を示すイベントデータ。</param>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.AutoGeneratingColumn">
      <summary>自動生成列が作成されているときに発生します。</summary>
      <remarks>
        自動生成列を変更するには、プロパティ
        <see cref="P:C1.WPF.DataGrid.DataGridAutoGeneratingColumnEventArgs.Column" />を設定します。自動生成列をキャンセルするには、プロパティ
        <see cref="P:C1.WPF.DataGrid.DataGridAutoGeneratingColumnEventArgs.Cancel" />を true に設定します。この場合、このプロパティの列は存在しなくなります。
      </remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.AutoGeneratedColumns">
      <summary>列がロードされると発生します。</summary>
      <remarks>
        このイベントを使用すると、列の
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.DisplayIndex" />を設定することで、自動生成列を並べ替えることができます。
      </remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.MergingCells">
      <summary>
        セルの測定後に発生します。これにより、ユーザーは隣接するセルを結合できます。セルを結合するには、渡された
        <see cref="T:C1.WPF.DataGrid.DataGridMergingCellsEventArgs" />のメソッド Merge を呼び出す必要があります。
      </summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.KeyDown">
      <summary>
        <see cref="T:System.Windows.UIElement" />にフォーカスがあるときにキーボードのキーが押されると発生します。
      </summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.CreatingRow">
      <summary>行の作成中に発生します。</summary>
      <remarks>通常、SummaryRow、TemplateRow などのカスタム行を挿入するために使用されます。</remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.LoadingRow">
      <summary>行のロード中に発生します。</summary>
      <remarks>通常、特定の行のプロパティを初期化するために使用されます。</remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.LoadedRowPresenter">
      <summary>行がロードされた後に発生します。</summary>
      <remarks>
        通常、行のビジュアル要素にビジュアルプロパティを設定するために使用されます。
        <see cref="E:C1.WPF.DataGrid.C1DataGrid.UnloadedRowPresenter" />イベントでビジュアルプロパティを解除するか、行を再利用不可としてマークする必要がある場合があります。
      </remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.LoadedCellPresenter">
      <summary>セルのビジュアル要素がビジュアルツリーに追加され、操作可能になった後に発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.LoadedRowHeaderPresenter">
      <summary>行ヘッダーのビジュアル要素がビジュアルツリーに追加され、操作可能になった後に発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.LoadedColumnHeaderPresenter">
      <summary>列ヘッダープレゼンタが読み込まれた後に発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.LoadedRowDetailsPresenter">
      <summary>行詳細の表示/非表示が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.UnloadingRow">
      <summary>行のアンロード中に発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.UnloadedRowPresenter">
      <summary>行がアンロードされたときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.UnloadedCellPresenter">
      <summary>セルプレゼンタがアンロードされるときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.UnloadedRowHeaderPresenter">
      <summary>行ヘッダープレゼンタがアンロードされるときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.UnloadedColumnHeaderPresenter">
      <summary>列ヘッダープレゼンタがアンロードされるときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.UnloadedRowDetailsPresenter">
      <summary>行詳細プレゼンタがアンロードされるときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.BeginningEdit">
      <summary>セルの編集が開始されると発生します。</summary>
      <remarks>
        通常、このイベントは、ユーザーがセル内で［F2］キーを押すか、セルまたは現在のセルを含む行をクリックすると発生します。このイベントをキャンセルするには、
        <see cref="P:C1.WPF.DataGrid.DataGridBeginningEditEventArgs.Cancel" />を true に設定します。
      </remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.BeganEdit">
      <summary>編集が開始されると発生します。</summary>
      <remarks>通常、このイベントは、ユーザーがセル内で［F2］キーを押すか、セルまたは現在のセルを含む行をクリックすると発生します。このイベントを使用して、編集コントロールを変更できます。</remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.CommittingEdit">
      <summary>セルの変更が適用されると発生します。</summary>
      <remarks>
        通常、このイベントは、ユーザーが編集セル内で［Enter］キーまたは［Tab］キーを押すと発生します。このイベントをキャンセルするには、
        <see cref="P:C1.WPF.DataGrid.DataGridEndingEditEventArgs.Cancel" />を true に設定します。
      </remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.CommittedEdit">
      <summary>セルの編集がコミットされた後で発生します。</summary>
      <remarks>通常、このイベントは、ユーザーが編集セル内で［Enter］キーまたは［Tab］キーを押すと発生します。</remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.CancelingEdit">
      <summary>セルの変更がキャンセルされると発生します。</summary>
      <remarks>
        通常、このイベントは、ユーザーが編集セル内で［Esc］キーを押すと発生します。このイベントをキャンセルするには、
        <see cref="P:C1.WPF.DataGrid.DataGridEndingEditEventArgs.Cancel" />を true に設定します。
      </remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.BeginningRowEdit">
      <summary>行の編集が開始されると発生します。</summary>
      <remarks>
        このイベントをキャンセルするには、
        <see cref="P:C1.WPF.DataGrid.DataGridEditingRowEventArgs.Cancel" />を true に設定します。
      </remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.CommittingRowEdit">
      <summary>行の編集が適用されると発生します。</summary>
      <remarks>
        このイベントをキャンセルするには、
        <see cref="P:C1.WPF.DataGrid.DataGridEditingRowEventArgs.Cancel" />を true に設定します。
      </remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.CommittedRowEdit">
      <summary>行の編集がコミットされた後で発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.CancelingRowEdit">
      <summary>行の編集がキャンセルされると発生します。</summary>
      <remarks>
        このイベントをキャンセルするには、
        <see cref="P:C1.WPF.DataGrid.DataGridEditingRowEventArgs.Cancel" />を true に設定します。
      </remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.CanceledRowEdit">
      <summary>行の編集がキャンセルされた後で発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.SelectionChanged">
      <summary>SelectedItem または SelectedItems プロパティの値が変化すると発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.SelectionChanging">
      <summary>選択範囲が変更される前に発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.CurrentCellChanged">
      <summary>別のセルが現在のセルになると発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.SortChanging">
      <summary>列のソート状態が変更される前に発生します。</summary>
      <remarks>ソート状態は、ユーザーが列ヘッダーをクリックしたとき、または SortBy メソッドが呼び出されたときに変更されます。</remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.SortChanged">
      <summary>ソート状態が変更されたときに発生します。</summary>
      <remarks>ソート状態は、ユーザーが列ヘッダーをクリックしたとき、または SortBy メソッドが呼び出されたときに変更されます。</remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.FilterChanging">
      <summary>列のフィルタ状態が変更される前に発生します。</summary>
      <remarks>フィルタ状態は、ユーザーがビジュアルコントロールで基準を設定したとき、または FilterBy メソッドが呼び出されたときに変更されます。</remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.FilterChanged">
      <summary>フィルタ状態が変更されたときに発生します。</summary>
      <remarks>フィルタ状態は、ユーザーが列ヘッダーに含まれるフィルタを操作したとき、または FilterBy メソッドが呼び出されたときに変更されます。</remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.GroupChanging">
      <summary>列のグループ状態が変更される前に発生します。</summary>
      <remarks>グループ状態は、ユーザーがグループ化パネル上で列をドラッグしたとき、または GroupBy メソッドが呼び出されたときに変更されます。</remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.GroupChanged">
      <summary>グループが変更されたときに発生します。</summary>
      <remarks>グループ状態は、ユーザーがグループ化パネル上で列をドラッグしたとき、または GroupBy メソッドが呼び出されたときに変更されます。</remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.BeginningNewRow">
      <summary>新しい行の編集が開始されると発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.CommittingNewRow">
      <summary>新しい行が適用されると発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.CommittedNewRow">
      <summary>新規行がコミットされた後で発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.CancelingNewRow">
      <summary>新しい行がキャンセルされると発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.CanceledNewRow">
      <summary>新しい行の編集がキャンセルされた後で発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.DeletingRows">
      <summary>行の削除中に発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.RowsAdded">
      <summary>行が追加されると発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.RowsDeleted">
      <summary>行が削除されると発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.ColumnHeaderDragStarted">
      <summary>列ヘッダーのドラッグが開始したときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.ColumnHeaderDragDelta">
      <summary>列ヘッダーのドラッグが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.ColumnHeaderDragCompleted">
      <summary>列ヘッダーのドラッグが終了すると発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.ColumnReordering">
      <summary>列の並べ替え中に発生します。</summary>
      <remarks>
        移動操作をキャンセルするには、イベント引数の
        <see cref="P:C1.WPF.DataGrid.DataGridColumnReorderingEventArgs.Cancel" />プロパティを true に設定します。
      </remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.ColumnReordered">
      <summary>列が並べ替えられたときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.ColumnResizing">
      <summary>ユーザーが列のサイズを変更しているときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.ColumnResized">
      <summary>ユーザーが列のサイズを変更したときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.RowDetailsVisibilityChanged">
      <summary>行詳細の表示/非表示が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.RowResizing">
      <summary>ユーザーが行のサイズを変更しているときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.RowResized">
      <summary>ユーザーが行のサイズを変更したときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.FilterLoading">
      <summary>列のフィルタが読み込まれる前に発生します。ここで、ユーザーに表示されるフィルタを変更できます。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.FilterOpened">
      <summary>列ヘッダーの右側にあるボタンをクリックして列のフィルタを開くときに発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.DataSourceView">
      <summary>C1DataGrid が現在使用しているデータソースビューを取得します。</summary>
      <value>データソースビュー。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.Columns">
      <summary>現在グリッド内に表示されている列のコレクションを取得します。</summary>
      <value>列。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.Focused">
      <summary>
        この
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />にフォーカスがあるかどうかを示す値を取得または設定します。
      </summary>
      <value>
        グリッドにフォーカスがある場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.Item(System.Int32,System.Int32)">
      <summary>
        指定された行と列のインデックスを持つ
        <see cref="T:C1.WPF.DataGrid.DataGridCell" />を取得します。
      </summary>
      <value>指定された行と列の位置にあるセル</value>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.Item(C1.WPF.DataGrid.DataGridRow,C1.WPF.DataGrid.DataGridColumn)">
      <summary>
        指定された行と列を持つ
        <see cref="T:C1.WPF.DataGrid.DataGridCell" />を取得します。
      </summary>
      <value>指定された行と列の位置にあるセル</value>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.Rows">
      <summary>グリッド内のすべての行を含むコレクションを取得します。</summary>
      <value>グリッド内の行。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.TopRows">
      <summary>項目行の上端にある行のコレクションを取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.BottomRows">
      <summary>項目行の下端に配置される行のコレクションを取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.CurrentCell">
      <summary>現在のセルを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.SelectedItems">
      <summary>選択された項目を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.Selection">
      <summary>選択範囲オブジェクトを取得します。これを使用して、現在の選択範囲を照会したり、選択範囲を変更することができます。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.GroupedColumns">
      <summary>グループ化された列を取得します。</summary>
      <remarks>配列内の列の順序は、グループが作成された順序になります。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.FilteredColumns">
      <summary>フィルタされた列を取得します。</summary>
      <remarks>
        フィルタ述語の論理的な結合方法を変更するには、
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.FiltersCombination" />プロパティを使用します。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.SortedColumns">
      <summary>ソートされた列を取得します。</summary>
      <remarks>配列内の列の順序は、データがソートされた順序になります。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.Viewport">
      <summary>スクロール状態、および現在左上または右下に表示されているセルに関する有益な情報を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.IsFilteringRowsAllowed">
      <summary>このインスタンスが行のフィルタリングを許可されているかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.IsSortingRowsAllowed">
      <summary>このインスタンスが行のソートを許可されているかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.IsGroupingRowsAllowed">
      <summary>
        内部の
        <see cref="T:System.ComponentModel.ICollectionView" />および
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />構成に基づいて、行をグループ化できるかどうかを示す値を取得します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.IsDetailsTogglingAllowed">
      <summary>このインスタンスが詳細のトグルを許可されているかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.IsAddingNewRowsAllowed">
      <summary>このインスタンスが新しい行の追加を許可されているかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.IsRemovingRowsAllowed">
      <summary>このインスタンスが行の削除を許可されているかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.IsEditingRowsAllowed">
      <summary>このインスタンスが行の編集を許可されているかどうかを示す値を取得します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.SelectionDragStarted">
      <summary>行を含む領域でマウスが初めてドラッグされたときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.SelectionDragDelta">
      <summary>行を含む領域でマウスがドラッグされると発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.SelectionDragCompleted">
      <summary>行を含む領域でマウスドラッグ操作が完了すると発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.PropertyChanged">
      <summary>プロパティ値が変更されたときに発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.AutoGenerateColumns">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ItemsSource" />プロパティが設定されると列が自動的に作成されるかどうかを示す値を取得または設定します。
      </summary>
      <remarks>値 CanUserFreezeColumns.True および CanUserFreezeColumns.False は古い形式です。将来のバージョンでは削除されるため、使用しないでください。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.ItemsSource">
      <summary>コントロールの内容を生成するために使用されるコレクションを取得または設定します。</summary>
      <remarks>
        渡されたコレクションが
        <see cref="T:System.ComponentModel.ICollectionView" />の場合、グループ、フィルタ、およびソート操作はそれに委任されます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.CanUserReorderColumns">
      <summary>false に設定すると、ユーザーによるドラッグアンドドロップでの列のサイズ変更は禁止されます。</summary>
      <remarks>列ヘッダーのドラッグ中には、列の移動先を明示するためのインジケータが表示されます。列をビューポート境界付近までドラッグすると、データグリッドが自動的にスクロールします。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.CanUserResizeColumns">
      <summary>false に設定すると、ユーザーによる列のサイズ変更は禁止されます。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.CanUserResizeRows">
      <summary>true に設定すると、ユーザーは行のサイズを変更できます。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.CanUserFilter">
      <summary>false に設定すると、データのフィルタは禁止されます。</summary>
      <remarks>false に設定すると、フィルタは表示されません。true の場合は、それぞれの列でフィルタを使用できるかどうかに依存します。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.CanUserSort">
      <summary>false に設定すると、データのソートは禁止されます。</summary>
      <remarks>
        <para>false に設定すると、ユーザーがデータをソートできなくなります。true の場合は、クリックされた列の設定に依存します。</para>
        <para>ユーザーが初めて列ヘッダーをクリックすると、データは昇順でソートされます。２回目のクリックでは降順でソートされます。［Ctrl］キーを押しながら列ヘッダーをクリックすると、他の列のソート状態は維持されます。［Ctrl］キーを押さないでクリックすると、現在の列のソート基準が他の列の直前のソート状態より優先します。</para>
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.CanUserGroup">
      <summary>true に設定すると、データのグループ化は許可されます。</summary>
      <remarks>
        グループ化パネルは表示するが、ユーザーがグループを変更できないようにする場合は、
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ShowGroupingPanel" />を true に設定し、このプロパティを false に設定します。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.CanUserAddRows">
      <summary>false に設定すると、行の追加は禁止されます。</summary>
      <remarks>
        <para>false に設定すると、「新規行」要素が表示されなくなるため、ユーザーは新しい行に入力できなくなります。</para>
        <para>
          この機能は、設定されている
          <see cref="P:C1.WPF.DataGrid.C1DataGrid.ItemsSource" />が新しい項目の追加をサポートしている場合にのみ使用できます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.CanUserEditRows">
      <summary>false に設定すると、データの編集は禁止されます。</summary>
      <remarks>
        さらにユーザーが行を削除できないようにする場合は、代わりに
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.IsReadOnly" />を使用できます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.CanUserRemoveRows">
      <summary>false に設定すると、行の削除は禁止されます。</summary>
      <remarks>
        <para>
          さらにユーザーが行を追加および編集できないようにする場合は、代わりに
          <see cref="P:C1.WPF.DataGrid.C1DataGrid.IsReadOnly" />を使用できます。
        </para>
        <para>
          この機能は、設定されている
          <see cref="P:C1.WPF.DataGrid.C1DataGrid.ItemsSource" />が項目の削除をサポートしている場合にのみ使用できます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.CanUserToggleDetails">
      <summary>false に設定すると、行詳細の表示/非表示の変更は禁止されます。</summary>
      <remarks>
        <para>
          トグルボタンを表示するには、
          <see cref="P:C1.WPF.DataGrid.C1DataGrid.RowDetailsTemplate" />を設定する必要があります。
        </para>
        <para>
          要件がいずれかの組み込みモードに適合する場合は、オプションとして、プロパティ
          <see cref="P:C1.WPF.DataGrid.C1DataGrid.RowDetailsVisibilityMode" />を設定できます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.CanUserFreezeColumns">
      <summary>true に設定すると、ユーザーはフリーズ行の数を変更できます。</summary>
      <remarks>
        セパレータが表示されるように、
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ShowVerticalFreezingSeparator" />を true に設定する必要があります。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.IsReadOnly">
      <summary>
        false に設定すると、
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />は編集できません。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.HeadersVisibility">
      <summary>列ヘッダーまたは行ヘッダーの表示が必要かどうかを示す値を取得または設定します。</summary>
      <remarks>デフォルト値は All です。列と行の両方のヘッダーが表示されます。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.GridLinesVisibility">
      <summary>水平方向または垂直方向のグリッド線の表示が必要かどうかを示す値を取得または設定します。</summary>
      <remarks>デフォルト値は Vertical です。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.NewRowVisibility">
      <summary>新しい行が配置される場所を示す値を取得または設定します。</summary>
      <remarks>
        このプロパティを
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.FrozenTopRowsCount" />または
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.FrozenBottomRowsCount" />と組み合わせて使用して、ユーザーがデータをスクロールする際に、常に行を表示状態にすることができます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.ShowFluidMouseOver">
      <summary>
        true に設定されると、行の上ではマウスオーバーを非表示にし、
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />本体に対して滑らかなマウスオーバー効果を提供します。FluidMouseOverBrush および RowHeight を使用します。
      </summary>
      <remarks>
        このプロパティの推奨される用途は、RowHeight が固定された編集不可の
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />です。他の状況でこれを選択すると、エンドユーザーを混乱させる可能性があります。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.ShowValidationIndicators">
      <summary>検証エラーのインジケータを表示する必要があるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.ShowVerticalFreezingSeparator">
      <summary>表示する垂直セパレータを指定します。</summary>
      <remarks>値 CanUserFreezeColumns.True および CanUserFreezeColumns.False は古い形式です。将来のバージョンでは削除されるため、使用しないでください。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.ShowGroupingPanel">
      <summary>DataGrid の上部にある、列ごとのグループ化に使用されるパネルを表示するかどうかを示す値を取得または設定します。</summary>
      <remarks>
        グループ化パネルは表示するが、ユーザーがグループを変更できないようにする場合は、プロパティ
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.CanUserGroup" />を false に設定します。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.VerticalScrollBarVisibility">
      <summary>垂直スクロールバーの表示方法を示す値を取得または設定します。</summary>
      <remarks>デフォルト値は Auto です。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.HorizontalScrollBarVisibility">
      <summary>水平スクロールバーの表示方法を示す値を取得または設定します。</summary>
      <remarks>デフォルト値は Auto です。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.ColumnWidth">
      <summary>
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />内のすべての列について、列幅を設定/取得します。
      </summary>
      <remarks>
        <see cref="T:C1.WPF.DataGrid.DataGridLength" />は、４種類のモードをサポートします。
        <list type="table"><listheader><term>タイプ</term><description>説明</description></listheader><item><term>Pixel</term><description>列の幅は、指定されたピクセル数と同じになります。</description></item><item><term>Auto</term><description>列の幅は、列のセルの内容によって決定されます。</description></item><item><term>Star</term><description>ビューポート領域が Star 列と AutoStar 列に分配されます。</description></item><item><term>AutoStar</term><description>各列には、十分に内容を表示できる領域が確保されます。余分な領域がある場合は、Star 列と AutoStar 列に分配されます。</description></item></list><para>
          列に
          <see cref="P:C1.WPF.DataGrid.DataGridColumn.Width" />プロパティが設定されている場合、レイアウトは、その列で設定されている値をデータグリッド内の列に継承します。
        </para><para><see cref="P:C1.WPF.DataGrid.C1DataGrid.MinColumnWidth" />および
          <see cref="P:C1.WPF.DataGrid.C1DataGrid.MaxColumnWidth" />は、このプロパティより優先されます。つまり、ColumnWidth=100 と MinColumnWidth=110 を設定した場合、実際の値は 110 になります。
        </para><para>
          自動幅の列の実際の幅（ピクセル単位）を確認する場合は、
          <see cref="P:C1.WPF.DataGrid.DataGridColumn.ActualWidth" />を照会する必要があります。
        </para></remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.MinColumnWidth">
      <summary>
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />内のすべての列について、最小の列幅を設定/取得します。
      </summary>
      <remarks>
        列に
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.MinWidth" />プロパティが設定されている場合、レイアウトは、その列で設定されている値をデータグリッド内の列に継承します。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.MaxColumnWidth">
      <summary>
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />内のすべての列について、最大の列幅を設定/取得します。
      </summary>
      <remarks>
        列に
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.MaxWidth" />プロパティが設定されている場合、レイアウトは、その列で設定されている値をデータグリッド内の列に継承します。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.IndentWidth">
      <summary>データのグループ化の際に表示される各インデントレベルの幅をピクセル単位で取得または設定します。</summary>
      <remarks>
        先頭列（行ヘッダーと最初の列の間の空き領域。データグリッドがグループ化されたときにのみ表示される）の幅は、デフォルトでは「(IndentWidth * グループレベルの数)」になります。この値を変更する場合は、
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.LeadingColumnWidth" />を設定します。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.LeadingColumnWidth">
      <summary>先頭列（行ヘッダーと最初の列の間の空き領域。データグリッドがグループ化されたときにのみ表示される）の列幅を取得または設定します。</summary>
      <remarks>この値を Auto に設定すると、先頭列の幅は「(IndentWidth * グループレベルの数)」になります。</remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.LeadingColumnWidthChanged">
      <summary>
        <see cref="P:LeadingColumnWidth" />プロパティが変更されたときに発生するイベントです。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.ColumnHeaderHeight">
      <summary>列ヘッダーの高さを設定します。０に設定すると、非表示になります。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.RowHeight">
      <summary>
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />内のすべてのデータ行について、行の高さを設定/取得します。
      </summary>
      <remarks>
        <para>Pixel モードと Auto モードのみを使用できます。設定する値が Pixel 型の場合は、ピクセル数を指定する必要があります。値が Auto 型の場合、行の高さは、各行のセルの内容で決まります。</para>
        <para>
          行に
          <see cref="P:C1.WPF.DataGrid.DataGridRow.Height" />プロパティが設定されている場合、レイアウトは、その行で設定されている値をデータグリッド内の行に継承します。
        </para>
        <para>
          <see cref="P:C1.WPF.DataGrid.C1DataGrid.MinRowHeight" />および
          <see cref="P:C1.WPF.DataGrid.C1DataGrid.MaxRowHeight" />は、このプロパティより優先されます。つまり、RowHeight=100 と MinRowHeight=110 を設定した場合、実際の値は 110 になります。
        </para>
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.GroupRowHeight">
      <summary>
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />内のすべてのグループ行について、行の高さを設定/取得します。
      </summary>
      <remarks>
        詳細については、
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.RowHeight" />を参照してください。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.GroupRowPosition">
      <summary>グループ行が置かれる場所をグループの項目に相対的に取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.MinRowHeight">
      <summary>
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />内のすべての行について、最小の行の高さを設定/取得します。
      </summary>
      <remarks>
        行に
        <see cref="P:C1.WPF.DataGrid.DataGridRow.MinHeight" />プロパティが設定されている場合、レイアウトは、その行で設定されている値をデータグリッド内の行に継承します。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.MaxRowHeight">
      <summary>
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />内のすべての行について、最大の行の高さを設定/取得します。
      </summary>
      <remarks>
        行に
        <see cref="P:C1.WPF.DataGrid.DataGridRow.MaxHeight" />プロパティが設定されている場合、レイアウトは、その行で設定されている値をデータグリッド内の行に継承します。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.RowHeaderWidth">
      <summary>行ヘッダーの幅を設定します。０に設定すると、非表示になります。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.VerticalFreezingSeparatorWidth">
      <summary>フリーズセパレータの幅をピクセル単位で取得または設定します。</summary>
      <remarks>デフォルト値は 5 ピクセルです。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.FrozenColumnCount">
      <summary>水平方向のスクロールができない列の数を取得または設定します。</summary>
      <remarks>
        ユーザーは、垂直方向のフリーズセパレータをドラッグして、フリーズする列の数を変更できます。それには、
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.CanUserFreezeColumns" />プロパティと
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.ShowVerticalFreezingSeparator" />プロパティを Left に設定する必要があります。
      </remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.FrozenColumnCountChanged">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.FrozenColumnCount" />プロパティが変更されたときに発生するイベントです。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.FrozenTopRowsCount">
      <summary>垂直方向のスクロールができない最上部の行の数を取得または設定します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.FrozenTopRowsCountChanged">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.FrozenTopRowsCount" />プロパティが変更されたときに発生するイベントです。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.FrozenBottomRowsCount">
      <summary>垂直方向のスクロールができない最下部の行の数を取得または設定します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.FrozenBottomRowsCountChanged">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.FrozenBottomRowsCount" />プロパティが変更されたときに発生するイベントです。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.SelectionMode">
      <summary>グリッドの選択動作を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.SelectedIndex">
      <summary>選択されている行のインデックスを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.SelectedItem">
      <summary>選択されている行に対応するデータ項目を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.RowDetailsTemplate">
      <summary>
        行の詳細部分の表示に使用される
        <see cref="T:System.Windows.DataTemplate" />を設定/取得します。
      </summary>
      <remarks>
        各行の詳細の表示方法を設定するには、
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.RowDetailsVisibilityMode" />を参照してください。行ヘッダー内にトグルボタンを表示するかどうかを設定するには、
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.CanUserToggleDetails" />を参照してください。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.RowDetailsVisibilityMode">
      <summary>
        行の選択時に、詳細部分が自動的に開かれる、常に表示される、または常に折りたたまれるように設定できます。これは、
        <see cref="T:C1.WPF.DataGrid.DataGridRow" />内の DetailsVisibility プロパティを使用して、コードによって展開できます。
      </summary>
      <remarks>
        コードで詳細を展開するには、
        <see cref="T:C1.WPF.DataGrid.DataGridRow" />で DetailsVisibility プロパティを使用します。手作業の場合は、行ヘッダー内にあるトグルボタンを押します。CanUserToggleDetails が true に設定されている必要があります。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.IsLoading">
      <summary>
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />のロードは、true を返します。
      </summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.IsLoadingChanged">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.IsLoading" />プロパティが変更されたときに発生するイベントです。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.BodyRect">
      <summary>
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />の本体によって使用される四角形を返します。本体の上部に装飾を表示する際に役立ちます。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.CurrentColumn">
      <summary>現在フォーカスされている列を設定/取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.CurrentRow">
      <summary>現在フォーカスされている行を設定/取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.ColumnHeaderClickAction">
      <summary>ユーザーが列ヘッダーをクリックしたときに実行されるアクションを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.ColumnHeaderOptionsVisibility">
      <summary>列ヘッダーのオプションのドロップダウンがいつ表示されるかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.VerticalScrollStep">
      <summary>ユーザーが垂直スクロールバーのアップ/ダウンボタンを押したり、マウスホイールを使用したときの垂直スクロールの動作を示す値を取得します。</summary>
      <remarks>
        <list type="table">
          <listheader>
            <term>モード</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>Discrete</term>
            <description>行のサイズには関係なく、常に行がスクロールされます。</description>
          </item>
          <item>
            <term>Pixel</term>
            <description>マウスホイールイベントが発生するたびに、指定されたピクセル数がスクロールされます。</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.ScrollPreviewRowTemplate">
      <summary>
        <see cref="!:ScrollMode.DeferredScroll" />使用時に、スクロール行のプレビューとして使用される
        <see cref="T:System.Windows.DataTemplate" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.ScrollMode">
      <summary>
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />のスクロール動作を取得または設定します。
      </summary>
      <remarks>
        <list type="table">
          <listheader>
            <term>モード</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>RealTime</term>
            <description>
              <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />の ThumbTrack イベントが発生するたびに、ページが更新されます。
            </description>
          </item>
          <item>
            <term>Deferred</term>
            <description>
              <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />の EndScroll イベントが発生すると、ページが更新されます。
            </description>
          </item>
        </list>デフォルト値は RealTime です。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.FiltersCombination">
      <summary>列間で論理的にフィルタを組み合わせる方法を取得または設定します。</summary>
      <remarks>デフォルトでは、ユーザーが複数の列にフィルタを設定してデータをフィルタ処理する場合、それらのフィルタの間に適用される論理演算子は「And」です。つまり、表示されるデータは、すべてのフィルタに設定されている基準を満たす必要があります。これを「Or」に変更して、少なくとも１つのフィルタ基準を満たすデータを表示することができます。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.RowStyle">
      <summary>行のレンダリング時に使用されるスタイルを取得または設定します。</summary>
      <remarks>
        <see cref="T:System.Windows.Style" />の
        <see cref="P:System.Windows.Style.TargetType" />を
        <see cref="T:C1.WPF.DataGrid.DataGridRowPresenter" />に設定する必要があります。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.NewRowStyle">
      <summary>新しい項目を入力するための行のレンダリング時に使用されるスタイルを取得または設定します。</summary>
      <remarks>
        <see cref="T:System.Windows.Style" />の
        <see cref="P:System.Windows.Style.TargetType" />を
        <see cref="T:C1.WPF.DataGrid.DataGridNewRowPresenter" />に設定する必要があります。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.RowHeaderStyle">
      <summary>行ヘッダーのレンダリング時に使用されるスタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.NewRowHeaderStyle">
      <summary>新しい項目を入力するための行ヘッダーのレンダリング時に使用されるスタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.FocusStyle">
      <summary>
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />にフォーカスを表示するために使用される内部
        <see cref="T:System.Windows.Shapes.Rectangle" />のスタイルを設定します。
      </summary>
      <remarks>
        <see cref="T:System.Windows.Style" />の
        <see cref="P:System.Windows.Style.TargetType" />を
        <see cref="T:System.Windows.Shapes.Rectangle" />に設定する必要があります。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.CellStyle">
      <summary>セルのレンダリング時に使用されるスタイルを取得または設定します。</summary>
      <remarks>
        <see cref="T:System.Windows.Style" />の
        <see cref="P:System.Windows.Style.TargetType" />を
        <see cref="T:C1.WPF.DataGrid.DataGridCellPresenter" />に設定する必要があります。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.ColumnHeaderStyle">
      <summary>列ヘッダーのレンダリング時に使用されるスタイルを取得または設定します。</summary>
      <remarks>
        <see cref="T:System.Windows.Style" />の
        <see cref="P:System.Windows.Style.TargetType" />を
        <see cref="T:C1.WPF.DataGrid.DataGridColumnHeaderPresenter" />に設定する必要があります。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.GroupColumnHeaderStyle">
      <summary>グループパネルの列ヘッダーのレンダリング時に使用されるスタイルを取得または設定します。</summary>
      <remarks>
        <see cref="T:System.Windows.Style" />の
        <see cref="P:System.Windows.Style.TargetType" />を
        <see cref="T:C1.WPF.DataGrid.DataGridGroupColumnHeaderPresenter" />に設定する必要があります。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.DragSourceColumnStyle">
      <summary>
        ドラッグアンドドロップ操作の開始時にソース列の上に置かれた
        <see cref="T:System.Windows.Controls.ContentControl" />要素に適用されるスタイル。
      </summary>
      <remarks>
        <see cref="T:System.Windows.Style" />の
        <see cref="P:System.Windows.Style.TargetType" />を
        <see cref="T:System.Windows.Controls.ContentControl" />に設定する必要があります。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.DropIndicatorStyle">
      <summary>
        ドラッグされた列がドロップされる位置の指示に使用される
        <see cref="T:System.Windows.Controls.ContentControl" />要素に適用されるスタイル。
      </summary>
      <remarks>
        <see cref="T:System.Windows.Style" />の
        <see cref="P:System.Windows.Style.TargetType" />を
        <see cref="T:System.Windows.Controls.ContentControl" />に設定する必要があります。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.DragOverColumnStyle">
      <summary>
        ドラッグされて移動中の列の表示に使用される
        <see cref="T:System.Windows.Controls.ContentControl" />要素に適用されるスタイル。
      </summary>
      <remarks>
        <see cref="T:System.Windows.Style" />の
        <see cref="P:System.Windows.Style.TargetType" />を
        <see cref="T:System.Windows.Controls.ContentControl" />に設定する必要があります。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.FilterStyle">
      <summary>Filter コントロールコンテナに使用される Style を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.GroupRowStyle">
      <summary>グループ行のスタイルを取得または設定します。</summary>
      <remarks>
        <see cref="T:System.Windows.Style" />の
        <see cref="P:System.Windows.Style.TargetType" />を
        <see cref="T:C1.WPF.DataGrid.DataGridGroupRowPresenter" />に設定する必要があります。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.GroupRowHeaderStyle">
      <summary>グループ行のヘッダーのスタイルを取得または設定します。</summary>
      <remarks>
        <see cref="T:System.Windows.Style" />の
        <see cref="P:System.Windows.Style.TargetType" />を
        <see cref="T:C1.WPF.DataGrid.DataGridRowHeaderPresenter" />に設定する必要があります。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.VerticalFreezingSeparatorStyle">
      <summary>固定列とスクロール可能な列の間のセパレータのスタイル。</summary>
      <remarks>
        <see cref="T:System.Windows.Style" />の
        <see cref="P:System.Windows.Style.TargetType" />を
        <see cref="T:C1.WPF.DataGrid.DataGridVerticalFreezingSeparatorPresenter" />に設定する必要があります。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.ScrollBarStyle">
      <summary>データグリッドのスクロールバーに適用されるスタイルを取得または設定します。</summary>
      <remarks>
        <see cref="T:System.Windows.Style" />の
        <see cref="P:System.Windows.Style.TargetType" />を
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />に設定する必要があります。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.RowBackground">
      <summary>
        行の背景の塗りつぶしに使用する
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.RowForeground">
      <summary>
        行の前景の塗りつぶしに使用する
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.AlternatingRowBackground">
      <summary>
        奇数行の背景の塗りつぶしに使用する
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.AlternatingRowForeground">
      <summary>
        奇数行の前景の塗りつぶしに使用する
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.HorizontalGridLinesBrush">
      <summary>水平方向のグリッド線を表示するために使用されるブラシ。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.VerticalGridLinesBrush">
      <summary>垂直方向のグリッド線を表示するために使用されるブラシ。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.HeaderBackground">
      <summary>
        グループ行、フリーズセパレータ、スクロールバー、およびフィルタとは別に、データグリッドのヘッダーの背景を描画するために使用する
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.HeaderForeground">
      <summary>
        グループ行、フリーズセパレータ、スクロールバー、およびフィルタとは別に、データグリッドのヘッダーの前景を強調表示するために使用する
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.GroupingPanelBackground">
      <summary>
        データグリッドの上にあるグループ化パネルの背景の描画に使用する
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
      <remarks>グループ化パネルを表示するには、ShowGroupingPanel または CanUserGroup が true である必要があります。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.GroupingPanelForeground">
      <summary>
        データグリッドの上にあるグループ化パネルの前景の描画に使用する
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.GroupingPanelStyle">
      <summary>
        データグリッドの上にあるグループ化パネルに設定する
        <see cref="T:System.Windows.Style" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.ClipboardCopyMode">
      <summary>クリップボードにコピーされるテキストのフォーマットを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.ClipboardPasteMode">
      <summary>クリップボードからコピーされるテキストに期待されるフォーマットを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.CanUserSelectByDragging">
      <summary>セルパネル上をドラッグしたときにセルが選択されるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.IsMouseOverChanged">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.IsMouseOver" />プロパティが変更されたときに発生するイベントです。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.MouseOverBrush">
      <summary>
        マウスがある行の強調表示に使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.PressedBrush">
      <summary>
        クリックされたボタンを描画するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.SelectedBackground">
      <summary>
        選択されたコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.ValidationBackground">
      <summary>検証要素の背景の描画に使用されるブラシを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.ValidationForeground">
      <summary>検証要素の前景の描画に使用されるブラシを取得または設定します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridRowsPanel">
      <summary>行および詳細を含む、データグリッドのメインパネル。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.RecyclingPanel">
      <summary>内部の項目の再利用過程を管理する基本パネル。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.RecyclingPanel.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.RecyclingPanel" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.RecyclingPanel.ClipPresenterHorizontally(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>プレゼンタを水平方向にクリップします。</summary>
      <param name="presenter">プレゼンタ。</param>
      <param name="presenterRenderWidth">プレゼンタのレンダリング幅。</param>
      <param name="presenterRenderHeight">プレゼンタのレンダリング高さ。</param>
      <param name="topOffset">上オフセット。</param>
      <param name="bottomOffset">下オフセット。</param>
      <param name="offset">オフセット。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.RecyclingPanel.ClipPresenterVertically(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>プレゼンタを垂直方向にクリップします。</summary>
      <param name="presenter">プレゼンタ。</param>
      <param name="presenterRenderWidth">プレゼンタのレンダリング幅。</param>
      <param name="presenterRenderHeight">プレゼンタのレンダリング高さ。</param>
      <param name="leftOffset">左オフセット。</param>
      <param name="rightOffset">右オフセット。</param>
      <param name="offset">オフセット。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.RecyclingPanel.ToString">
      <summary>
        このインスタンスを表す
        <see cref="T:System.String" />を返します。
      </summary>
      <returns>
        このインスタンスを表す
        <see cref="T:System.String" />。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowsPanel.OnCreateAutomationPeer">
      <summary>コントロールのテストに使用される AutomationPeer を取得します。</summary>
      <returns>コントロールのテストに使用される AutomationPeer。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowsPanel.InvalidateRowsMeasure">
      <summary>行のメジャーを無効にします。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowsPanel.MeasureOverride(System.Windows.Size)">
      <summary>Silverlight レイアウトの Measure の受け渡し動作を提供します。クラスはこのメソッドをオーバーライドして、クラス自体の Measure の受け渡し動作を定義することができます。</summary>
      <param name="availableSize">
        このオブジェクトが子オブジェクトに与えることができるサイズ。無限大（
        <see cref="F:System.Double.PositiveInfinity" />）は、どのようなコンテンツにもオブジェクトのサイズを合わせられることを示す値として指定できます。
      </param>
      <returns>このオブジェクトがレイアウトの際に必要と判断したサイズ。子オブジェクトに割り当てられたサイズが計算されるほか、固定のコンテナサイズなどの事項が考慮されます。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowsPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Silverlight レイアウトの Arrange の受け渡し動作を提供します。クラスはこのメソッドをオーバーライドして、クラス自体の Arrange の受け渡し動作を定義することができます。</summary>
      <param name="finalSize">親の内部で、このオブジェクトがそれ自体およびその子を配置するために使用する最終エリアです。</param>
      <returns>要素がレイアウトに配置された後で使用される実際のサイズ。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowsPanel.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridRowsPanel" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridRowsHeaderPanel">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridRowsHeaderPanel" />を含んでいるパネル。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowsHeaderPanel.OnCreateAutomationPeer">
      <summary>コントロールのテストに使用される AutomationPeer を取得します。</summary>
      <returns>コントロールのテストに使用される AutomationPeer。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowsHeaderPanel.MeasureOverride(System.Windows.Size)">
      <summary>Silverlight レイアウトの「メジャー」の受け渡し動作を提供します。クラスはこのメソッドをオーバーライドして、クラス自体のメジャーの受け渡し動作を定義することができます。</summary>
      <param name="availableSize">このオブジェクトが子オブジェクトに与えることができるサイズ。Infinity を指定すると、どのようなコンテンツにもオブジェクトのサイズを合わせられることを示すことができます。</param>
      <returns>このオブジェクトがレイアウトの際に必要と判断するサイズ。割り当てられた子オブジェクトのサイズの計算に基づきます。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowsHeaderPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Silverlight レイアウトの「Arrange」の受け渡し動作を提供します。クラスはこのメソッドをオーバーライドして、クラス自体の配置の受け渡し動作を定義することができます。</summary>
      <param name="finalSize">親の内部で、このオブジェクトがそれ自体およびその子を配置するために使用する最終エリアです。</param>
      <returns>実際に使用するサイズ。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowsHeaderPanel.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridRowsHeaderPanel" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridColumnsHeaderPanel">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridColumnsHeaderPanel" />のコレクションを含むパネル。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnsHeaderPanel.OnCreateAutomationPeer">
      <summary>コントロールのテストに使用される AutomationPeer を取得します。</summary>
      <returns>コントロールのテストに使用される AutomationPeer。</returns>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumnsHeaderPanel.ClipTopMarginProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumnsHeaderPanel.ClipTopMargin" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumnsHeaderPanel.ClipBottomMarginProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumnsHeaderPanel.ClipBottomMargin" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnsHeaderPanel.MeasureOverride(System.Windows.Size)">
      <summary>Silverlight レイアウトの「メジャー」の受け渡し動作を提供します。クラスはこのメソッドをオーバーライドして、クラス自体のメジャーの受け渡し動作を定義することができます。</summary>
      <param name="availableSize">このオブジェクトが子オブジェクトに与えることができるサイズ。Infinity を指定すると、どのようなコンテンツにもオブジェクトのサイズを合わせられることを示すことができます。</param>
      <returns>このオブジェクトがレイアウトの際に必要と判断するサイズ。割り当てられた子オブジェクトのサイズの計算に基づきます。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnsHeaderPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Silverlight レイアウトの「Arrange」の受け渡し動作を提供します。クラスはこのメソッドをオーバーライドして、クラス自体の配置の受け渡し動作を定義することができます。</summary>
      <param name="finalSize">親の内部で、このオブジェクトがそれ自体およびその子を配置するために使用する最終エリアです。</param>
      <returns>実際に使用するサイズ。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnsHeaderPanel.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridColumnsHeaderPanel" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnsHeaderPanel.Panel">
      <summary>行を含むパネルを取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnsHeaderPanel.ClipTopMargin">
      <summary>クリップの上マージンを取得または設定します。</summary>
      <value>クリップの上マージン。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnsHeaderPanel.ClipBottomMargin">
      <summary>クリップの下マージンを取得または設定します。</summary>
      <value>クリップの下マージン。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridRowPresenter">
      <summary>行のビジュアル要素を表します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowPresenter.OnCreateAutomationPeer">
      <summary>コントロールのテストに使用される AutomationPeer を取得します。</summary>
      <returns>コントロールのテストに使用される AutomationPeer。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowPresenter.Load">
      <summary>行プレゼンタがビジュアルツリーに追加された後に呼び出されます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowPresenter.Unload">
      <summary>ビジュアルツリーから行プレゼンタが削除される前に呼び出されます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowPresenter.BackgroundBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowPresenter.BackgroundBrush" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowPresenter.UpdateSelection">
      <summary>選択範囲状態を更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowPresenter.UpdateEditingRow">
      <summary>編集中の状態を更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowPresenter.UpdateMouseOver">
      <summary>マウスオーバー状態を更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowPresenter.UpdateValidationState">
      <summary>検証状態を更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowPresenter.UpdateCurrentCell">
      <summary>現在のセルを更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowPresenter.UpdateLines">
      <summary>セルの境界線を更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowPresenter.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />イベントが発生する前に呼び出されます。
      </summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowPresenter.RaisePropertyChanged(System.String)">
      <summary>プロパティ変更イベントを発生させます。</summary>
      <param name="propertyName">プロパティの名前。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowPresenter.ChangeVisualStateValidation(System.Boolean)">
      <summary>Validation 表示状態グループの現在の表示状態をオブジェクトのプロパティに一致するように更新します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowPresenter.HorizontalGridLineVisibilityProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowPresenter.HorizontalGridLineVisibility" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowPresenter.HorizontalGridLineBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowPresenter.HorizontalGridLineBrush" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowPresenter.HorizontalGridLineOpacityProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowPresenter.HorizontalGridLineOpacity" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowPresenter.CellsAreaMarginProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowPresenter.CellsAreaMargin" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowPresenter.RowAreaMarginProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowPresenter.RowAreaMargin" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowPresenter.ValidationStateProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowPresenter.ValidationState" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowPresenter.ValidationResultsProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowPresenter.ValidationResults" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowPresenter.ValidationBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowPresenter.ValidationBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowPresenter.VerticalGridLineVisibilityProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowPresenter.VerticalGridLineVisibility" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowPresenter.VerticalGridLineBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowPresenter.VerticalGridLineBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowPresenter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridRowPresenter" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowPresenter.OnApplyTemplate">
      <summary>関連するコントロールのパーツを参照できるように、コントロールのテンプレートをロードします。</summary>
      <remarks>
        このメソッドは、アプリケーションコードや内部処理（再構築レイアウトパスなど）が
        <see cref="M:ApplyTemplate" />メソッドを呼び出すときに必ず呼び出されます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowPresenter.Row">
      <summary>オーナー行を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowPresenter.DataGrid">
      <summary>このプレゼンタに関連付けられているデータグリッドを取得します。</summary>
      <value>行。</value>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridRowPresenter.MouseLeftButtonDown">
      <summary>プレビューマウス左ボタンが押されると発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowPresenter.CellsPanel">
      <summary>この行プレゼンタ内のセルパネルを取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowPresenter.Item(C1.WPF.DataGrid.DataGridColumn)">
      <summary>
        指定された列の
        <see cref="T:C1.WPF.DataGrid.DataGridCellPresenter" />を取得します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowPresenter.BackgroundBrush">
      <summary>
        行の背景に使用される
        <see cref="T:System.Windows.Media.Brush" />を設定/取得します。
      </summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridRowPresenter.PropertyChanged">
      <summary>プロパティ値が変更されたときに発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowPresenter.HorizontalGridLineVisibility">
      <summary>true の場合は、水平方向のグリッド線が表示されます。</summary>
      <remarks>
        このプロパティは、プレゼンタが属する
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />によって制御されます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowPresenter.HorizontalGridLineBrush">
      <summary>水平方向のグリッド線を表示するために使用されるブラシ。</summary>
      <remarks>
        このプロパティは、プレゼンタが属する
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />によって制御されます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowPresenter.HorizontalGridLineOpacity">
      <summary>水平方向のグリッド線の不透明度を取得または設定します。</summary>
      <remarks>
        このプロパティは、プレゼンタが属する
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />によって制御されます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowPresenter.CellsAreaMargin">
      <summary>このマージンが UI 要素に適用されると、その UI 要素はセルが表示されるエリア内に配置されます。通常、このマージンはセルパネルに適用されます。</summary>
      <remarks>
        このプロパティは、プレゼンタが属する
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />によって制御されます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowPresenter.RowAreaMargin">
      <summary>このマージンが行プレゼンタ内の UI 要素に適用されると、列がスクロール可能であっても、その UI 要素はスクロールされません。</summary>
      <remarks>
        このプロパティは、プレゼンタが属する
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />によって制御されます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowPresenter.ValidationState">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowPresenter.ValidationState" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowPresenter.ValidationResults">
      <summary>対応する行に関連する ValidationResult のコレクション。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowPresenter.ValidationBackground">
      <summary>検証要素の背景の描画に使用されるブラシを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowPresenter.VerticalGridLineVisibility">
      <summary>この行の垂直方向のグリッド線を表示するかどうかを取得または設定します。true の場合は、垂直方向のグリッド線が表示されます。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowPresenter.VerticalGridLineBrush">
      <summary>
        垂直方向のグリッド線を強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridColumnHeaderPresenter">
      <summary>列のヘッダーを表すコンテンツコントロールです。このコントロールは、ソート、サイズ変更、およびフィルタの要素を含みます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.OnCreateAutomationPeer">
      <summary>コントロールのテストに使用される AutomationPeer を取得します。</summary>
      <returns>コントロールのテストに使用される AutomationPeer。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.Load">
      <summary>列ヘッダーがビジュアルツリーに追加された後に呼び出されます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.Unload">
      <summary>列ヘッダーがビジュアルツリーから削除される前に呼び出されます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseEnter" />イベントが発生する前に呼び出されます。
      </summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeave" />イベントが発生する前に呼び出されます。
      </summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.RaisePropertyChanged(System.String)">
      <summary>プロパティ変更イベントを発生させます。</summary>
      <param name="propertyName">プロパティの名前。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.ChangeVisualStateOptions(System.Boolean)">
      <summary>Options 表示状態グループの現在の表示状態をオブジェクトのプロパティに一致するように更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.ChangeVisualStateSelection(System.Boolean)">
      <summary>Selection 表示状態グループの現在の表示状態をオブジェクトのプロパティに一致するように更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.ChangeVisualStateMerging(System.Boolean)">
      <summary>Merging 表示状態グループの現在の表示状態をオブジェクトのプロパティに一致するように更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.ChangeVisualStateCommon(System.Boolean)">
      <summary>Common 表示状態グループの現在の表示状態をオブジェクトのプロパティに一致するように更新します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.IsFilteringProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.IsFiltering" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.IsInGroupingPanelProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.IsInGroupingPanel" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.IsSelectedProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.IsSelected" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.IsEditingProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.IsEditing" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.IsMergingProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.IsMerging" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.OptionsVisibilityProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.OptionsVisibility" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.RemoveButtonVisibilityProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.RemoveButtonVisibility" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.MouseOverBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.MouseOverBrush" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.PressedBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.PressedBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.SelectedBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.SelectedBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridColumnHeaderPresenter" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.OnApplyTemplate">
      <summary>関連するコントロールのパーツを参照できるように、コントロールのテンプレートをロードします。</summary>
      <remarks>
        このメソッドは、アプリケーションコードや内部処理（再構築レイアウトパスなど）が
        <see cref="M:ApplyTemplate" />メソッドを呼び出すときに必ず呼び出されます。
      </remarks>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>依存プロパティの実効値が更新されている場合に呼び出されます。</summary>
      <param name="e">変更されたプロパティと、その古い値と新しい値を示すイベントデータ。</param>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.Column">
      <summary>列を取得します。</summary>
      <value>列。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.DataGrid">
      <summary>オーナーデータグリッドを取得します。</summary>
      <value>オーナーデータグリッド。</value>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.Resizing">
      <summary>列ヘッダーがサイズ変更されると発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.Resized">
      <summary>列ヘッダーがサイズ変更されると発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.AutoSized">
      <summary>列ヘッダーが自動サイズ設定されると発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.FilterChanged">
      <summary>フィルタの状態が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.FilterOpened">
      <summary>列のフィルタコントロールが開かれるときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.FilterLoading">
      <summary>列のフィルタコントロールが開かれる前発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.Filter">
      <summary>列内のデータのフィルタに使用されるフィルタを取得または設定します。</summary>
      <value>フィルタ。</value>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.PropertyChanged">
      <summary>プロパティ値が変更されたときに発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.IsFiltering">
      <summary>現在、列がデータをフィルタ中の場合は true を返します。</summary>
      <remarks>このプロパティが true に設定されている場合、表示状態グループ「OptionsStates」は、表示状態を「Filtering」に変更します。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.IsInGroupingPanel">
      <summary>列ヘッダーがグループ化パネル内にあるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.IsSelected">
      <summary>列が現在選択中の場合は、true を返します。</summary>
      <remarks>このプロパティが true に設定されている場合、表示状態グループ「CommonStates」は、表示状態を「Selected」に変更します。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.IsEditing">
      <summary>列が現在編集中の場合は、true を返します。</summary>
      <remarks>このプロパティが true に設定されている場合、表示状態グループ「CommonStates」は、表示状態を「Editing」に変更します。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.IsMerging">
      <summary>ヘッダーを結合できるかどうかを示す値を取得または設定します。</summary>
      <remarks>このプロパティが true に設定されている場合、表示状態グループ「MergingStates」は、表示状態を「Merging」に変更します。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.OptionsVisibility">
      <summary>オプションのドロップダウンがいつ表示されるかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.RemoveButtonVisibility">
      <summary>削除ボタンが表示されているかどうかを取得または設定します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.IsMouseOverChanged">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.IsMouseOver" />プロパティが変更されたときに発生するイベントです。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.MouseOverBrush">
      <summary>
        マウスがある行の強調表示に使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.PressedBrush">
      <summary>
        クリックされたボタンを描画するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnHeaderPresenter.SelectedBackground">
      <summary>
        選択されたコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridRowHeaderPresenter">
      <summary>行ヘッダーのビジュアル要素を表します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderPresenter.OnCreateAutomationPeer">
      <summary>コントロールのテストに使用される AutomationPeer を取得します。</summary>
      <returns>コントロールのテストに使用される AutomationPeer。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderPresenter.Load">
      <summary>プレゼンタを初期化します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderPresenter.Unload">
      <summary>プレゼンタを終了処理します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderPresenter.UpdateSelection">
      <summary>選択範囲状態を更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderPresenter.UpdateEditingRow">
      <summary>編集中の行状態を更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderPresenter.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseEnter" />イベントが発生する前に呼び出されます。
      </summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderPresenter.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeave" />イベントが発生する前に呼び出されます。
      </summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderPresenter.UpdateMouseOver">
      <summary>マウスオーバー状態を更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderPresenter.UpdateValidationState">
      <summary>検証状態を更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderPresenter.UpdateCurrentCell">
      <summary>現在のセルを更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderPresenter.RaisePropertyChanged(System.String)">
      <summary>プロパティ変更イベントを発生させます。</summary>
      <param name="propertyName">プロパティの名前。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderPresenter.ChangeVisualStateSelection(System.Boolean)">
      <summary>Selection 表示状態グループの現在の表示状態をオブジェクトのプロパティに一致するように更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderPresenter.ChangeVisualStateValidation(System.Boolean)">
      <summary>Validation 表示状態グループの現在の表示状態をオブジェクトのプロパティに一致するように更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderPresenter.ChangeVisualStateMerging(System.Boolean)">
      <summary>Merging 表示状態グループの現在の表示状態をオブジェクトのプロパティに一致するように更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderPresenter.ChangeVisualStateCommon(System.Boolean)">
      <summary>Common 表示状態グループの現在の表示状態をオブジェクトのプロパティに一致するように更新します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowHeaderPresenter.CanUserResizeProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.CanUserResize" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowHeaderPresenter.CanUserToggleDetailsProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.CanUserToggleDetails" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowHeaderPresenter.IsSelectedProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.IsSelected" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowHeaderPresenter.IsEditingProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.IsEditing" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowHeaderPresenter.IsMergingProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.IsMerging" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowHeaderPresenter.ValidationStateProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.ValidationState" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowHeaderPresenter.ValidationResultsProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.ValidationResults" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowHeaderPresenter.DetailsVisibilityProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.DetailsVisibility" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowHeaderPresenter.MouseOverBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.MouseOverBrush" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowHeaderPresenter.PressedBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.PressedBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowHeaderPresenter.SelectedBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.SelectedBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowHeaderPresenter.ValidationBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.ValidationBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowHeaderPresenter.ValidationForegroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.ValidationForeground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderPresenter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridRowHeaderPresenter" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderPresenter.OnApplyTemplate">
      <summary>関連するコントロールのパーツを参照できるように、コントロールのテンプレートをロードします。</summary>
      <remarks>
        このメソッドは、アプリケーションコードや内部処理（再構築レイアウトパスなど）が
        <see cref="M:ApplyTemplate" />メソッドを呼び出すときに必ず呼び出されます。
      </remarks>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderPresenter.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>依存プロパティの実効値が更新されている場合に呼び出されます。</summary>
      <param name="e">変更されたプロパティと、その古い値と新しい値を示すイベントデータ。</param>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridRowHeaderPresenter.Resized">
      <summary>行ヘッダーがサイズ変更されると発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridRowHeaderPresenter.Resizing">
      <summary>行ヘッダーがサイズ変更されると発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridRowHeaderPresenter.AutoSized">
      <summary>行ヘッダーが自動サイズ設定されると発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.Row">
      <summary>オーナー行を取得します。</summary>
      <value>オーナー行。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.DataGrid">
      <summary>オーナーデータグリッドを取得します。</summary>
      <value>オーナーデータグリッド。</value>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridRowHeaderPresenter.PropertyChanged">
      <summary>プロパティ値が変更されたときに発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.CanUserResize">
      <summary>ユーザーがマウスを使って列を調整できるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.CanUserToggleDetails">
      <summary>展開/折りたたみボタンを表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.IsSelected">
      <summary>行が現在選択中の場合は、true を返します。</summary>
      <remarks>このプロパティが true に設定されている場合、表示状態グループ「CommonStates」は、表示状態を「Selected」に変更します。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.IsEditing">
      <summary>行が現在編集中の場合は、true を返します。</summary>
      <remarks>このプロパティが true に設定されている場合、表示状態グループ「CommonStates」は、表示状態を「Editing」に変更します。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.IsMerging">
      <summary>ヘッダーを結合できるかどうかを示す値を取得または設定します。</summary>
      <remarks>このプロパティが true に設定されている場合、表示状態グループ「MergingStates」は、表示状態を「Merging」に変更します。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.ValidationState">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.ValidationState" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.ValidationResults">
      <summary>対応する行に関連する ValidationResult のコレクション。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.DetailsVisibility">
      <summary>詳細の表示状態を取得または設定します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridRowHeaderPresenter.IsMouseOverChanged">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.IsMouseOver" />プロパティが変更されたときに発生するイベントです。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.MouseOverBrush">
      <summary>
        マウスがある行の強調表示に使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.PressedBrush">
      <summary>
        クリックされたボタンを描画するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.SelectedBackground">
      <summary>
        選択されたコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.ValidationBackground">
      <summary>検証要素の背景の描画に使用されるブラシを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowHeaderPresenter.ValidationForeground">
      <summary>検証要素の前景の描画に使用されるブラシを取得または設定します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridCellPresenter">
      <summary>セルのビジュアル要素を表します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.OnCreateAutomationPeer">
      <summary>コントロールのテストに使用される AutomationPeer を取得します。</summary>
      <returns>コントロールのテストに使用される AutomationPeer。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.Load">
      <summary>セルがビジュアルツリーに追加された後に発生します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.Unload">
      <summary>ビジュアルツリーからセルが削除される前に発生します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.OnContentChanged(System.Object,System.Object)">
      <summary>
        <see cref="P:System.Windows.Controls.ContentControl.Content" />プロパティの値が変更されたときに呼び出されます。
      </summary>
      <param name="oldContent">
        <see cref="P:System.Windows.Controls.ContentControl.Content" />プロパティの元の値。
      </param>
      <param name="newContent">
        <see cref="P:System.Windows.Controls.ContentControl.Content" />プロパティの新しい値。
      </param>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCellPresenter.MergedRangeProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCellPresenter.MergedRange" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.UpdateSelection">
      <summary>選択範囲状態を更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseMove" />イベントが発生する前に呼び出されます。
      </summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseEnter" />イベントが発生する前に呼び出されます。
      </summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeave" />イベントが発生する前に呼び出されます。
      </summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.UpdateMouseOver">
      <summary>マウスオーバー状態を更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.UpdateValidationState">
      <summary>検証状態を更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.UpdateLines">
      <summary>境界線を更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.UpdateCurrentCell">
      <summary>現在のセルを更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.UpdateEditingCell">
      <summary>編集中のセル状態を更新します。</summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />イベントが発生する前に呼び出されます。
      </summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" />イベントが発生する前に呼び出されます。
      </summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.RaisePropertyChanged(System.String)">
      <summary>プロパティ変更イベントを発生させます。</summary>
      <param name="propertyName">プロパティの名前。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.ChangeVisualStateSelection(System.Boolean)">
      <summary>Selection 表示状態グループの現在の表示状態をオブジェクトのプロパティに一致するように更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.ChangeVisualStateValidation(System.Boolean)">
      <summary>Validation 表示状態グループの現在の表示状態をオブジェクトのプロパティに一致するように更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.ChangeVisualStateCommon(System.Boolean)">
      <summary>Common 表示状態グループの現在の表示状態をオブジェクトのプロパティに一致するように更新します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCellPresenter.FocusStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCellPresenter.FocusStyle" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCellPresenter.CornerRadiusProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCellPresenter.CornerRadius" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCellPresenter.IsCurrentProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCellPresenter.IsCurrent" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCellPresenter.IsSelectedProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCellPresenter.IsSelected" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCellPresenter.IsEditingProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCellPresenter.IsEditing" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCellPresenter.ValidationStateProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCellPresenter.ValidationState" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCellPresenter.LeftLineBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCellPresenter.LeftLineBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCellPresenter.TopLineBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCellPresenter.TopLineBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCellPresenter.RightLineBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCellPresenter.RightLineBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCellPresenter.BottomLineBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCellPresenter.BottomLineBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCellPresenter.ValidationBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCellPresenter.ValidationBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCellPresenter.MouseOverBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCellPresenter.MouseOverBrush" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCellPresenter.PressedBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCellPresenter.PressedBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCellPresenter.SelectedBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCellPresenter.SelectedBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridCellPresenter" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.OnApplyTemplate">
      <summary>関連するコントロールのパーツを参照できるように、コントロールのテンプレートをロードします。</summary>
      <remarks>
        このメソッドは、アプリケーションコードや内部処理（再構築レイアウトパスなど）が
        <see cref="M:ApplyTemplate" />メソッドを呼び出すときに必ず呼び出されます。
      </remarks>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellPresenter.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>依存プロパティの実効値が更新されている場合に呼び出されます。</summary>
      <param name="e">変更されたプロパティと、その古い値と新しい値を示すイベントデータ。</param>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellPresenter.MergedRange">
      <summary>このセルが属する連結範囲を取得します。</summary>
      <value>連結範囲。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellPresenter.DataGrid">
      <summary>オーナーデータグリッドを取得します。</summary>
      <value>オーナーデータグリッド。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellPresenter.Row">
      <summary>行を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellPresenter.Column">
      <summary>列を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellPresenter.Cell">
      <summary>このプレゼンタに関連付けられているセルを取得します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridCellPresenter.MouseLeftButtonDown">
      <summary>
        マウスポインタが
        <see cref="T:System.Windows.UIElement" />内にあるときに、左マウスボタンが押される（またはスタイラスの先がタブレットに触れる）と発生します。
      </summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridCellPresenter.MouseLeftButtonUp">
      <summary>
        マウス（またはスタイラス）が
        <see cref="T:System.Windows.UIElement" />内にある（または
        <see cref="T:System.Windows.UIElement" />がマウスキャプチャを保持している）ときに、左マウスボタンを放す（またはスタイラスの先がタブレットから離れる）と発生します。
      </summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridCellPresenter.PropertyChanged">
      <summary>プロパティ値が変更されたときに発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellPresenter.FocusStyle">
      <summary>セルのフォーカス要素のスタイル。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellPresenter.CornerRadius">
      <summary>セルの角の丸みを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellPresenter.IsCurrent">
      <summary>これが現在のセルの場合は、true を返します。</summary>
      <remarks>
        このプロパティは、プレゼンタが属する
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />によって制御されます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellPresenter.IsSelected">
      <summary>セルが現在選択中の場合は、true を返します。</summary>
      <remarks>
        このプロパティは、プレゼンタが属する
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />によって制御されます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellPresenter.IsEditing">
      <summary>編集モードの場合は、true を返します。</summary>
      <remarks>
        このプロパティは、プレゼンタが属する
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />によって制御されます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellPresenter.ValidationState">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCellPresenter.ValidationState" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellPresenter.LeftLineBrush">
      <summary>
        左辺の描画に使用する
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellPresenter.TopLineBrush">
      <summary>
        上辺の描画に使用する
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellPresenter.RightLineBrush">
      <summary>
        右辺の描画に使用する
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellPresenter.BottomLineBrush">
      <summary>
        下辺の描画に使用する
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellPresenter.ValidationBackground">
      <summary>検証要素の背景の描画に使用されるブラシを取得または設定します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridCellPresenter.IsMouseOverChanged">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCellPresenter.IsMouseOver" />プロパティが変更されたときに発生するイベントです。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellPresenter.MouseOverBrush">
      <summary>
        マウスがあるセルの強調表示に使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellPresenter.PressedBrush">
      <summary>
        クリックされたボタンを描画するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellPresenter.SelectedBackground">
      <summary>
        選択されたコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridGroupingPresenter">
      <summary>グループ化パネル、またはグループ化パネルに列がない場合は別の要素を表示するプレゼンタ。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridGroupingPresenter.OnCreateAutomationPeer">
      <summary>コントロールのテストに使用される AutomationPeer を取得します。</summary>
      <returns>コントロールのテストに使用される AutomationPeer。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridGroupingPresenter.ChangeVisualStateGroups(System.Boolean)">
      <summary>Groups 表示状態グループの現在の表示状態をオブジェクトのプロパティに一致するように更新します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridGroupingPresenter.IsEmptyProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridGroupingPresenter.IsEmpty" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridGroupingPresenter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridGroupingPresenter" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridGroupingPresenter.OnApplyTemplate">
      <summary>関連するコントロールのパーツを参照できるように、コントロールのテンプレートをロードします。</summary>
      <remarks>
        このメソッドは、アプリケーションコードや内部処理（再構築レイアウトパスなど）が
        <see cref="M:ApplyTemplate" />メソッドを呼び出すときに必ず呼び出されます。
      </remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridGroupingPresenter.GroupsChanged">
      <summary>グループが変更されたときに発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridGroupingPresenter.Panel">
      <summary>グループ化パネルを取得します。</summary>
      <value>グループ化パネル。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridGroupingPresenter.IsEmpty">
      <summary>グループ化パネルが空かどうかを取得または設定します。</summary>
      <remarks>
        <para>このプロパティが false に設定されている場合、表示状態グループ「GroupingStates」は、表示状態を「Grouping」に変更します。</para>
        <para>
          このプロパティは、プレゼンタが属する
          <see cref="T:C1.WPF.DataGrid.C1DataGrid" />によって制御されます。
        </para>
      </remarks>
    </member>
    <member name="T:C1.WPF.DataGrid.C1RowIndexHeaderBehavior">
      <summary>行ヘッダーに行インデックスを表示します</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.C1RowIndexHeaderBehavior.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.C1RowIndexHeaderBehavior" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.C1RowIndexHeaderBehavior.GetRowIndexHeaderBehavior(C1.WPF.DataGrid.C1DataGrid)">
      <summary>ヘッダー動作の行インデックスを取得します。</summary>
      <param name="obj">行インデックスが表示されるデータグリッド。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1RowIndexHeaderBehavior.SetRowIndexHeaderBehavior(C1.WPF.DataGrid.C1DataGrid,C1.WPF.DataGrid.C1RowIndexHeaderBehavior)">
      <summary>行ヘッダーに行インデックスを表示する動作を設定します。</summary>
      <param name="obj">行インデックスが表示されるデータグリッド。</param>
      <param name="value">動作。</param>
    </member>
    <member name="F:C1.WPF.DataGrid.C1RowIndexHeaderBehavior.ValidationBehaviorProperty">
      <summary>ヘッダー動作の添付行インデックス。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1RowIndexHeaderBehavior.InitialIndexProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1RowIndexHeaderBehavior.InitialIndex" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1RowIndexHeaderBehavior.ModeProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1RowIndexHeaderBehavior.Mode" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1RowIndexHeaderBehavior.StretchHeaderProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1RowIndexHeaderBehavior.StretchHeader" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1RowIndexHeaderBehavior.InitialIndex">
      <summary>最初の行に表示されるインデックスを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1RowIndexHeaderBehavior.Mode">
      <summary>どのインデックスを表示するかを示すモードを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1RowIndexHeaderBehavior.StretchHeader">
      <summary>インデックスを表示するスペースがない場合に、ヘッダーを広げるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.C1ValidationBehavior">
      <summary>行のロード時とコミット後に自動的に行を検証します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.C1ValidationBehavior.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.C1ValidationBehavior" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.C1ValidationBehavior.GetValidationBehavior(C1.WPF.DataGrid.C1DataGrid)">
      <summary>検証動作を取得します。</summary>
      <param name="obj">検証が適用されるデータグリッド。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1ValidationBehavior.SetValidationBehavior(C1.WPF.DataGrid.C1DataGrid,C1.WPF.DataGrid.C1ValidationBehavior)">
      <summary>検証動作を設定します。</summary>
      <param name="obj">検証が適用されるデータグリッド。</param>
      <param name="value">動作。</param>
    </member>
    <member name="F:C1.WPF.DataGrid.C1ValidationBehavior.ValidationBehaviorProperty">
      <summary>アタッチされた高度なフィルタの動作。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridHeadersVisibility">
      <summary>行/列ヘッダーを表示するかどうかを指定します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridHeadersVisibility.All">
      <summary>行、列、およびコーナーヘッダーを表示します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridHeadersVisibility.Column">
      <summary>右上コーナーヘッダー付きで、列ヘッダーのみを表示します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridHeadersVisibility.Row">
      <summary>左下コーナーヘッダー付きで、行ヘッダーのみを表示します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridHeadersVisibility.None">
      <summary>どのヘッダーも表示しません。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridGridLinesVisibility">
      <summary>DataGrid の内部セルを区切るグリッド線のうち、どれを表示するかを定義する定数を指定します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridGridLinesVisibility.All">
      <summary>水平方向と垂直方向の両方のグリッド線が表示されます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridGridLinesVisibility.Horizontal">
      <summary>行を区切る水平方向のグリッド線のみが表示されます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridGridLinesVisibility.Vertical">
      <summary>列を区切る垂直方向のグリッド線のみが表示されます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridGridLinesVisibility.None">
      <summary>グリッド線は表示されません。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridNewRowVisibility">
      <summary>新しい行を配置する場所を指定します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridNewRowVisibility.Top">
      <summary>新しい行は上端に配置されます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridNewRowVisibility.Bottom">
      <summary>新しい行は下端に配置されます。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridRowDetailsVisibilityMode">
      <summary>行詳細の表示/非表示モードを指定します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowDetailsVisibilityMode.VisibleWhenSelected">
      <summary>ユーザーが行を選択すると、詳細が表示されます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowDetailsVisibilityMode.Visible">
      <summary>詳細は最初から表示されています。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowDetailsVisibilityMode.Collapsed">
      <summary>最初の状態では、詳細は折りたたまれています。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridColumnHeaderClickAction">
      <summary>ユーザーが列ヘッダー内でクリックするとアクションが発生するように指定します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumnHeaderClickAction.Sort">
      <summary>ユーザーが列ヘッダー内でクリックすると、ソートします。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumnHeaderClickAction.Select">
      <summary>ユーザーが列ヘッダー内でクリックすると、選択します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridColumnFreezing">
      <summary>列のすべての有効なフリーズ状態を決定します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumnFreezing.None">
      <summary>すべてのフリーズを指定できます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumnFreezing.Left">
      <summary>左フリーズにのみ適用されます。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridGroupRowPosition">
      <summary>グループ行の位置を示します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridGroupRowPosition.AboveData">
      <summary>グループ行は、行の項目の上に表示されます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridGroupRowPosition.BelowData">
      <summary>グループ行は、行の項目の下に表示されます。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridClipboardMode">
      <summary>
        ユーザーが
        <see cref="!:C1FlexGrid" />コントロールからクリップボードにデータをコピーできるかどうかと、列ヘッダー値が含まれるかどうかを指定する定数を定義します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridClipboardMode.None">
      <summary>クリップボードのサポートは無効です。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridClipboardMode.ExcludeHeader">
      <summary>ユーザーは選択したセルのテキスト値をクリップボードにコピーできます。行と列のヘッダー値は含まれません。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridClipboardMode.IncludeAllHeaders">
      <summary>ユーザーは選択したセルのテキスト値をクリップボードにコピーできます。行と列のヘッダー値が含まれます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridClipboardMode.IncludeColumnHeaders">
      <summary>ユーザーは選択したセルのテキスト値をクリップボードにコピーできます。列ヘッダー値が含まれます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridClipboardMode.IncludeRowHeaders">
      <summary>ユーザーは選択したセルのテキスト値をクリップボードにコピーできます。行ヘッダー値が含まれます。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridScrollMode">
      <summary>
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />でサポートされるスクロールモード。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridScrollMode.RealTime">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />の ThumbTrack イベントが発生するたびに、ページが更新されます。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridScrollMode.Deferred">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />の EndScroll イベントが発生すると、ページが更新されます。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.C1CollectionChangedEventArgs">
      <summary>データソースコレクション内の変更のイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1CollectionChangedEventArgs.AddedItems">
      <summary>Add 操作の影響を受ける項目を取得します。</summary>
      <remarks>追加された項目は、KeyValuePair [int,object] によって表されます。ここで、キーは項目が追加されたインデックスであり、値はデータ項目それ自体です。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1CollectionChangedEventArgs.RemovedItems">
      <summary>Remove 操作の影響を受ける項目を取得します。</summary>
      <remarks>削除された項目は、KeyValuePair[int,object] によって表されます。ここで、キーは削除された項目のインデックスであり、値はデータ項目それ自体です。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.C1CollectionChangedEventArgs.ItemPropertiesChanged">
      <summary>コレクションに含まれている項目のメタデータが変更された（その項目に対するプロパティの追加/削除があった）かどうかを示す値を取得または設定します。</summary>
      <remarks>C1DataGrid はこの情報を使用して、自動生成列を再作成します。</remarks>
      <value>
        プロパティが変更された場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="T:C1.WPF.DataGrid.C1CollectionChangedEventHandler">
      <summary>データソースコレクション内の変更が発生すると発生します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.Data.ICollectionViewFilterExtension">
      <summary>ICollectionViewFilterExtension には、フィルタ処理を実行するために C1DataGrid によって使用されるプロパティが含まれます。フィルタ処理のカスタマイズが必要な場合は、このインターフェイスを実装する必要があります。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.Data.ICollectionViewFilterExtension.C1FilterDescriptions">
      <summary>フィルタの説明を取得または設定します。このプロパティを設定する場合は、フィルタの説明を基底のデータに適用する必要があります。</summary>
      <value>c1 フィルタの説明。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.Data.ICollectionViewSortExtension">
      <summary>ICollectionViewFilterExtension には、ソートを実行するために C1DataGrid によって使用されるプロパティが含まれます。ソートのカスタマイズが必要な場合は、このインターフェイスを実装する必要があります。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.Data.ICollectionViewSortExtension.C1SortDescriptions">
      <summary>ソートの説明を取得または設定します。このプロパティを設定する場合は、ソートの説明を基底のデータに適用する必要があります。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.Data.ICollectionViewGroupExtension">
      <summary>ICollectionViewFilterExtension には、グループ化を実行するために C1DataGrid によって使用されるプロパティが含まれます。グループ化のカスタマイズが必要な場合は、このインターフェイスを実装する必要があります。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.Data.ICollectionViewGroupExtension.C1GroupDescriptions">
      <summary>グループの説明を取得または設定します。このプロパティを設定する場合は、グループの説明を基底のデータに適用する必要があります。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridCheckBoxColumn">
      <summary>
        そのセル内のブール値コンテンツのホストとして機能する
        <see cref="T:C1.WPF.DataGrid.DataGridColumn" />を表します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridBoundColumn">
      <summary>
        データプロパティに連結された
        <see cref="T:C1.WPF.DataGrid.DataGridColumn" />を表します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridColumn">
      <summary>グリッド内の１つの列を表します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridColumn" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.CellStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.CellStyle" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.CellContentStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.CellContentStyle" />依存プロパティを識別します。CellContentStyle のバッキングストアとして DependencyProperty を使用します。これにより、アニメーション、スタイル設定、連結などが可能になります。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.CellEditingContentStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.CellEditingContentStyle" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.GroupContentStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.GroupContentStyle" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.HeaderStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.HeaderStyle" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.HeaderProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.Header" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.GroupHeaderProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.GroupHeader" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.HorizontalAlignmentProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.HorizontalAlignment" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.VerticalAlignmentProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.VerticalAlignment" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.VisibilityProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.Visibility" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.MinWidthProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.MinWidth" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.MaxWidthProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.MaxWidth" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.WidthProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.Width" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.EditOnSelectionProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.EditOnSelection" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.SortMemberPathProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.SortMemberPath" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.FilterMemberPathProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.FilterMemberPath" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.CanUserSortProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.CanUserSort" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.CanUserGroupProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.CanUserGroup" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.CanUserFilterProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.CanUserFilter" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.CanUserResizeProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.CanUserResize" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.CanUserResizeRowsProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.CanUserResizeRows" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.CanUserMoveProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.CanUserMove" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.IsSelectableProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.IsSelectable" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.IsReadOnlyProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.IsReadOnly" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridColumn.TagProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.Tag" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.GetCellContentRecyclingKey(C1.WPF.DataGrid.DataGridRow)">
      <summary>
        後から再利用するためにセルコンテンツを共有プールに保存する際に使用するキー。同じ RecyclingKey を返す列は、同じセルコンテンツのインスタンスを共有する候補になります。
        <list type="number"><item><description>
              再利用キーと一致するセルコンテンツがない場合は、新しいセルコンテンツを作成するためにメソッド
              <see cref="M:C1.WPF.DataGrid.DataGridColumn.CreateCellContent(C1.WPF.DataGrid.DataGridRow)">CreateCellContent</see>が呼び出されます。
            </description></item><item><description>
              セルコンテンツが作成されるか、再利用されたセルコンテンツが取得されると、メソッド
              <see cref="M:C1.WPF.DataGrid.DataGridColumn.BindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridRow)">BindCellContent</see>が呼び出されます。
            </description></item><item><description>
              セルコンテンツが使用されていない場合は、メソッド
              <see cref="M:C1.WPF.DataGrid.DataGridColumn.UnbindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridRow)">UnbindCellContent</see>が呼び出され、セルコンテンツは、他のセルで将来使用するために保存されます。
            </description></item></list></summary>
      <remarks>
        通常、このメソッドは、メソッド
        <see cref="M:C1.WPF.DataGrid.DataGridColumn.CreateCellContent(C1.WPF.DataGrid.DataGridRow)">CreateCellContent</see>から返された要素の型を返します。
      </remarks>
      <param name="row">このパラメータは、行によって異なるセルコンテンツを設定するために使用できます。このパラメータは、ほとんどの場合使用されません。</param>
      <returns>再利用キー。再利用を無効にする場合は null。</returns>
      <example>
        <para>
          <c>return typeof(TextBlock);</c>
        </para>
      </example>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.CreateCellContent(C1.WPF.DataGrid.DataGridRow)">CreateCellContent</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.BindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridRow)">BindCellContent</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.UnbindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridRow)">UnbindCellContent</seealso>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.CreateCellContent(C1.WPF.DataGrid.DataGridRow)">
      <summary>この列のセル内に情報を表示するために使用されるビジュアル要素を作成します。</summary>
      <remarks>
        メソッド
        <see cref="M:C1.WPF.DataGrid.DataGridColumn.GetCellContentRecyclingKey(C1.WPF.DataGrid.DataGridRow)">GetCellContentRecyclingKey</see>から返された再利用キーと一致するセルコンテンツが共有プールで見つからない場合にのみ、このメソッドが呼び出されます。
      </remarks>
      <param name="row">このパラメータは、行によって異なるセルコンテンツを設定するために使用できます。このパラメータは、ほとんどの場合使用されません。</param>
      <returns>セルのコンテンツを表示するために使用されるビジュアル要素。</returns>
      <example>
        <c>return new TextBlock();</c>
      </example>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.GetCellContentRecyclingKey(C1.WPF.DataGrid.DataGridRow)">GetCellContentRecyclingKey</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.BindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridRow)">BindCellContent</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.UnbindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridRow)">UnbindCellContent</seealso>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.BindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridRow)">
      <summary>セルコンテンツプレゼンタを初期化します。このメソッドには、cellContent プロパティの設定を含める必要があります。対応する依存関係プロパティの SetBinding は「row.DataItem」です。ソースは、連結で直接設定できるか、cellContent の DataContext として設定できます。</summary>
      <remarks>このメソッドは、セルコンテンツが作成されるか、再利用されたセルコンテンツが取得された後で呼び出されます。</remarks>
      <param name="cellContent">
        セルコンテンツを表示するために連結されるビジュアル要素。受け取った cellContent が予期されたものではない場合は、通常、メソッド
        <see cref="M:C1.WPF.DataGrid.DataGridColumn.GetCellContentRecyclingKey(C1.WPF.DataGrid.DataGridRow)">GetCellContentRecyclingKey</see>をオーバーライドする必要があります。
      </param>
      <param name="row">セルが初期化される行。</param>
      <example>
        <code>var txt = (TextBlock)cellContent; txt.HorizontalAlignment = HorizontalAlignment; txt.VerticalAlignment = VerticalAlignment; Binding newBinding = CopyBinding(Binding); newBinding.Source = row.DataItem; txt.SetBinding(TextBlock.TextProperty, newBinding);</code>
      </example>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.GetCellContentRecyclingKey(C1.WPF.DataGrid.DataGridRow)">GetCellContentRecyclingKey</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.CreateCellContent(C1.WPF.DataGrid.DataGridRow)">CreateCellContent</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.UnbindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridRow)">UnbindCellContent</seealso>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.UnbindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridRow)">
      <summary>このメソッドは、セルコンテンツを再利用する前に呼び出されます。</summary>
      <remarks>
        <see cref="M:C1.WPF.DataGrid.DataGridColumn.BindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridRow)">BindCellContent</see>メソッドで DataContext を設定した場合は、メモリリークを防ぐために、ここでは null に設定する必要があります。
      </remarks>
      <param name="cellContent">行に現在連結されているビジュアル要素。</param>
      <param name="row">cellContent に現在連結されている行。</param>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.GetCellContentRecyclingKey(C1.WPF.DataGrid.DataGridRow)">GetCellContentRecyclingKey</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.CreateCellContent(C1.WPF.DataGrid.DataGridRow)">CreateCellContent</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.BindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridRow)">BindCellContent</seealso>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.GetCellEditingContent(C1.WPF.DataGrid.DataGridRow)">
      <summary>行が編集モードのとき、この列のセルに情報を表示するために使用されるビジュアル要素を取得します。</summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>返される要素は再利用されません。編集が完了すると、ビジュアル要素は破棄されます。リソースを解放する必要がある場合は、メソッド EndEdit で解放できます。</description>
          </item>
          <item>
            <description>返される要素の DataContext が設定されるため、連結の Source を設定する必要はありません。</description>
          </item>
        </list>
      </remarks>
      <param name="row">編集中のセルに対応する行。</param>
      <returns>編集モードのとき、セル内容を表すビジュアル要素。</returns>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.BeginEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)" />
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement)" />
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)" />
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.EndEdit(System.Windows.FrameworkElement)" />
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement)">
      <summary>派生クラスでオーバーライドされた場合、列内のセルが編集モードになったときに呼び出されます。</summary>
      <param name="editingElement">編集モードのとき、列のセルに表示される要素。</param>
      <returns>未編集の値。</returns>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.GetCellEditingContent(C1.WPF.DataGrid.DataGridRow)">GetCellEditingContent</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.BeginEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">BeginEdit</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">CancelCellEdit</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.EndEdit(System.Windows.FrameworkElement)">EndEdit</seealso>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>編集中の列のセルを指定された値に戻します。</summary>
      <remarks>uneditedValue パラメータに渡されるオブジェクトは、メソッド PrepareCellForEdit から取得されます。</remarks>
      <param name="editingElement">編集モードのとき、列のセルに表示される要素。</param>
      <param name="uneditedValue">編集中のセルが今回編集される前の値。</param>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.GetCellEditingContent(C1.WPF.DataGrid.DataGridRow)">GetCellEditingContent</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.BeginEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">BeginEdit</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement)">PrepareCellForEdit</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.EndEdit(System.Windows.FrameworkElement)">EndEdit</seealso>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.BeginEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>
        セルの編集を起動した
        <see cref="T:System.Windows.RoutedEventArgs" />を渡して、編集を開始します。
      </summary>
      <param name="editingElement">編集の要素。</param>
      <param name="routedEventArgs">
        イベントデータを含む
        <see cref="T:System.Windows.RoutedEventArgs" />インスタンス。
      </param>
      <returns>編集が開始された場合は True、それ以外の場合は False。編集はキャンセルされます。</returns>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.GetCellEditingContent(C1.WPF.DataGrid.DataGridRow)" />
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement)" />
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)" />
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.EndEdit(System.Windows.FrameworkElement)" />
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.EndEdit(System.Windows.FrameworkElement)">
      <summary>このメソッドは、ユーザーがセルの編集を終了すると呼び出されます。</summary>
      <param name="editingElement">編集の要素。</param>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.GetCellEditingContent(C1.WPF.DataGrid.DataGridRow)" />
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.BeginEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)" />
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement)" />
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)" />
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.GetFilter">
      <summary>この列に関連するフィルタを取得します。</summary>
      <remarks>
        デフォルトのフィルタを上書きするには、
        <see cref="P:C1.WPF.DataGrid.DataGridColumn.Filter" />プロパティを設定するか、この列の
        <see cref="E:C1.WPF.DataGrid.DataGridColumn.FilterLoading" />イベントと
        <see cref="E:C1DataGrid.FilterLoading" />イベントを監視します。
      </remarks>
      <returns>この列に関連するフィルタ。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.CreateGroupContent">
      <summary>
        この列に関連するグループ行に表示するために使用される
        <see cref="T:System.Windows.FrameworkElement">FrameworkElement</see>を作成して初期化します。
      </summary>
      <returns>
        この列に関連するグループ行に表示するために使用される
        <see cref="T:System.Windows.FrameworkElement">FrameworkElement</see></returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.GetColumnHeaderPresenterRecyclingKey">
      <summary>
        後から再利用するために列ヘッダーを共有プールに保存する際に使用するキー。同じ RecyclingKey を返す列は、同じ列ヘッダーのインスタンスを共有する候補になります。
        <list type="number"><item><description>
              再利用キーと一致する列ヘッダーがない場合は、新しい列ヘッダーを作成するためにメソッド
              <see cref="M:C1.WPF.DataGrid.DataGridColumn.CreateColumnHeaderPresenter">CreateColumnHeaderPresenter</see>が呼び出されます。
            </description></item><item><description>
              列ヘッダーが作成されるか、再利用された列ヘッダーが取得されると、メソッド
              <see cref="M:C1.WPF.DataGrid.DataGridColumn.BindColumnHeaderPresenter(C1.WPF.DataGrid.DataGridColumnHeaderPresenter)" />が呼び出されます。
            </description></item><item><description>
              列ヘッダーが使用されていない場合は、メソッド
              <see cref="M:C1.WPF.DataGrid.DataGridColumn.UnbindColumnHeaderPresenter(C1.WPF.DataGrid.DataGridColumnHeaderPresenter)" />が呼び出され、列ヘッダーは、他の列で将来使用するために保存されます。
            </description></item></list></summary>
      <remarks>
        <para>同じ RecyclingKey を返す列は、同じ列ヘッダーのインスタンスを共有する候補になります。</para>
        <para>
          列ヘッダープレゼンタのライフサイクル。
          <list type="number"><item><description>
                再利用キーと一致する列ヘッダーがない場合は、新しい列ヘッダーを作成するためにメソッド
                <see cref="M:C1.WPF.DataGrid.DataGridColumn.CreateColumnHeaderPresenter">CreateColumnHeaderPresenter</see>が呼び出されます。
              </description></item><item><description>
                列ヘッダーが作成されるか、再利用された列ヘッダーが取得されると、メソッド
                <see cref="M:C1.WPF.DataGrid.DataGridColumn.BindColumnHeaderPresenter(C1.WPF.DataGrid.DataGridColumnHeaderPresenter)" />が呼び出されます。
              </description></item><item><description>
                列ヘッダーが使用されていない場合は、メソッド
                <see cref="M:C1.WPF.DataGrid.DataGridColumn.UnbindColumnHeaderPresenter(C1.WPF.DataGrid.DataGridColumnHeaderPresenter)" />が呼び出され、列ヘッダーは、他の列で将来使用するために保存されます。
              </description></item></list></para>
      </remarks>
      <returns>再利用キー。再利用を無効にする場合は null。</returns>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.CreateColumnHeaderPresenter" />
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.BindColumnHeaderPresenter(C1.WPF.DataGrid.DataGridColumnHeaderPresenter)" />
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.UnbindColumnHeaderPresenter(C1.WPF.DataGrid.DataGridColumnHeaderPresenter)" />
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.CreateColumnHeaderPresenter">
      <summary>新しい列ヘッダープレゼンタを作成します。</summary>
      <returns>
      </returns>
      <remarks>再利用された列ヘッダーが使用される場合、このメソッドは呼び出されません。</remarks>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.GetColumnHeaderPresenterRecyclingKey" />
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.BindColumnHeaderPresenter(C1.WPF.DataGrid.DataGridColumnHeaderPresenter)" />
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.UnbindColumnHeaderPresenter(C1.WPF.DataGrid.DataGridColumnHeaderPresenter)" />
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.BindColumnHeaderPresenter(C1.WPF.DataGrid.DataGridColumnHeaderPresenter)">
      <summary>列ヘッダープレゼンタを初期化します。</summary>
      <remarks>このメソッドは、列ヘッダーが作成されるか、古い列ヘッダーが再利用された後に呼び出されます。</remarks>
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.GetColumnHeaderPresenterRecyclingKey" />
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.CreateColumnHeaderPresenter" />
      <seealso cref="M:C1.WPF.DataGrid.DataGridColumn.UnbindColumnHeaderPresenter(C1.WPF.DataGrid.DataGridColumnHeaderPresenter)" />
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.UnbindColumnHeaderPresenter(C1.WPF.DataGrid.DataGridColumnHeaderPresenter)">
      <summary>列ヘッダープレゼンタを終了処理します。</summary>
      <remarks>このメソッドは、列ヘッダーがアンロードされるときに呼び出されます。</remarks>
      <param name="columnHeaderPresenter">列ヘッダープレゼンタ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.GetCellText(C1.WPF.DataGrid.DataGridRow)">
      <summary>セル内に表示されるテキストを取得します。</summary>
      <remarks>
        <para>この機能は、データグリッドコンテンツを Excel または PDF に変換するなどのエクスポート操作で広く使用されます。</para>
        <para>
          <see cref="T:C1.WPF.DataGrid.DataGridCheckBoxColumn" />のように、セルにテキストが表示されない場合は、代替テキスト（「Yes」、「No」、「Undefined」など）が返されます。
        </para>
      </remarks>
      <param name="row">行。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.GetColumnText">
      <summary>列ヘッダー内に表示されるテキストを取得します。</summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.GetGroupText(C1.WPF.DataGrid.DataGridGroupRow)">
      <summary>グループ行内に表示されるテキストを取得します。</summary>
      <param name="groupRow">グループ行。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.GetCellValue(C1.WPF.DataGrid.DataGridRow)">
      <summary>この列と指定された行に属するセルによって表される値を取得します。</summary>
      <param name="Row">セルの決定に使用される行。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.SetCellValue(C1.WPF.DataGrid.DataGridRow,System.Object)">
      <summary>この列と指定された行に属するセルの値を設定します。</summary>
      <param name="Row">セルの決定に使用される行。</param>
      <param name="value">セルに設定される値。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.ToString">
      <summary>
        現在の
        <see cref="T:System.Object" />を表す
        <see cref="T:System.String" />を返します。
      </summary>
      <returns>
        現在の
        <see cref="T:System.Object" />を表す
        <see cref="T:System.String" />。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.OnPropertyChanged(System.String)">
      <summary>propertyName パラメータに対応する PropertyChanged イベントを発生させます。</summary>
      <param name="propertyName">プロパティの名前。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.OnPropertyChanged(System.String,System.Boolean)">
      <summary>propertyName パラメータに対応する PropertyChanged イベントを発生させます。</summary>
      <param name="propertyName">プロパティの名前。</param>
      <param name="refreshUIElements">
        <c>true</c>に設定すると、列のビジュアル要素がアンロードされます。
      </param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumn.Refresh">
      <summary>この列に属するセル、列ヘッダー、グループヘッダーなどのすべてのビジュアル要素をアンロードします。これにより、これらの要素が次のレイアウトパスで再生成されます。</summary>
      <remarks>
        <see cref="M:FrameworkElement.UpdateLayout" />メソッドを呼び出すことで、このメソッドの呼び出し後に強制的に要素を再生成できます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.DataGrid">
      <summary>オーナーデータグリッドを取得します。</summary>
      <value>オーナーデータグリッド。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.CellStyle">
      <summary>セルに適用されるスタイルを取得または設定します。</summary>
      <remarks>
        スタイルの TargetType は、
        <see cref="T:C1.WPF.DataGrid.DataGridCellPresenter" />である必要があります。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.CellContentStyle">
      <summary>読み取りモードのセルの内容に適用されるスタイルを取得または設定します。</summary>
      <remarks>
        このスタイルの TargetType は、
        <see cref="M:C1.WPF.DataGrid.DataGridColumn.CreateCellContent(C1.WPF.DataGrid.DataGridRow)" />メソッドで返されるオブジェクトの型である必要があります。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.CellEditingContentStyle">
      <summary>編集モードのセルの内容に適用されるスタイルを取得または設定します。</summary>
      <remarks>
        このスタイルの TargetType は、
        <see cref="M:C1.WPF.DataGrid.DataGridColumn.GetCellEditingContent(C1.WPF.DataGrid.DataGridRow)" />メソッドで返されるオブジェクトの型である必要があります。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.GroupContentStyle">
      <summary>グループの内容に適用されるスタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.HeaderStyle">
      <summary>ヘッダーのスタイルを取得または設定します。</summary>
      <remarks>
        スタイルの TargetType は、
        <see cref="T:DataGridGroupColumnHeaderPresenter" />型である必要があります。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.HeaderPresenter">
      <summary>この列のヘッダーに対応するプレゼンタを取得します。</summary>
      <value>ヘッダープレゼンタ。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.Header">
      <summary>ヘッダーのコンテンツを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.GroupHeader">
      <summary>グループ化パネルに表示されるヘッダーを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.HorizontalAlignment">
      <summary>セル内でのセル内容の水平方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.VerticalAlignment">
      <summary>セル内でのセル内容の垂直方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.Visibility">
      <summary>列が可視かどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.MinWidth">
      <summary>列の最小幅を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.MaxWidth">
      <summary>列の最大幅を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.Width">
      <summary>列の幅を取得または設定します。</summary>
      <remarks>
        <para>
          <see cref="T:C1.WPF.DataGrid.DataGridLength" />は、４種類のモードをサポートします。
          <list type="table"><listheader><term>タイプ</term><description>説明</description></listheader><item><term>Pixel</term><description>列の幅は、指定されたピクセル数と同じになります。</description></item><item><term>Auto</term><description>列の幅は、列のセルの内容によって決定されます。</description></item><item><term>Star</term><description>ビューポート領域が Star 列と AutoStar 列に分配されます。</description></item><item><term>AutoStar</term><description>各列には、十分に内容を表示できる領域が確保されます。余分な領域がある場合は、Star 列と AutoStar 列に分配されます。</description></item></list></para>
        <para>
          <see cref="P:C1.WPF.DataGrid.DataGridColumn.MinWidth" />および
          <see cref="P:C1.WPF.DataGrid.DataGridColumn.MaxWidth" />は、このプロパティより優先されます。つまり、Width=100 と MinWidth=110 を設定した場合、実際の値は 110 になります。
        </para>
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.ActualWidth">
      <summary>実際の幅をピクセル単位で取得します。</summary>
      <value>実際の幅（ピクセル単位）。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.EditOnSelection">
      <summary>true に設定されている場合は、セルを選択すると編集モードになります。それ以外の場合、編集モードにするには、一度クリックしてセルを選択してから、もう一度クリックする必要があります。</summary>
      <remarks>true に設定されている場合は、セルを選択すると編集モードになります。そうでない場合、編集モードにするには、一度クリックしてセルを選択してから、もう一度クリックする必要があります。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.SortMemberPath">
      <summary>どのメンバによってソートするかを示すプロパティ名、またはピリオドで区切られたプロパティ名の階層を取得または設定します。</summary>
      <value>ソートキーになるデータ項目メンバへのパス。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.ActualSortMemberPath">
      <summary>実際の SortMemberPath を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.GroupConverter">
      <summary>グループ化のカスタマイズに使用されるコンバータを取得または設定します。</summary>
      <remarks>グループ化アルゴリズムは、このコンバータを各データ項目に適用した結果のコレクションに適用されます。このコンバータを使用して、Outlook 風の日付グループを作成したり、数値をいくつかの範囲にグループ化することができます。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.GroupContentConverter">
      <summary>グループコンテンツコンバータを取得または設定します。</summary>
      <remarks>
        通常、この要素は、グループ化の値を表示する
        <see cref="T:System.Windows.Controls.TextBlock" />です。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.FilterMemberPath">
      <summary>どのメンバによってフィルタするかを示すプロパティ名、またはピリオドで区切られたプロパティ名の階層を取得または設定します。</summary>
      <value>フィルタキーになるデータ項目メンバへのパス。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.ActualFilterMemberPath">
      <summary>実際の FilterMemberPath を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.SortState">
      <summary>ソートの状態を取得または設定します。</summary>
      <remarks>
        ソート基準を変更するには、
        <see cref="M:C1DataGrid.SortBy" />を使用します。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.FilterState">
      <summary>フィルタの状態を取得または設定します。</summary>
      <remarks>
        フィルタ基準を変更するには、
        <see cref="M:C1DataGrid.FilterBy" />を使用します。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.GroupState">
      <summary>グループの状態を取得または設定します。</summary>
      <remarks>
        グループ基準を変更するには、
        <see cref="M:C1DataGrid.GroupBy" />を使用します。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.CanUserSort">
      <summary>ユーザーがこの列によってソートできるかどうかを示す値を取得または設定します。</summary>
      <value>
        ユーザーがこの列によってソートできる場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.ActualCanUserSort">
      <summary>ユーザーがこの列に対してソート操作を実行できるかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.CanUserGroup">
      <summary>ユーザーがこの列に基づいてグループ化できるかどうかを示す値を取得または設定します。</summary>
      <value>
        ユーザーがこの列に基づいてグループ化できる場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.ActualCanUserGroup">
      <summary>ユーザーがこの列に対してグループ操作を実行できるかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.CanUserFilter">
      <summary>ユーザーがこの列に基づいてフィルタできるかどうかを示す値を取得または設定します。</summary>
      <value>
        ユーザーがこの列に基づいてフィルタできる場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.ActualCanUserFilter">
      <summary>ユーザーがこの列に対してフィルタ操作を実行できるかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.CanUserResize">
      <summary>ユーザーが列のサイズを変更できるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.CanUserResizeRows">
      <summary>ユーザーが、この列内のセルを操作する行のサイズを変更できるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.CanUserMove">
      <summary>ユーザーがこの列を移動して並べ替えできるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.Name">
      <summary>列の名前を取得または設定します。</summary>
      <value>列の名前。</value>
      <remarks>
        このプロパティを使用して、
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />列コレクション内の列にアクセスできます。
        <code>grid.Columns["Name of the column"]</code></remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.Index">
      <summary>列のインデックスを取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.DisplayIndex">
      <summary>列の表示先のインデックスを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.IsSelectable">
      <summary>ユーザーがこの列から現在のセルを設定できるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.IsReadOnly">
      <summary>列内のセルが読み取り専用かどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.IsFrozen">
      <summary>この列がフリーズされているかどうかを示す値を取得します。</summary>
      <value>
        この列がフリーズされている場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.IsEditable">
      <summary>列内のセルが編集可能かどうかを取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.IsAutoGenerated">
      <summary>列が自動生成されるかどうかを示す値を取得します。</summary>
      <value>
        列が自動生成された場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.IsSelected">
      <summary>この列が選択されているかどうかを示す値を取得または設定します。</summary>
      <value>
        この行が選択されている場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.IsMouseOver">
      <summary>マウスが列の上にあるかどうかを示す値を取得します。</summary>
      <value>
        マウスが列の上にある場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.Filter">
      <summary>この列で使用されるフィルタを取得または設定します。</summary>
      <value>列ヘッダー内のオプションのドロップダウンが開かれると表示されるフィルタ。</value>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridColumn.WidthChanged">
      <summary>列幅が変更されると発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridColumn.FilterMemberPathChanged">
      <summary>フィルタメンバパスが変更されると発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridColumn.SortMemberPathChanged">
      <summary>ソートメンバパスが変更されると発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridColumn.VisibilityChanged">
      <summary>表示/非表示が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridColumn.FilterLoading">
      <summary>フィルタがロードされる前に発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.Tag">
      <summary>タグを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.HorizontalOffset">
      <summary>水平方向のオフセットをピクセル単位で取得します。</summary>
      <remarks>
        この列またはこれ以前の列がこれまでに表示されていない場合、このオフセットは推定値です。
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />のテンプレートがまだロードされていない場合は、double.Nan が返されます。
      </remarks>
      <value>垂直方向のオフセット（ピクセル単位）。</value>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridColumn.PropertyChanged">
      <summary>プロパティ値が変更されたときに発生します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridBoundColumn.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridBoundColumn" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridBoundColumn.#ctor(System.Reflection.PropertyInfo)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridBoundColumn" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="property">列の初期化に使用されるプロパティ情報です。</param>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridBoundColumn.AllowNullProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridBoundColumn.AllowNull" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridBoundColumn.TextWrappingProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridBoundColumn.TextWrapping" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridBoundColumn.TextTrimmingProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridBoundColumn.TextTrimming" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridBoundColumn.CreateCellContent(C1.WPF.DataGrid.DataGridRow)">
      <summary>この列のセル内に情報を表示するために使用される TextBlock を取得します。</summary>
      <returns>セル内容を表す TextBlock。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridBoundColumn.CopyBinding(System.Windows.Data.Binding,System.Windows.Markup.XmlLanguage)">
      <summary>連結オブジェクトをコピーします。</summary>
      <param name="binding">連結オブジェクト。</param>
      <param name="lang">連結コンバータで使用されるカルチャを決定します</param>
      <returns>連結オブジェクトのコピー</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridBoundColumn.GetActualFormat">
      <summary>Format プロパティや Binding プロパティの StringFormat などのさまざまなソースを考慮しながら、列に適用される書式設定を取得します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridBoundColumn.GetActualCulture">
      <summary>この列のテキストと番号の表示に使用されるカルチャを取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridBoundColumn.Binding">
      <summary>ビジュアル要素をデータに対して連結するために使用される連結オブジェクトを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridBoundColumn.Name">
      <summary>列の名前を取得または設定します。</summary>
      <remarks>
        このプロパティを使用して、
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />列コレクション内の列にアクセスできます。
        <code>grid.Columns["Name of the column"]</code>名前を指定しない場合は、その名前として
        <see cref="P:C1.WPF.DataGrid.DataGridBoundColumn.Binding" /><see cref="P:System.Windows.Data.Binding.Path" />が使用されます。
      </remarks>
      <value>列の名前。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridBoundColumn.ActualSortMemberPath">
      <summary>実際の SortMemberPath を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridBoundColumn.ActualFilterMemberPath">
      <summary>実際の FilterMemberPath を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridBoundColumn.Format">
      <summary>コンテンツの書式を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridBoundColumn.DefaultConverter">
      <summary>デフォルトのコンバータを取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridBoundColumn.AllowNull">
      <summary>null 可能な値が編集コントロールで許可されるかどうかを示す値を取得または設定します。</summary>
      <value>
        null 可能な値が編集コントロールで許可される場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridBoundColumn.TextWrapping">
      <summary>テキストの折り返しを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridBoundColumn.TextTrimming">
      <summary>テキストの折り返しを取得または設定します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCheckBoxColumn.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridCheckBoxColumn" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCheckBoxColumn.#ctor(System.Reflection.PropertyInfo)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridCheckBoxColumn" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="property">列の初期化に使用されるプロパティ情報です。</param>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCheckBoxColumn.CheckedTextProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCheckBoxColumn.CheckedText" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCheckBoxColumn.UncheckedTextProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCheckBoxColumn.UncheckedText" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCheckBoxColumn.UndefinedTextProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCheckBoxColumn.UndefinedText" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCheckBoxColumn.CreateCellContent(C1.WPF.DataGrid.DataGridRow)">
      <summary>この列のセル内に情報を表示するために使用される CheckBox を取得します。</summary>
      <returns>セル内容を表す CheckBox。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCheckBoxColumn.GetCellEditingContent(C1.WPF.DataGrid.DataGridRow)">
      <summary>行が編集モードのとき、この列のセルに情報を表示するために使用される CheckBox を取得します。</summary>
      <returns>編集モードのとき、セル内容を表す CheckBox。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCheckBoxColumn.GetCellText(C1.WPF.DataGrid.DataGridRow)">
      <summary>セル内に表示される値を表すテキストを取得します。</summary>
      <remarks>
        値が
        <c>true</c>の場合、表示されるテキストは、
        <see cref="P:C1.WPF.DataGrid.DataGridCheckBoxColumn.CheckedText" />プロパティの値になります。値が
        <c>false</c>の場合、表示されるテキストは、
        <see cref="P:C1.WPF.DataGrid.DataGridCheckBoxColumn.UncheckedText" />プロパティの値になります。値が
        <c>null</c>の場合、表示されるテキストは、
        <see cref="P:C1.WPF.DataGrid.DataGridCheckBoxColumn.UndefinedText" />プロパティの値になります。
      </remarks>
      <param name="row">照会されるセルを含む行。</param>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCheckBoxColumn.CheckedText">
      <summary>
        セルの値が
        <c>true</c>の場合に自動フィルタおよび
        <see cref="M:C1.WPF.DataGrid.DataGridCheckBoxColumn.GetCellText(C1.WPF.DataGrid.DataGridRow)" />メソッドによって表示されるテキストを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCheckBoxColumn.UncheckedText">
      <summary>
        セルの値が
        <c>false</c>の場合に自動フィルタおよび
        <see cref="M:C1.WPF.DataGrid.DataGridCheckBoxColumn.GetCellText(C1.WPF.DataGrid.DataGridRow)" />メソッドによって表示されるテキストを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCheckBoxColumn.UndefinedText">
      <summary>
        セルの値が
        <c>null</c>の場合に自動フィルタおよび
        <see cref="M:C1.WPF.DataGrid.DataGridCheckBoxColumn.GetCellText(C1.WPF.DataGrid.DataGridRow)" />メソッドによって表示されるテキストを取得または設定します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridCheckBoxConverter">
      <summary>渡されたチェックボックス列の設定に基づいて、Boolean 値を文字列値に変換します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCheckBoxConverter.#ctor(C1.WPF.DataGrid.DataGridCheckBoxColumn)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridCheckBoxConverter" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="column">列。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCheckBoxConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>値を変換します。</summary>
      <param name="value">連結ソースによって作成される値。</param>
      <param name="targetType">連結ターゲットプロパティの型。</param>
      <param name="parameter">使用するコンバータパラメータ。</param>
      <param name="culture">コンバータ内で使用するカルチャ。</param>
      <returns>変換後の値。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCheckBoxConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>値を変換します。</summary>
      <param name="value">連結ターゲットによって作成される値。</param>
      <param name="targetType">変換先の型。</param>
      <param name="parameter">使用するコンバータパラメータ。</param>
      <param name="culture">コンバータ内で使用するカルチャ。</param>
      <returns>変換後の値。</returns>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridCheckBoxFilter">
      <summary>チェックボックス列のデフォルトのフィルタを表します。</summary>
      <summary>チェックボックス列のデフォルトのフィルタを表します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.IDataGridFilter">
      <summary>C1DataGrid でのデータフィルタリングのサポートに必要なインターフェイスを定義します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.IDataGridFilter.Clear">
      <summary>現在のフィルタ条件とフィルタコントロールに含まれる値をクリアします。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.IDataGridFilter.Create">
      <summary>ユーザーによってフィルタコントロールで設定された現在のフィルタ条件に基づいて、フィルタを作成します。必要に応じて FilterChanged イベントを発生させます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.IDataGridFilter.Load(C1.WPF.DataGrid.DataGridFilterState)">
      <summary>フィルタとフィルタコントロールを目的の状態に初期化します。</summary>
      <param name="filterState">目的の状態。</param>
    </member>
    <member name="E:C1.WPF.DataGrid.IDataGridFilter.FilterChanged">
      <summary>フィルタ条件が変化すると発生します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.IDataGridFilterUnity">
      <summary>フィルタユニティの実装に使用されるインターフェイス。フィルタユニティは、ユーザーがフィルタ条件を変更するためのユーザーインターフェイスを表示します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.IDataGridFilterUnity.Filter">
      <summary>ユニティに表示されるフィルタを取得または設定します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCheckBoxFilter.RaisePropertyChanged(System.String)">
      <summary>
        <see cref="e:PropertyChanged" />イベントを発生させます。
      </summary>
      <param name="propertyName">変更されたプロパティの名前。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCheckBoxFilter.Clear">
      <summary>現在のフィルタ条件とフィルタコントロールに含まれる値をクリアします。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCheckBoxFilter.Create">
      <summary>ユーザーによってフィルタコントロールで設定された現在のフィルタ条件に基づいて、フィルタを作成します。必要に応じて FilterChanged イベントを発生させます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCheckBoxFilter.Load(C1.WPF.DataGrid.DataGridFilterState)">
      <summary>フィルタとフィルタコントロールを目的の状態に初期化します。</summary>
      <param name="filterState">目的の状態。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCheckBoxFilter.SetFilter(C1.WPF.DataGrid.DataGridFilterState)">
      <summary>コントロールにフィルタ状態を設定します。</summary>
      <param name="filterState">フィルタの状態。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCheckBoxFilter.GetFilter">
      <summary>コントロールからフィルタを取得します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCheckBoxFilter.MouseOverBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCheckBoxFilter.MouseOverBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCheckBoxFilter.PressedBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCheckBoxFilter.PressedBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCheckBoxFilter.InputBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCheckBoxFilter.InputBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCheckBoxFilter.InputForegroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCheckBoxFilter.InputForeground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridCheckBoxFilter.FocusBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridCheckBoxFilter.FocusBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCheckBoxFilter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridCheckBoxFilter" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCheckBoxFilter.OnApplyTemplate">
      <summary>関連するコントロールのパーツを参照できるように、コントロールのテンプレートをロードします。</summary>
      <remarks>
        このメソッドは、アプリケーションコードや内部処理（再構築レイアウトパスなど）が
        <see cref="M:ApplyTemplate" />メソッドを呼び出すときに必ず呼び出されます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCheckBoxFilter.IsChecked">
      <summary>チェックボックスがオンになっているかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCheckBoxFilter.IsThreeState">
      <summary>チェックボックスが３つの状態を持つかどうかを示す値を取得または設定します。</summary>
      <value>
        チェックボックスが３つの状態を持つ場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCheckBoxFilter.Filter">
      <summary>ユニティに表示されるフィルタを取得または設定します。</summary>
      <value>
      </value>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridCheckBoxFilter.PropertyChanged">
      <summary>プロパティ値が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridCheckBoxFilter.FilterChanged">
      <summary>フィルタ条件が変化すると発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCheckBoxFilter.MouseOverBrush">
      <summary>
        マウスがあるコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCheckBoxFilter.PressedBrush">
      <summary>
        クリックされたボタンを描画するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCheckBoxFilter.InputBackground">
      <summary>
        入力コントロールの背景を塗りつぶす
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCheckBoxFilter.InputForeground">
      <summary>
        入力コントロール内の選択されていないテキストに適用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCheckBoxFilter.FocusBrush">
      <summary>
        フォーカスがあるコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.ComboValueInfo">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridComboBoxFilter" />の値ラッパー。フィルタ値は
        <see cref="P:C1.WPF.DataGrid.DataGridComboBoxFilter.Values" />プロパティで設定されます。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.ComboValueInfo.Show">
      <summary>フィルタ値が表示されているかどうかを示す値を取得または設定します。</summary>
      <value>
        表示する場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.ComboValueInfo.Text">
      <summary>表示するテキストを取得または設定します。</summary>
      <value>テキスト。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.ComboValueInfo.Value">
      <summary>値を取得または設定します。</summary>
      <value>値。</value>
    </member>
    <member name="E:C1.WPF.DataGrid.ComboValueInfo.PropertyChanged">
      <summary>プロパティ値が変更されたときに発生します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridComboBoxColumn">
      <summary>
        そのセル内の列挙可能コンテンツのホストとして機能する
        <see cref="T:C1.WPF.DataGrid.DataGridColumn" />を表します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridComboBoxColumn.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridComboBoxColumn" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridComboBoxColumn.#ctor(System.Reflection.PropertyInfo)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridComboBoxColumn" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="property">列の初期化に使用されるプロパティ情報です。</param>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridComboBoxColumn.ItemsSourceProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridComboBoxColumn.ItemsSource" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridComboBoxColumn.ItemsSource">
      <summary>コンボボックスの項目ソースを取得または設定します。</summary>
      <remarks>
        このプロパティは、どのプロパティ値を表示するか、およびコンボボックスの項目が選択されたときにどのプロパティ値をデータ項目に設定するかを示すために、
        <see cref="P:C1.WPF.DataGrid.DataGridComboBoxColumn.DisplayMemberPath" />および
        <see cref="P:C1.WPF.DataGrid.DataGridComboBoxColumn.SelectedValuePath" />と組み合わせて使用されます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridComboBoxColumn.DisplayMemberPath">
      <summary>コンボの各項目ごとに表示されるプロパティの名前またはパスを取得または設定します。</summary>
      <value>コンボの各項目ごとに表示されるプロパティの名前またはパス。デフォルト値は、空の文字列（""）です。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridComboBoxColumn.SelectedValuePath">
      <summary>コンボの SelectedItem から SelectedValue を取得するために使用されるパスを取得または設定します。</summary>
      <value>SelectedValue を取得するために使用されるパスを返します。デフォルト値は、空の文字列です。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridComboBoxColumn.ItemTemplate">
      <summary>コンボボックスの項目に表示される項目テンプレートを取得または設定します。</summary>
      <remarks>
        このプロパティが設定されている場合、編集中のコンボボックスに
        <see cref="P:C1.WPF.DataGrid.DataGridComboBoxColumn.DisplayMemberPath" />プロパティは設定されません。
      </remarks>
      <value>項目テンプレート。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridComboBoxColumn.ItemConverter">
      <summary>項目と文字列を相互に変換するために使用される項目コンバータ。</summary>
      <remarks>ItemTemplate と組み合わせて使用して、項目の視覚化をカスタマイズする際の AutoComplete と編集をサポートします。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridComboBoxColumn.DropDownWidth">
      <summary>ドロップダウンボックスの幅を取得または設定します（自動的にサイズ指定する場合はゼロに設定）。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridComboBoxColumn.DropDownHeight">
      <summary>ドロップダウンの高さを取得または設定します（自動的にサイズ指定する場合はゼロに設定）。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridComboBoxColumn.MaxDropDownWidth">
      <summary>ドロップダウンボックスの最大幅制約を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridComboBoxColumn.MaxDropDownHeight">
      <summary>ドロップダウンボックスの最大高さ制約を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridComboBoxColumn.ItemNotFoundText">
      <summary>該当する項目が見つからない場合に表示されるテキストを取得または設定します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridComboBoxFilter">
      <summary>コンボボックス列のデフォルトのフィルタを表します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridComboBoxFilter.Clear">
      <summary>現在のフィルタ条件とフィルタコントロールに含まれる値をクリアします。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridComboBoxFilter.Create">
      <summary>ユーザーによってフィルタコントロールで設定された現在のフィルタ条件に基づいて、フィルタを作成します。必要に応じて FilterChanged イベントを発生させます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridComboBoxFilter.Load(C1.WPF.DataGrid.DataGridFilterState)">
      <summary>フィルタとフィルタコントロールを目的の状態に初期化します。</summary>
      <param name="filterState">目的の状態。</param>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridComboBoxFilter.ItemsSourceProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridComboBoxFilter.ItemsSource" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridComboBoxFilter.MouseOverBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridComboBoxFilter.MouseOverBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridComboBoxFilter.PressedBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridComboBoxFilter.PressedBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridComboBoxFilter.InputBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridComboBoxFilter.InputBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridComboBoxFilter.InputForegroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridComboBoxFilter.InputForeground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridComboBoxFilter.FocusBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridComboBoxFilter.FocusBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridComboBoxFilter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridComboBoxFilter" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridComboBoxFilter.OnApplyTemplate">
      <summary>関連するコントロールのパーツを参照できるように、コントロールのテンプレートをロードします。</summary>
      <remarks>
        このメソッドは、アプリケーションコードや内部処理（再構築レイアウトパスなど）が
        <see cref="M:ApplyTemplate" />メソッドを呼び出すときに必ず呼び出されます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridComboBoxFilter.Values">
      <summary>フィルタに表示されている値を取得または設定します。</summary>
      <value>フィルタに表示される値です。</value>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridComboBoxFilter.FilterChanged">
      <summary>フィルタ条件が変化すると発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridComboBoxFilter.ItemsSource">
      <summary>コンボの値を３つ（値、テキスト、チェック済み）のセットで取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridComboBoxFilter.MouseOverBrush">
      <summary>
        マウスがあるコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridComboBoxFilter.PressedBrush">
      <summary>
        クリックされたボタンを描画するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridComboBoxFilter.InputBackground">
      <summary>
        入力コントロールの背景を塗りつぶす
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridComboBoxFilter.InputForeground">
      <summary>
        入力コントロール内の選択されていないテキストに適用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridComboBoxFilter.FocusBrush">
      <summary>
        フォーカスがあるコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridMultiValueFilter">
      <summary>オプションごとにチェックボックスが付いた項目のリストから成るフィルタ。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridMultiValueFilter.Clear">
      <summary>現在のフィルタ条件とフィルタコントロールに含まれる値をクリアします。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridMultiValueFilter.Create">
      <summary>ユーザーによってフィルタコントロールで設定された現在のフィルタ条件に基づいて、フィルタを作成します。必要に応じて FilterChanged イベントを発生させます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridMultiValueFilter.Load(C1.WPF.DataGrid.DataGridFilterState)">
      <summary>フィルタとフィルタコントロールを目的の状態に初期化します。</summary>
      <param name="filterState">目的の状態。</param>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridMultiValueFilter.FilterProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridMultiValueFilter.Filter" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridMultiValueFilter.RaisePropertyChanged(System.String)">
      <summary>
        <see cref="e:PropertyChanged" />イベントを発生させます。
      </summary>
      <param name="propertyName">変更されたプロパティの名前。</param>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridMultiValueFilter.ValueMemberPathProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridMultiValueFilter.ValueMemberPath" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridMultiValueFilter.SetIsVirtualizing(System.Boolean)">
      <summary>このコントロールが仮想化スタックパネルを使用するかどうかを設定します。</summary>
      <param name="isVirtualized">
        <c>true</c>に設定すると、仮想化スタックパネルが使用されます。
      </param>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridMultiValueFilter.ItemStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridMultiValueFilter.ItemStyle" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridMultiValueFilter.MouseOverBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridMultiValueFilter.MouseOverBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridMultiValueFilter.PressedBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridMultiValueFilter.PressedBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridMultiValueFilter.InputBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridMultiValueFilter.InputBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridMultiValueFilter.InputForegroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridMultiValueFilter.InputForeground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridMultiValueFilter.FocusBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridMultiValueFilter.FocusBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridMultiValueFilter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridMultiValueFilter" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridMultiValueFilter.OnApplyTemplate">
      <summary>
        新しいテンプレートが適用されたときに、
        <see cref="T:C1.WPF.DataGrid.DataGridMultiValueFilter" />コントロールのビジュアルツリーを作成します。
      </summary>
      <remarks>
        このメソッドは、アプリケーションコードや内部処理（再構築レイアウトパスなど）が
        <see cref="M:ApplyTemplate" />メソッドを呼び出すときに必ず呼び出されます。
      </remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridMultiValueFilter.FilterChanged">
      <summary>フィルタ条件が変化すると発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridMultiValueFilter.Filter">
      <summary>ユニティに表示されるフィルタを取得または設定します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridMultiValueFilter.PropertyChanged">
      <summary>プロパティ値が変更されたときに発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridMultiValueFilter.ValueMemberPath">
      <summary>プロパティに含まれている値でフィルタ処理するために、ItemsSource に設定されているプロパティの名前または項目のパスを取得または設定します。</summary>
      <value>値メンバパス。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridMultiValueFilter.ItemStyle">
      <summary>リストの各項目に適用されるスタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridMultiValueFilter.MouseOverBrush">
      <summary>
        マウスがあるコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridMultiValueFilter.PressedBrush">
      <summary>
        クリックされたボタンを描画するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridMultiValueFilter.InputBackground">
      <summary>
        入力コントロールの背景を塗りつぶす
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridMultiValueFilter.InputForeground">
      <summary>
        入力コントロール内の選択されていないテキストに適用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridMultiValueFilter.FocusBrush">
      <summary>
        フォーカスがあるコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridBoundConverter">
      <summary>多目的コンバータ。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridBoundConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>UI で表示するためにソースデータをターゲットに渡す前に、ソースデータを変更します。</summary>
      <param name="value">ターゲットに渡されているソースデータ。</param>
      <param name="targetType">
        ターゲットの依存プロパティが求めるデータの
        <see cref="T:System.Type" />。
      </param>
      <param name="parameter">コンバータロジックで使用されるオプションパラメータ。</param>
      <param name="culture">変換のカルチャ。</param>
      <returns>ターゲットの依存プロパティに渡される値。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridBoundConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        ターゲットデータをソースオブジェクトに渡す前に、ターゲットデータを変更します。このメソッドは
        <see cref="F:System.Windows.Data.BindingMode.TwoWay" />結合でのみ呼び出されます。
      </summary>
      <param name="value">ソースに渡されているターゲットデータ。</param>
      <param name="targetType">
        ソースオブジェクトが求めるデータの
        <see cref="T:System.Type" />。
      </param>
      <param name="parameter">コンバータロジックで使用されるオプションパラメータ。</param>
      <param name="culture">変換のカルチャ。</param>
      <returns>ソースオブジェクトに渡される値。</returns>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridColumnHeaderTypeConverter">
      <summary>文字列とヘッダーのリストを相互に変換します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnHeaderTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>型コンバータが指定された型からこのコンバータの型にオブジェクトを変換できるかどうかを返します。</summary>
      <param name="context">書式コンテキストを提供するオブジェクト。</param>
      <param name="sourceType">変換元の型。</param>
      <returns>このコンバータが変換を実行できる場合は true、そうでない場合は false。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnHeaderTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定された値を目的の変換タイプのコンバータに変換します。</summary>
      <param name="context">書式コンテキストを提供するオブジェクト。</param>
      <param name="culture">
        現在のカルチャとして使用する
        <see cref="T:System.Globalization.CultureInfo" />。
      </param>
      <param name="value">このコンバータの型に変換する値。</param>
      <returns>変換後の値。</returns>
      <exception cref="T:System.NotImplementedException">
        基本
        <see cref="T:System.ComponentModel.TypeConverter" />で実装されていない
        <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />。
      </exception>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridRowHeaderColumn">
      <summary>行ヘッダーとして表示する列を表します。通常この列は左に配置され、行ヘッダーを結合するために同じ型の列と一緒に使用されます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderColumn.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridRowHeaderColumn" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderColumn.GetCellContentRecyclingKey(C1.WPF.DataGrid.DataGridRow)">
      <summary>セルコンテンツの再利用キーを取得します。</summary>
      <param name="row">行。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderColumn.CreateCellContent(C1.WPF.DataGrid.DataGridRow)">
      <summary>この列のセル内に情報を表示するために使用される TextBlock を取得します。</summary>
      <param name="row">
      </param>
      <returns>セル内容を表す TextBlock。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderColumn.BindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridRow)">
      <summary>セルのコンテンツを連結します。</summary>
      <param name="cellContent">セルのコンテンツ。</param>
      <param name="row">行。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderColumn.UnbindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridRow)">
      <summary>セルのコンテンツの連結を解除します。</summary>
      <param name="cellContent">セルのコンテンツ。</param>
      <param name="row">行。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderColumn.GetColumnHeaderPresenterRecyclingKey">
      <summary>後から再利用するために列ヘッダーを共有プールに保存する際に使用するキー。同じ RecyclingKey を返す列は、同じ列ヘッダーのインスタンスを共有する候補になります。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowHeaderColumn.CreateColumnHeaderPresenter">
      <summary>新しい列ヘッダープレゼンタを作成します。</summary>
      <returns>
      </returns>
      <remarks>再利用された列ヘッダーが使用される場合、このメソッドは呼び出されません。</remarks>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRowHeaderColumn.GetColumnHeaderPresenterRecyclingKey" />
    </member>
    <member name="T:C1.WPF.DataGrid.PreparingCellEditEventHandler">
      <summary>準備中のセル編集イベントを処理します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.CancellingCellEditEventHandler">
      <summary>キャンセル中のセル編集イベントを処理します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.EndingCellEditEventHandler">
      <summary>終了中のセル編集イベントを処理します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridTemplateColumn">
      <summary>
        テンプレートがユーザーによって指定される
        <see cref="T:C1.WPF.DataGrid.DataGridColumn" />を表します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridTemplateColumn.CreateCellContent(C1.WPF.DataGrid.DataGridRow)">
      <summary>この列のセル内に情報を表示するために使用される、CellTemplate を含む ContentControl を取得します。</summary>
      <returns>セル内容を表す ContentControl。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridTemplateColumn.GetCellEditingContent(C1.WPF.DataGrid.DataGridRow)">
      <summary>行が編集モードのときに、この列のセルヘの情報の表示に使用される CellEditingTemplate を含む ContentControl を取得します。</summary>
      <returns>編集モードのとき、セル内容を表す ContentControl。</returns>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridTemplateColumn.CellTemplate">
      <summary>データを表示するためのデータテンプレートを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridTemplateColumn.CellEditingTemplate">
      <summary>編集モードのデータの表示に使用されるデータテンプレートを取得または設定します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridTemplateColumn.PreparingCell">
      <summary>セルの編集準備中に発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridTemplateColumn.CancelingCell">
      <summary>セル編集がキャンセルされると発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridTemplateColumn.EndingCell">
      <summary>セルの終了中に発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridTemplateColumn.GettingCellValue">
      <summary>エクスポート操作でセルの値が要求されるときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridTemplateColumn.SettingCellValue">
      <summary>クリップボードからの貼り付けなどの操作によってセルの値が設定されようとしているときに発生します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridDateFilter">
      <summary>日付値のフィルタ。このコントロールは DataGridFilter コントロールの InnerControl として使用され、C1DataGrid の日付フィルタを作成します。 日付列のデフォルトのフィルタを表します。</summary>
      <summary>日付値のフィルタ。このコントロールは DataGridFilter コントロールの InnerControl として使用され、C1DataGrid の日付フィルタを作成します。 日付列のデフォルトのフィルタを表します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDateFilter.Clear">
      <summary>現在のフィルタ条件とフィルタコントロールに含まれる値をクリアします。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDateFilter.Create">
      <summary>ユーザーによってフィルタコントロールで設定された現在のフィルタ条件に基づいて、フィルタを作成します。必要に応じて FilterChanged イベントを発生させます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDateFilter.Load(C1.WPF.DataGrid.DataGridFilterState)">
      <summary>フィルタとフィルタコントロールを目的の状態に初期化します。</summary>
      <param name="filterState">目的の状態。</param>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateFilter.MouseOverBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridDateFilter.MouseOverBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateFilter.PressedBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridDateFilter.PressedBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateFilter.InputBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridDateFilter.InputBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateFilter.InputForegroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridDateFilter.InputForeground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateFilter.SelectedBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridDateFilter.SelectedBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateFilter.FocusBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridDateFilter.FocusBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDateFilter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridDateFilter" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDateFilter.OnApplyTemplate">
      <summary>関連するコントロールのパーツを参照できるように、コントロールのテンプレートをロードします。</summary>
      <remarks>
        このメソッドは、アプリケーションコードや内部処理（再構築レイアウトパスなど）が
        <see cref="M:ApplyTemplate" />メソッドを呼び出すときに必ず呼び出されます。
      </remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridDateFilter.FilterChanged">
      <summary>フィルタ条件が変化すると発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateFilter.MouseOverBrush">
      <summary>
        マウスがあるコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateFilter.PressedBrush">
      <summary>
        クリックされたボタンを描画するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateFilter.InputBackground">
      <summary>
        入力コントロールの背景を塗りつぶす
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateFilter.InputForeground">
      <summary>
        入力コントロール内の選択されていないテキストに適用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateFilter.SelectedBackground">
      <summary>
        選択されたコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateFilter.FocusBrush">
      <summary>
        フォーカスがあるコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridDateTimeColumn">
      <summary>
        <see cref="T:System.DateTime" />または
        <see cref="T:System.Nullable`1" />values を表すデータプロパティに連結された
        <see cref="T:C1.WPF.DataGrid.DataGridColumn" />を表します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDateTimeColumn.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridDateTimeColumn" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDateTimeColumn.#ctor(System.Reflection.PropertyInfo)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridDateTimeColumn" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="property">列の初期化に使用されるプロパティ情報です。</param>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateTimeColumn.DateFormatProperty">
      <summary>
        DatePicker 形式を指定する
        <see cref="T:System.Windows.Controls.DatePickerFormat" />値を取得または設定します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateTimeColumn.TimeFormatProperty">
      <summary>
        TimeEditor 形式を指定する
        <see cref="T:C1.WPF.DateTimeEditors.C1TimeEditorFormat" />値を取得または設定します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateTimeColumn.MinDateProperty">
      <summary>
        許可される最小の
        <see cref="T:System.DateTime" />値を取得または設定します。デフォルト値は
        <see cref="F:System.DateTime.MinValue" />です。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateTimeColumn.MaxDateProperty">
      <summary>
        許可される最大の
        <see cref="T:System.DateTime" />値を取得または設定します。デフォルト値は
        <see cref="F:System.DateTime.MaxValue" />です。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeColumn.EditMode">
      <summary>
        列の表現を指定する
        <see cref="T:C1.WPF.DataGrid.C1DateTimeColumnEditMode" />値を取得または設定します。デフォルト値は、
        <see cref="F:C1.WPF.DataGrid.C1DateTimeColumnEditMode.DateTime" />です。
      </summary>
      <remarks>
        <see cref="P:C1.WPF.DataGrid.DataGridDateTimeColumn.Format" />プロパティ値が外部コードによって変更されなかった場合、
        <see cref="P:C1.WPF.DataGrid.DataGridDateTimeColumn.EditMode" />プロパティ値に従って設定されます。
        <para>
          -
          <see cref="P:C1.WPF.DataGrid.DataGridDateTimeColumn.EditMode" />プロパティ値を C1DateTimeColumnEditMode.DateTime に設定すると、
          <see cref="P:C1.WPF.DataGrid.DataGridDateTimeColumn.Format" />プロパティ値は "g" に変更されます。
        </para><para>
          -
          <see cref="P:C1.WPF.DataGrid.DataGridDateTimeColumn.EditMode" />プロパティ値を C1DateTimeColumnEditMode.Date に設定すると、
          <see cref="P:C1.WPF.DataGrid.DataGridDateTimeColumn.Format" />プロパティ値は "d" に変更されます。
        </para><para>
          -
          <see cref="P:C1.WPF.DataGrid.DataGridDateTimeColumn.EditMode" />プロパティ値を C1DateTimeColumnEditMode.Time に設定すると、
          <see cref="P:C1.WPF.DataGrid.DataGridDateTimeColumn.Format" />プロパティ値は "t" に変更されます。
        </para></remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeColumn.DateFormat">
      <summary>
        DatePicker 形式を指定する
        <see cref="T:System.Windows.Controls.DatePickerFormat" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeColumn.TimeFormat">
      <summary>
        TimeEditor 形式を指定する
        <see cref="T:C1.WPF.DateTimeEditors.C1TimeEditorFormat" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeColumn.MinDate">
      <summary>
        許可される最小の
        <see cref="T:System.DateTime" />値を取得または設定します。デフォルト値は
        <see cref="F:System.DateTime.MinValue" />です。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeColumn.MaxDate">
      <summary>
        許可される最大の
        <see cref="T:System.DateTime" />値を取得または設定します。デフォルト値は
        <see cref="F:System.DateTime.MaxValue" />です。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeColumn.FirstDayOfWeek">
      <summary>
        週の最初の日を指定する
        <see cref="T:System.DayOfWeek" />値を取得または設定します。
      </summary>
      <remarks>このプロパティはコードまたは xaml によって設定された場合のみ正しく動作します。そうでない場合、実際の値は DataGrid.Language プロパティの値に依存します。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeColumn.Format">
      <summary>コンテンツの書式を取得または設定します。</summary>
      <remarks>
        <see cref="P:C1.WPF.DataGrid.DataGridDateTimeColumn.Format" />プロパティ値が外部コードによって変更されなかった場合、
        <see cref="P:C1.WPF.DataGrid.DataGridDateTimeColumn.EditMode" />プロパティ値に従って設定されます。
        <para>
          -
          <see cref="P:C1.WPF.DataGrid.DataGridDateTimeColumn.EditMode" />プロパティ値を C1DateTimeColumnEditMode.DateTime に設定すると、
          <see cref="P:C1.WPF.DataGrid.DataGridDateTimeColumn.Format" />プロパティ値は "g" に変更されます。
        </para><para>
          -
          <see cref="P:C1.WPF.DataGrid.DataGridDateTimeColumn.EditMode" />プロパティ値を C1DateTimeColumnEditMode.Date に設定すると、
          <see cref="P:C1.WPF.DataGrid.DataGridDateTimeColumn.Format" />プロパティ値は "d" に変更されます。
        </para><para>
          -
          <see cref="P:C1.WPF.DataGrid.DataGridDateTimeColumn.EditMode" />プロパティ値を C1DateTimeColumnEditMode.Time に設定すると、
          <see cref="P:C1.WPF.DataGrid.DataGridDateTimeColumn.Format" />プロパティ値は "t" に変更されます。
        </para></remarks>
    </member>
    <member name="T:C1.WPF.DataGrid.C1DateTimeColumnEditMode">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridDateTimeColumn" />編集モードを指定します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DateTimeColumnEditMode.Date">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridDateTimeColumn" />には日付ピッカーのみが表示されます。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DateTimeColumnEditMode.Time">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridDateTimeColumn" />コントロールには時刻エディタのみが表示されます。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DateTimeColumnEditMode.DateTime">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridDateTimeColumn" />コントロールには日付および時刻部分が表示されます。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DateTimeColumnEditMode.Custom">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridDateTimeColumn" />コントロールには、DateTime 値を含む編集可能なテキストボックスがカスタム形式で表示されます。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridDateTimeColumnEditMode">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridDateTimeColumn" />編集モードを指定します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateTimeColumnEditMode.Date">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridDateTimeColumn" />には日付ピッカーのみが表示されます。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateTimeColumnEditMode.Time">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridDateTimeColumn" />コントロールには時刻エディタのみが表示されます。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateTimeColumnEditMode.DateTime">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridDateTimeColumn" />コントロールには日付および時刻部分が表示されます。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateTimeColumnEditMode.Custom">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridDateTimeColumn" />コントロールには、DateTime 値を含む編集可能なテキストボックスがカスタム形式で表示されます。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridDateTimeConverter">
      <summary>DateTime コンバータ。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDateTimeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>UI で表示するためにソースデータをターゲットに渡す前に、ソースデータを変更します。</summary>
      <param name="value">ターゲットに渡されているソースデータ。</param>
      <param name="targetType">
        ターゲットの依存プロパティが求めるデータの
        <see cref="T:System.Type" />。
      </param>
      <param name="parameter">コンバータロジックで使用されるオプションパラメータ。</param>
      <param name="culture">変換のカルチャ。</param>
      <returns>ターゲットの依存プロパティに渡される値。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDateTimeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        ターゲットデータをソースオブジェクトに渡す前に、ターゲットデータを変更します。このメソッドは
        <see cref="F:System.Windows.Data.BindingMode.TwoWay" />結合でのみ呼び出されます。
      </summary>
      <param name="value">ソースに渡されているターゲットデータ。</param>
      <param name="targetType">
        ソースオブジェクトが求めるデータの
        <see cref="T:System.Type" />。
      </param>
      <param name="parameter">コンバータロジックで使用されるオプションパラメータ。</param>
      <param name="culture">変換のカルチャ。</param>
      <returns>ソースオブジェクトに渡される値。</returns>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridDateTimeFilter">
      <summary>DateTime 値のフィルタ。このコントロールは DataGridFilter コントロールの InnerControl として使用され、C1DataGrid の DateTime フィルタを作成します。 DateTime 列のデフォルトのフィルタを表します。</summary>
      <summary>DateTime 値のフィルタ。このコントロールは DataGridFilter コントロールの InnerControl として使用され、C1DataGrid の DateTime フィルタを作成します。 DateTime 列のデフォルトのフィルタを表します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDateTimeFilter.RaisePropertyChanged(System.String)">
      <summary>
        <see cref="e:PropertyChanged" />イベントを発生させます。
      </summary>
      <param name="propertyName">変更されたプロパティの名前。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDateTimeFilter.Clear">
      <summary>現在のフィルタ条件とフィルタコントロールに含まれる値をクリアします。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDateTimeFilter.Create">
      <summary>ユーザーによってフィルタコントロールで設定された現在のフィルタ条件に基づいて、フィルタを作成します。必要に応じて FilterChanged イベントを発生させます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDateTimeFilter.Load(C1.WPF.DataGrid.DataGridFilterState)">
      <summary>フィルタとフィルタコントロールを目的の状態に初期化します。</summary>
      <param name="filterState">目的の状態。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDateTimeFilter.SetFilter(C1.WPF.DataGrid.DataGridFilterState)">
      <summary>コントロールにフィルタを設定します。</summary>
      <param name="filterState">フィルタの状態。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDateTimeFilter.GetFilter">
      <summary>コントロールで収集された情報から、フィルタ状態オブジェクトを取得します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateTimeFilter.MouseOverBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridDateTimeFilter.MouseOverBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateTimeFilter.PressedBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridDateTimeFilter.PressedBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateTimeFilter.InputBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridDateTimeFilter.InputBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateTimeFilter.InputForegroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridDateTimeFilter.InputForeground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateTimeFilter.SelectedBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridDateTimeFilter.SelectedBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateTimeFilter.FocusBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridDateTimeFilter.FocusBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDateTimeFilter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridDateTimeFilter" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDateTimeFilter.OnApplyTemplate">
      <summary>関連するコントロールのパーツを参照できるように、コントロールのテンプレートをロードします。</summary>
      <remarks>
        このメソッドは、アプリケーションコードや内部処理（再構築レイアウトパスなど）が
        <see cref="M:ApplyTemplate" />メソッドを呼び出すときに必ず呼び出されます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeFilter.DateFormat">
      <summary>選択された日付の表示に使用する DatePickerFormat 形式を指定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeFilter.TimeFormat">
      <summary>選択された時刻の表示に使用する C1TimeEditorFormat 形式を指定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeFilter.EditMode">
      <summary>編集モードを定義します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeFilter.FirstDayOfWeek">
      <summary>週の始まりと見なされる日を取得または設定します。</summary>
      <remarks>このプロパティは、DataGridDateTimeColumn 列や関連するプロパティを設定している場合にのみ機能します。 そうでなければ、実際の値は DataGrid.Language プロパティの値に依存します。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeFilter.StartDate">
      <summary>フィルタコントロールに表示される開始日付を取得または設定します。</summary>
      <value>フィルタコントロールに表示される開始日付。null の場合、値は表示されません。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeFilter.EndDate">
      <summary>フィルタコントロールに表示される終了日付を取得または設定します。</summary>
      <value>フィルタコントロールに表示される終了日付。null の場合、値は表示されません。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeFilter.Filter">
      <summary>ユニティに表示されるフィルタを取得または設定します。</summary>
      <value>
      </value>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridDateTimeFilter.PropertyChanged">
      <summary>プロパティ値が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridDateTimeFilter.FilterChanged">
      <summary>フィルタ条件が変化すると発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeFilter.MouseOverBrush">
      <summary>
        マウスがあるコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeFilter.PressedBrush">
      <summary>
        クリックされたボタンを描画するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeFilter.InputBackground">
      <summary>
        入力コントロールの背景を塗りつぶす
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeFilter.InputForeground">
      <summary>
        入力コントロール内の選択されていないテキストに適用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeFilter.SelectedBackground">
      <summary>
        選択されたコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeFilter.FocusBrush">
      <summary>
        フォーカスがあるコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridHyperlinkColumn">
      <summary>
        そのセル内のハイパーリンクコンテンツのホストとして機能する
        <see cref="T:C1.WPF.DataGrid.DataGridColumn" />を表します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridHyperlinkColumn.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridHyperlinkColumn" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridHyperlinkColumn.#ctor(System.Reflection.PropertyInfo)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridHyperlinkColumn" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="property">プロパティ。</param>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridHyperlinkColumn.ContentTemplate">
      <summary>ハイパーリンクのコンテンツテンプレートを取得または設定します。</summary>
      <value>ハイパーリンクのコンテンツテンプレート。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridHyperlinkColumn.TargetName">
      <summary>Web ページを表示するターゲットウィンドウまたはフレームの名前、または移動先の Silverlight アプリケーション内のオブジェクトの名前を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridHyperlinkColumn.DefaultConverter">
      <summary>各ハイパーリンクで使用されるコンバータを取得します。</summary>
      <value>デフォルトのコンバータ。</value>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridHyperlinkColumn.Click">
      <summary>ハイパーリンクがクリックされたときに発生します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridUriConverter">
      <summary>URI と文字列を相互に変換します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridUriConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>UI で表示するためにソースデータをターゲットに渡す前に、ソースデータを変更します。</summary>
      <param name="value">ターゲットに渡されているソースデータ。</param>
      <param name="targetType">
        ターゲットの依存プロパティが求めるデータの
        <see cref="T:System.Type" />。
      </param>
      <param name="parameter">コンバータロジックで使用されるオプションパラメータ。</param>
      <param name="culture">変換のカルチャ。</param>
      <returns>ターゲットの依存プロパティに渡される値。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridUriConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        ターゲットデータをソースオブジェクトに渡す前に、ターゲットデータを変更します。このメソッドは
        <see cref="F:System.Windows.Data.BindingMode.TwoWay" />結合でのみ呼び出されます。
      </summary>
      <param name="value">ソースに渡されているターゲットデータ。</param>
      <param name="targetType">
        ソースオブジェクトが求めるデータの
        <see cref="T:System.Type" />。
      </param>
      <param name="parameter">コンバータロジックで使用されるオプションパラメータ。</param>
      <param name="culture">変換のカルチャ。</param>
      <returns>ソースオブジェクトに渡される値。</returns>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridImageColumn">
      <summary>
        そのセル内のイメージコンテンツのホストとして機能する
        <see cref="T:C1.WPF.DataGrid.DataGridColumn" />を表します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridImageColumn.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridImageColumn" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridImageColumn.#ctor(System.Reflection.PropertyInfo)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridImageColumn" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="property">列の初期化に使用されるプロパティ情報です。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridImageColumn.CreateCellContent(C1.WPF.DataGrid.DataGridRow)">
      <summary>この列のセル内に画像を表示するために使用される Image を取得します。</summary>
      <returns>セル内容を表す Image。</returns>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridImageColumn.Stretch">
      <summary>目的の四角形と同じ大きさに Image を引き伸ばす方法を記述する値を取得または設定します。</summary>
      <value>目的の四角形と同じ大きさに Image を引き伸ばす方法を記述する値。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridImageColumn.ImageNotFoundSource">
      <summary>実ソースに連結されていないすべての行のデフォルトのイメージソースを取得または設定します。デフォルトで画像を何も表示しないようにするには、null を設定します。</summary>
      <value>デフォルトのイメージソース。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridNumericColumn">
      <summary>
        そのセル内の数値コンテンツのホストとして機能する
        <see cref="T:C1.WPF.DataGrid.DataGridColumn" />を表します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridNumericColumn.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridNumericColumn" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridNumericColumn.#ctor(System.Reflection.PropertyInfo)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridNumericColumn" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="property">列の初期化に使用されるプロパティ情報です。</param>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridNumericColumn.MaximumProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridNumericColumn.Maximum" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridNumericColumn.MinimumProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridNumericColumn.Minimum" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridNumericColumn.RangeValidationModeProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridNumericColumn.RangeValidationMode" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridNumericColumn.ShowButtonsProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridNumericColumn.ShowButtons" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridNumericColumn.HandleUpDownKeysProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridNumericColumn.HandleUpDownKeys" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridNumericColumn.GetCellEditingContent(C1.WPF.DataGrid.DataGridRow)">
      <summary>行が編集モードのとき、この列のセルに情報を表示するために使用される C1NumericBox を取得します。</summary>
      <returns>編集モードのとき、セル内容を表す C1NumericBox。</returns>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNumericColumn.Maximum">
      <summary>
        <see cref="T:C1.Silverlight.C1NumericBox" />に入力できる最大値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNumericColumn.Minimum">
      <summary>
        <see cref="T:C1.Silverlight.C1NumericBox" />コントロールに入力できる最小値を取得または設定します。
      </summary>
      <value>最小値。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNumericColumn.RangeValidationMode">
      <summary>Minimum と Maximum 間の範囲を検証するために使用されるモードを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNumericColumn.ShowButtons">
      <summary>Increment または Decrement のボタンを表示または非表示にします。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNumericColumn.HandleUpDownKeys">
      <summary>ハンドルアップダウンキーかどうかを示す値を取得または設定します。</summary>
      <value>
        ハンドルアップダウンキーの場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridNumericConverter">
      <summary>数値コンバータ。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridNumericConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>UI で表示するためにソースデータをターゲットに渡す前に、ソースデータを変更します。</summary>
      <param name="value">ターゲットに渡されているソースデータ。</param>
      <param name="targetType">
        ターゲットの依存プロパティが求めるデータの
        <see cref="T:System.Type" />。
      </param>
      <param name="parameter">コンバータロジックで使用されるオプションパラメータ。</param>
      <param name="culture">変換のカルチャ。</param>
      <returns>ターゲットの依存プロパティに渡される値。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridNumericConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        ターゲットデータをソースオブジェクトに渡す前に、ターゲットデータを変更します。このメソッドは
        <see cref="F:System.Windows.Data.BindingMode.TwoWay" />結合でのみ呼び出されます。
      </summary>
      <param name="value">ソースに渡されているターゲットデータ。</param>
      <param name="targetType">
        ソースオブジェクトが求めるデータの
        <see cref="T:System.Type" />。
      </param>
      <param name="parameter">コンバータロジックで使用されるオプションパラメータ。</param>
      <param name="culture">変換のカルチャ。</param>
      <returns>ソースオブジェクトに渡される値。</returns>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridNumericFilter">
      <summary>数値列のデフォルトのフィルタを表します。 数値のフィルタ。このコントロールは DataGridFilter コントロールの InnerControl として使用され、C1DataGrid の数値フィルタを作成します。</summary>
      <summary>数値列のデフォルトのフィルタを表します。 数値のフィルタ。このコントロールは DataGridFilter コントロールの InnerControl として使用され、C1DataGrid の数値フィルタを作成します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridNumericFilter.RaisePropertyChanged(System.String)">
      <summary>
        <see cref="e:PropertyChanged" />イベントを発生させます。
      </summary>
      <param name="propertyName">変更されたプロパティの名前。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridNumericFilter.Create">
      <summary>ユーザーによってフィルタコントロールで設定された現在のフィルタ条件に基づいて、フィルタを作成します。必要に応じて FilterChanged イベントを発生させます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridNumericFilter.Clear">
      <summary>現在のフィルタ条件とフィルタコントロールに含まれる値をクリアします。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridNumericFilter.Load(C1.WPF.DataGrid.DataGridFilterState)">
      <summary>フィルタとフィルタコントロールを目的の状態に初期化します。</summary>
      <param name="filterState">目的の状態。</param>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridNumericFilter.MouseOverBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridNumericFilter.MouseOverBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridNumericFilter.PressedBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridNumericFilter.PressedBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridNumericFilter.InputBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridNumericFilter.InputBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridNumericFilter.InputForegroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridNumericFilter.InputForeground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridNumericFilter.SelectedBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridNumericFilter.SelectedBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridNumericFilter.FocusBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridNumericFilter.FocusBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridNumericFilter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridNumericFilter" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridNumericFilter.OnApplyTemplate">
      <summary>関連するコントロールのパーツを参照できるように、コントロールのテンプレートをロードします。</summary>
      <remarks>
        このメソッドは、アプリケーションコードや内部処理（再構築レイアウトパスなど）が
        <see cref="M:ApplyTemplate" />メソッドを呼び出すときに必ず呼び出されます。
      </remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridNumericFilter.FilterChanged">
      <summary>フィルタ条件が変化すると発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNumericFilter.Format">
      <summary>数値ボックスで使用される形式を取得または設定します。</summary>
      <value>数値ボックスで使用される形式。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNumericFilter.FirstComparator">
      <summary>１行目で使用されるコンパレータを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNumericFilter.FirstValue">
      <summary>１行目で使用される値を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNumericFilter.Combination">
      <summary>１行目と２行目の論理的な組み合わせを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNumericFilter.SecondComparator">
      <summary>２行目のコンパレータを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNumericFilter.SecondValue">
      <summary>２行目の値を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNumericFilter.Filter">
      <summary>ユニティに表示されるフィルタを取得または設定します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridNumericFilter.PropertyChanged">
      <summary>プロパティ値が変更されたときに発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNumericFilter.MouseOverBrush">
      <summary>
        マウスがあるコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNumericFilter.PressedBrush">
      <summary>
        クリックされたボタンを描画するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNumericFilter.InputBackground">
      <summary>
        入力コントロールの背景を塗りつぶす
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNumericFilter.InputForeground">
      <summary>
        入力コントロール内の選択されていないテキストに適用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNumericFilter.SelectedBackground">
      <summary>
        選択されたコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNumericFilter.FocusBrush">
      <summary>
        フォーカスがあるコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.NumericComparator">
      <summary>フィルタの設定に使用される数値コンパレータを表します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.NumericComparator.#ctor(C1.WPF.DataGrid.DataGridFilterOperation,System.String)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.NumericComparator" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="comparison">このオブジェクトが表す操作。</param>
      <param name="comparisonSymbol">この操作の比較記号。</param>
    </member>
    <member name="P:C1.WPF.DataGrid.NumericComparator.Comparison">
      <summary>比較を取得または設定します。</summary>
      <value>比較。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.NumericComparator.ComparisonSymbol">
      <summary>比較記号を取得または設定します。</summary>
      <value>比較記号。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridTextColumn">
      <summary>
        そのセル内のテキスト部分のホストとして機能する
        <see cref="T:C1.WPF.DataGrid.DataGridColumn" />を表します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridTextColumn.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridTextColumn" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridTextColumn.#ctor(System.Reflection.PropertyInfo)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridTextColumn" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="property">列の初期化に使用されるプロパティ情報です。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridTextColumn.GetCellEditingContent(C1.WPF.DataGrid.DataGridRow)">
      <summary>行が編集モードのとき、この列のセルに情報を表示するために使用される C1TextBoxBase を取得します。</summary>
      <returns>編集モードのとき、セル内容を表す C1TextBoxBase。</returns>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridTextColumn.MaxLength">
      <summary>ユーザーが入力できる最大文字数を決定する値を取得または設定します。</summary>
      <value>ユーザーが入力できる最大文字数。デフォルトは０です。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridTextFilter">
      <summary>テキスト列のデフォルトのフィルタを表します。 テキスト値のフィルタ。このコントロールは DataGridFilter コントロールの InnerControl として使用され、C1DataGrid のテキストフィルタを作成します。</summary>
      <summary>テキスト列のデフォルトのフィルタを表します。 テキスト値のフィルタ。このコントロールは DataGridFilter コントロールの InnerControl として使用され、C1DataGrid のテキストフィルタを作成します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridTextFilter.RaisePropertyChanged(System.String)">
      <summary>
        <see cref="e:PropertyChanged" />イベントを発生させます。
      </summary>
      <param name="propertyName">変更されたプロパティの名前。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridTextFilter.Create">
      <summary>ユーザーによってフィルタコントロールで設定された現在のフィルタ条件に基づいて、フィルタを作成します。必要に応じて FilterChanged イベントを発生させます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridTextFilter.Clear">
      <summary>現在のフィルタ条件とフィルタコントロールに含まれる値をクリアします。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridTextFilter.Load(C1.WPF.DataGrid.DataGridFilterState)">
      <summary>フィルタとフィルタコントロールを目的の状態に初期化します。</summary>
      <param name="filterState">目的の状態。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridTextFilter.GetFilter">
      <summary>コントロールで収集された情報から、フィルタ状態オブジェクトを取得します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridTextFilter.SetFilter(C1.WPF.DataGrid.DataGridFilterState)">
      <summary>コントロールにフィルタを設定します。</summary>
      <param name="filterState">フィルタの状態。</param>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridTextFilter.MouseOverBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridTextFilter.MouseOverBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridTextFilter.PressedBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridTextFilter.PressedBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridTextFilter.InputBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridTextFilter.InputBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridTextFilter.InputForegroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridTextFilter.InputForeground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridTextFilter.SelectedBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridTextFilter.SelectedBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridTextFilter.FocusBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridTextFilter.FocusBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridTextFilter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridTextFilter" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridTextFilter.OnApplyTemplate">
      <summary>関連するコントロールのパーツを参照できるように、コントロールのテンプレートをロードします。</summary>
      <remarks>
        このメソッドは、アプリケーションコードや内部処理（再構築レイアウトパスなど）が
        <see cref="M:ApplyTemplate" />メソッドを呼び出すときに必ず呼び出されます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridTextFilter.Filter">
      <summary>ユニティに表示されるフィルタを取得または設定します。</summary>
      <value>
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridTextFilter.SelectedOperation">
      <summary>ユニティに表示されるテキスト操作を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridTextFilter.FilterText">
      <summary>フィルタテキストを取得または設定します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridTextFilter.PropertyChanged">
      <summary>プロパティ値が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridTextFilter.FilterChanged">
      <summary>フィルタ条件が変化すると発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridTextFilter.MouseOverBrush">
      <summary>
        マウスがあるコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridTextFilter.PressedBrush">
      <summary>
        クリックされたボタンを描画するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridTextFilter.InputBackground">
      <summary>
        入力コントロールの背景を塗りつぶす
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridTextFilter.InputForeground">
      <summary>
        入力コントロール内の選択されていないテキストに適用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridTextFilter.SelectedBackground">
      <summary>
        選択されたコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridTextFilter.FocusBrush">
      <summary>
        フォーカスがあるコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridTextFilterEntry">
      <summary>DataGridTextFilter 内のサポートされている FilterOperation に対する入力。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridTextFilterEntry.Label">
      <summary>フィルタ操作のラベルを取得または設定します。</summary>
      <value>フィルタ操作のラベル。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridTextFilterEntry.Operation">
      <summary>このエントリに対応する操作を取得または設定します。</summary>
      <value>このエントリに対応する操作。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridCell">
      <summary>
        個々の
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />セルを表します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCell.op_Inequality(C1.WPF.DataGrid.DataGridCell,C1.WPF.DataGrid.DataGridCell)">
      <summary>演算子 != を実装します。</summary>
      <param name="obj">obj です。</param>
      <param name="obj2">obj2 です。</param>
      <returns>演算子の結果。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCell.op_Equality(C1.WPF.DataGrid.DataGridCell,C1.WPF.DataGrid.DataGridCell)">
      <summary>演算子 == を実装します。</summary>
      <param name="obj">obj です。</param>
      <param name="obj2">obj2 です。</param>
      <returns>演算子の結果。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCell.GetHashCode">
      <summary>特定のタイプのハッシュ関数として機能します。</summary>
      <returns>
        現在の
        <see cref="T:System.Object" />のハッシュコード。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCell.Equals(System.Object)">
      <summary>
        指定された
        <see cref="T:System.Object" />が現在の
        <see cref="T:System.Object" />と等しいかどうかを判定します。
      </summary>
      <param name="obj">
        現在の
        <see cref="T:System.Object" />と比較する
        <see cref="T:System.Object" />。
      </param>
      <returns>
        指定された
        <see cref="T:System.Object" />が現在の
        <see cref="T:System.Object" />と等しい場合は true、そうでない場合は false。
      </returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="obj" />パラメータが null。
      </exception>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCell.ToString">
      <summary>
        現在の
        <see cref="T:System.Object" />を表す
        <see cref="T:System.String" />を返します。
      </summary>
      <returns>
        現在の
        <see cref="T:System.Object" />を表す
        <see cref="T:System.String" />。
      </returns>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCell.DataGrid">
      <summary>オーナーデータグリッドを取得します。</summary>
      <value>オーナーデータグリッド。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCell.Column">
      <summary>列を取得します。</summary>
      <value>列。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCell.Row">
      <summary>行を取得します。</summary>
      <value>行。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCell.Presenter">
      <summary>セルの内容を取得します。</summary>
      <value>
        セルに対応する
        <see cref="T:C1.WPF.DataGrid.DataGridCellPresenter" />。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCell.IsEditable">
      <summary>このセルが編集可能かどうかを示す値を取得します。</summary>
      <value>
        このセルが編集可能である場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCell.IsEditing">
      <summary>このセルが編集中かどうかを示す値を取得します。</summary>
      <value>
        このセルが編集中である場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCell.IsSelectable">
      <summary>このセルが選択可能かどうかを示す値を取得します。</summary>
      <value>
        このセルが選択可能である場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCell.IsSelected">
      <summary>このセルが選択されているかどうかを示す値を取得します。</summary>
      <value>
        このセルが選択されている場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCell.IsMouseOver">
      <summary>マウスがセルの上にあるかどうかを示す値を取得します。</summary>
      <value>
        マウスがセルの上にある場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCell.Text">
      <summary>セル内のテキストを取得します。</summary>
      <value>セル内のテキスト。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCell.Value">
      <summary>セル内に表示される値を取得します。</summary>
      <value>セルに表示される値。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridColumnCollection">
      <summary>データグリッドの列のコレクションを表します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnCollection.ClearItems">
      <summary>
        <see cref="T:System.Collections.ObjectModel.Collection`1" />からすべての要素を削除します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnCollection.InsertItem(System.Int32,C1.WPF.DataGrid.DataGridColumn)">
      <summary>
        <see cref="T:System.Collections.ObjectModel.Collection`1" />内の指定されたインデックスに要素を挿入します。
      </summary>
      <param name="index">
        <paramref name="item" />が挿入される０から始まるインデックスです。
      </param>
      <param name="item">挿入するオブジェクト。参照タイプによって値は null の場合があります。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />がゼロより小さい、または
        <paramref name="index" />が
        <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />より大きい。
      </exception>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnCollection.RemoveItem(System.Int32)">
      <summary>
        <see cref="T:System.Collections.ObjectModel.Collection`1" />の指定されたインデックスにある要素を削除します。
      </summary>
      <param name="index">削除する要素の０から始まるインデックス。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />がゼロより小さい、または
        <paramref name="index" />が
        <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />以上。
      </exception>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnCollection.SetItem(System.Int32,C1.WPF.DataGrid.DataGridColumn)">
      <summary>指定されたインデックスにある要素を置き換えます。</summary>
      <param name="index">置換する要素の０から始まるインデックス。</param>
      <param name="item">指定されたインデックスに挿入する要素の新しい値。参照タイプによって値は null の場合があります。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />がゼロより小さい、または
        <paramref name="index" />が
        <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />より大きい。
      </exception>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnCollection.Contains(System.String)">
      <summary>指定された列名に関する列が含まれているかどうかを判定します。</summary>
      <param name="columnName">列の名前。</param>
      <returns>
        指定された列名に関する列が含まれている場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnCollection.GetFirstVisibleColumn">
      <summary>最初の表示されている列を取得します。</summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnCollection.GetLastVisibleColumn">
      <summary>最後の表示されている列を取得します。</summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnCollection.GetVisibleColumnsFromLeft">
      <summary>左端から始まる列のコレクションを取得します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnCollection.GetVisibleColumnsFromRight">
      <summary>右端から始まる列のコレクションを取得します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnCollection.GetVisibleColumnsFromIndex(System.Int32,System.Windows.Controls.Primitives.GeneratorDirection)">
      <summary>指定された位置および方向から列のコレクションを取得します。</summary>
      <param name="fromColumnIndex">最初の列のインデックス。</param>
      <param name="direction">返される列の方向。</param>
      <returns>
      </returns>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnCollection.Item(System.Int32)">
      <summary>
        指定された列インデックスの
        <see cref="T:C1.WPF.DataGrid.DataGridColumn" />を取得します。
      </summary>
      <value>
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnCollection.Item(System.String)">
      <summary>
        指定された列名の
        <see cref="T:C1.WPF.DataGrid.DataGridColumn" />を取得します。
      </summary>
      <value>
      </value>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridColumnCollection.CollectionChanged">
      <summary>コレクションの項目リストが変更されるか、コレクションがリセットされると発生します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridColumnValue`1">
      <summary>列に関する追加情報が含まれます。</summary>
      <typeparam name="T">情報の種類。</typeparam>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnValue`1.#ctor(C1.WPF.DataGrid.DataGridColumn,`0)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridColumnValue`1" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="column">列。</param>
      <param name="value">値。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnValue`1.Equals(System.Object)">
      <summary>
        指定された
        <see cref="T:System.Object" />がこのインスタンスと等しいかどうかを判定します。
      </summary>
      <param name="obj">
        このインスタンスと比較する
        <see cref="T:System.Object" />。
      </param>
      <returns>
        指定された
        <see cref="T:System.Object" />がこのインスタンスと等しい場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnValue`1.GetHashCode">
      <summary>このインスタンスのハッシュコードを返します。</summary>
      <returns>このインスタンスのハッシュコード。これは、ハッシュアルゴリズムやハッシュテーブルなどのデータ構造での使用に適しています。</returns>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnValue`1.Column">
      <summary>列を取得します。</summary>
      <value>列。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnValue`1.Value">
      <summary>列に関連付けらている情報を取得します。</summary>
      <value>列に関連付けられている情報。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridGroupRow">
      <summary>
        <see cref="N:C1.WPF.DataGrid" />グループ行を表します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridRow">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRow.DataGrid" />行を表します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridRow" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.OnLoaded">
      <summary>行コレクションに行が追加された後に呼び出されます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.OnUnloaded">
      <summary>行コレクションから行が削除される前に呼び出されます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRow.HeightProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRow.Height" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRow.MinHeightProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRow.MinHeight" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRow.MaxHeightProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRow.MaxHeight" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.Refresh(System.Boolean,System.Boolean,System.Boolean)">
      <summary>行に関連するすべてのビジュアル要素をアンロードします。</summary>
      <param name="refreshRow">
        <c>true</c>に設定すると、行プレゼンタがリフレッシュされます。
      </param>
      <param name="refreshCells">
        <c>true</c>に設定すると、セルプレゼンタがリフレッシュされます。
      </param>
      <param name="refreshRowHeader">
        <c>true</c>に設定すると、行ヘッダープレゼンタがリフレッシュされます。
      </param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.ToString">
      <summary>
        現在の
        <see cref="T:System.Object" />を表す
        <see cref="T:System.String" />を返します。
      </summary>
      <returns>
        現在の
        <see cref="T:System.Object" />を表す
        <see cref="T:System.String" />。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.GetDataItem">
      <summary>データ項目を取得します。</summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.GetCellText(C1.WPF.DataGrid.DataGridColumn)">
      <summary>この行と指定された列に属するセルに表示されるテキストを取得します。</summary>
      <param name="column">セルを決定する列。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.GetCellValue(C1.WPF.DataGrid.DataGridColumn)">
      <summary>この行と指定された列によって決定されるセルの値を取得します。</summary>
      <param name="column">セルを決定する列。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.SetCellValue(C1.WPF.DataGrid.DataGridColumn,System.Object)">
      <summary>この行と指定された列に属するセルの値を設定します。</summary>
      <param name="column">セルを決定する列。</param>
      <param name="value">セルに設定される値。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.GetRowPresenterRecyclingKey">
      <summary>
        後から再利用するために行プレゼンタを共有プールに保存する際に使用するキー。同じ RecyclingKey を返す行は、同じ行プレゼンタのインスタンスを共有する候補になります。
        <list type="number"><item><description>
              再利用キーと一致する行プレゼンタがない場合は、新しい行プレゼンタを作成するためにメソッド
              <see cref="M:C1.WPF.DataGrid.DataGridRow.CreateRowPresenter">CreateRowPresenter</see>が呼び出されます。
            </description></item><item><description>
              行プレゼンタが作成されるか、再利用された行プレゼンタが取得されると、メソッド
              <see cref="M:C1.WPF.DataGrid.DataGridRow.BindRowPresenter(C1.WPF.DataGrid.DataGridRowPresenter)">BindRowPresenter</see>が呼び出されます。
            </description></item><item><description>
              行プレゼンタが使用されていない場合は、メソッド
              <see cref="M:C1.WPF.DataGrid.DataGridRow.UnbindRowPresenter(C1.WPF.DataGrid.DataGridRowPresenter)">UnbindRowPresenter</see>が呼び出され、行プレゼンタは、他の行で将来使用するために保存されます。
            </description></item></list></summary>
      <remarks>
        通常、このメソッドは、メソッド
        <see cref="M:C1.WPF.DataGrid.DataGridRow.CreateRowPresenter">CreateRowPresenter</see>から返された要素の型を返します。
      </remarks>
      <returns>再利用キー。再利用を無効にする場合は null。</returns>
      <example>
        <para>
          <c>return typeof(DataGridRowPresenter);</c>
        </para>
      </example>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.CreateRowPresenter">CreateRowPresenter</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.BindRowPresenter(C1.WPF.DataGrid.DataGridRowPresenter)">BindRowPresenter</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.UnbindRowPresenter(C1.WPF.DataGrid.DataGridRowPresenter)">UnbindRowPresenter</seealso>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.CreateRowPresenter">
      <summary>新しい行プレゼンタを作成します。</summary>
      <remarks>
        メソッド
        <see cref="M:C1.WPF.DataGrid.DataGridRow.GetRowPresenterRecyclingKey">GetRowPresenterRecyclingKey</see>から返された再利用キーと一致する行プレゼンタが共有プールで見つからない場合にのみ、このメソッドが呼び出されます。
      </remarks>
      <returns>行プレゼンタ。</returns>
      <example>
        <c>return new DataGridRowPresenter();</c>
      </example>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.GetRowPresenterRecyclingKey">GetRowPresenterRecyclingKey</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.BindRowPresenter(C1.WPF.DataGrid.DataGridRowPresenter)">BindRowPresenter</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.UnbindRowPresenter(C1.WPF.DataGrid.DataGridRowPresenter)">UnbindRowPresenter</seealso>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.BindRowPresenter(C1.WPF.DataGrid.DataGridRowPresenter)">
      <summary>行プレゼンタを初期化します。</summary>
      <remarks>このメソッドは、行プレゼンタが作成されるか、再利用された行プレゼンタが取得された後で呼び出されます。</remarks>
      <param name="presenter">以前に作成された行プレゼンタ</param>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.GetRowPresenterRecyclingKey">GetRowPresenterRecyclingKey</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.CreateRowPresenter">CreateRowPresenter</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.UnbindRowPresenter(C1.WPF.DataGrid.DataGridRowPresenter)">UnbindRowPresenter</seealso>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.UnbindRowPresenter(C1.WPF.DataGrid.DataGridRowPresenter)">
      <summary>このメソッドは、行プレゼンタを再利用する前に呼び出されます。</summary>
      <param name="presenter">現在この行で使用されている行プレゼンタ。</param>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.GetRowPresenterRecyclingKey">GetRowPresenterRecyclingKey</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.CreateRowPresenter">CreateRowPresenter</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.BindRowPresenter(C1.WPF.DataGrid.DataGridRowPresenter)">BindRowPresenter</seealso>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.GetRowHeaderPresenterRecyclingKey">
      <summary>
        後から再利用するために行ヘッダーを共有プールに保存する際に使用するキー。同じ RecyclingKey を返す行は、同じ行ヘッダーのインスタンスを共有する候補になります。
        <list type="number"><item><description>
              再利用キーと一致する行ヘッダーがない場合は、新しい行ヘッダーを作成するためにメソッド
              <see cref="M:C1.WPF.DataGrid.DataGridRow.CreateRowHeaderPresenter">CreateRowHeaderPresenter</see>が呼び出されます。
            </description></item><item><description>
              行ヘッダーが作成されるか、再利用された行ヘッダーが取得されると、メソッド
              <see cref="M:C1.WPF.DataGrid.DataGridRow.BindRowHeaderPresenter(C1.WPF.DataGrid.DataGridRowHeaderPresenter)">BindRowHeaderPresenter</see>が呼び出されます。
            </description></item><item><description>
              行ヘッダーが使用されていない場合は、メソッド
              <see cref="M:C1.WPF.DataGrid.DataGridRow.UnbindRowHeaderPresenter(C1.WPF.DataGrid.DataGridRowHeaderPresenter)">UnbindRowHeaderPresenter</see>が呼び出され、行ヘッダーは、他の行で将来使用するために保存されます。
            </description></item></list></summary>
      <remarks>
        通常、このメソッドは、メソッド
        <see cref="M:C1.WPF.DataGrid.DataGridRow.CreateRowHeaderPresenter">CreateRowHeaderPresenter</see>から返された要素の型を返します。
      </remarks>
      <returns>再利用キー。再利用を無効にする場合は null。</returns>
      <example>
        <c>return typeof(DataGridRowHeaderPresenter);</c>
      </example>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.CreateRowHeaderPresenter">CreateRowHeaderPresenter</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.BindRowHeaderPresenter(C1.WPF.DataGrid.DataGridRowHeaderPresenter)">BindRowHeaderPresenter</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.UnbindRowHeaderPresenter(C1.WPF.DataGrid.DataGridRowHeaderPresenter)">UnbindRowHeaderPresenter</seealso>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.CreateRowHeaderPresenter">
      <summary>この行に対応する行ヘッダープレゼンタを取得します。</summary>
      <remarks>
        メソッド
        <see cref="M:C1.WPF.DataGrid.DataGridRow.GetCellContentRecyclingKey(C1.WPF.DataGrid.DataGridColumn)">GetRowHeaderPresenterRecyclingKey</see>から返された再利用キーと一致する行ヘッダープレゼンタが共有プールで見つからない場合にのみ、このメソッドが呼び出されます。
      </remarks>
      <returns>この行に対応する行ヘッダープレゼンタ。</returns>
      <example>
        <c>return new DataGridRowHeaderPresenter();</c>
      </example>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.GetRowHeaderPresenterRecyclingKey">GetRowHeaderPresenterRecyclingKey</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.BindRowHeaderPresenter(C1.WPF.DataGrid.DataGridRowHeaderPresenter)">BindRowHeaderPresenter</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.UnbindRowHeaderPresenter(C1.WPF.DataGrid.DataGridRowHeaderPresenter)">UnbindRowHeaderPresenter</seealso>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.BindRowHeaderPresenter(C1.WPF.DataGrid.DataGridRowHeaderPresenter)">
      <summary>行ヘッダープレゼンタを初期化します。</summary>
      <remarks>このメソッドは、行ヘッダーが作成されるか、再利用された行ヘッダーが取得された後で呼び出されます。</remarks>
      <param name="presenter">以前に作成された行ヘッダープレゼンタ</param>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.GetRowHeaderPresenterRecyclingKey">GetRowHeaderPresenterRecyclingKey</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.CreateRowHeaderPresenter">CreateRowHeaderPresenter</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.UnbindRowHeaderPresenter(C1.WPF.DataGrid.DataGridRowHeaderPresenter)">UnbindRowHeaderPresenter</seealso>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.UnbindRowHeaderPresenter(C1.WPF.DataGrid.DataGridRowHeaderPresenter)">
      <summary>このメソッドは、列ヘッダープレゼンタを再利用する前に呼び出されます。</summary>
      <param name="presenter">現在この行で使用されている行ヘッダープレゼンタ。</param>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.GetRowHeaderPresenterRecyclingKey">GetRowHeaderPresenterRecyclingKey</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.CreateRowHeaderPresenter">CreateRowHeaderPresenter</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.BindRowHeaderPresenter(C1.WPF.DataGrid.DataGridRowHeaderPresenter)">BindRowHeaderPresenter</seealso>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.HasCellPresenter(C1.WPF.DataGrid.DataGridColumn)">
      <summary>この行の指定された列にセルが存在する必要があるかどうかを決定します。</summary>
      <param name="column">セルプレゼンタを要求された列。</param>
      <returns>
        この行の指定された列にセルが存在する必要がある場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
      <example>サマリーを持つグループ行では、集計関数を指定する列にセルが存在する必要がありますが、それ以外の列にセルはありません。</example>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.GetCellContentRecyclingKey(C1.WPF.DataGrid.DataGridColumn)">
      <summary>
        後から再利用するためにセルコンテンツを共有プールに保存する際に使用するキー。同じ RecyclingKey を返す列は、同じセルコンテンツのインスタンスを共有する候補になります。
        <list type="number"><item><description>
              再利用キーと一致するセルコンテンツがない場合は、新しいセルコンテンツを作成するためにメソッド
              <see cref="M:C1.WPF.DataGrid.DataGridRow.CreateCellContent(C1.WPF.DataGrid.DataGridColumn)">CreateCellContent</see>が呼び出されます。
            </description></item><item><description>
              セルコンテンツが作成されるか、再利用されたセルコンテンツが取得されると、メソッド
              <see cref="M:C1.WPF.DataGrid.DataGridRow.BindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridColumn)">BindCellContent</see>が呼び出されます。
            </description></item><item><description>
              セルコンテンツが使用されていない場合は、メソッド
              <see cref="M:C1.WPF.DataGrid.DataGridRow.UnbindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridColumn)">UnbindCellContent</see>が呼び出され、セルコンテンツは、他のセルで将来使用するために保存されます。
            </description></item></list></summary>
      <remarks>通常、このメソッドは、パラメータから渡された列の再利用キーを返します。FilterRow（各セルにフィルタ処理される TextBox を含む行）のように、セルのコンテンツが列に依存しない場合があります。その場合、このメソッドはオーバーライドされます。</remarks>
      <param name="column">再利用キーを要求されている列。</param>
      <returns>再利用キー。再利用を無効にする場合は null。</returns>
      <example>
        <c>return column.GetCellContentRecyclingKey(this);</c>
      </example>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.CreateCellContent(C1.WPF.DataGrid.DataGridColumn)">CreateCellContent</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.BindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridColumn)">BindCellContent</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.UnbindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridColumn)">UnbindCellContent</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.GetCellContentStyle(C1.WPF.DataGrid.DataGridColumn)">GetCellContentStyle</seealso>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.CreateCellContent(C1.WPF.DataGrid.DataGridColumn)">
      <summary>この列のセル内に情報を表示するために使用されるビジュアル要素を作成します。</summary>
      <remarks>
        メソッド
        <see cref="M:C1.WPF.DataGrid.DataGridRow.GetCellContentRecyclingKey(C1.WPF.DataGrid.DataGridColumn)">GetCellContentRecyclingKey</see>から返された再利用キーと一致するセルコンテンツが共有プールで見つからない場合にのみ、このメソッドが呼び出されます。
      </remarks>
      <param name="column">セルコンテンツ要素を要求されている列。</param>
      <returns>セルのコンテンツを表示するために使用されるビジュアル要素。</returns>
      <example>
        <c>return column.CreateCellContent(this);</c>
      </example>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.GetCellContentRecyclingKey(C1.WPF.DataGrid.DataGridColumn)">GetCellContentRecyclingKey</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.BindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridColumn)">BindCellContent</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.UnbindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridColumn)">UnbindCellContent</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.GetCellContentStyle(C1.WPF.DataGrid.DataGridColumn)">GetCellContentStyle</seealso>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.BindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridColumn)">
      <summary>セルコンテンツプレゼンタを初期化します。このメソッドには、cellContent プロパティの設定を含める必要があります。対応する依存関係プロパティの SetBinding は「row.DataItem」です。ソースは、連結で直接設定できるか、cellContent の DataContext として設定できます。</summary>
      <remarks>このメソッドは、セルコンテンツが作成されるか、再利用されたセルコンテンツが取得された後で呼び出されます。</remarks>
      <param name="cellContent">
        セルコンテンツを表示するために連結されるビジュアル要素。受け取った cellContent が予期されたものではない場合は、通常、メソッド
        <see cref="M:C1.WPF.DataGrid.DataGridRow.GetCellContentRecyclingKey(C1.WPF.DataGrid.DataGridColumn)">GetCellContentRecyclingKey</see>をオーバーライドする必要があります。
      </param>
      <param name="column">セルコンテンツが初期化される列。</param>
      <example>
        <para>
          <c>column.BindCellContent(cellContent, this);</c>
        </para>
      </example>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.GetCellContentRecyclingKey(C1.WPF.DataGrid.DataGridColumn)">GetCellContentRecyclingKey</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.CreateCellContent(C1.WPF.DataGrid.DataGridColumn)">CreateCellContent</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.UnbindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridColumn)">UnbindCellContent</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.GetCellContentStyle(C1.WPF.DataGrid.DataGridColumn)">GetCellContentStyle</seealso>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.UnbindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridColumn)">
      <summary>このメソッドは、セルコンテンツを再利用する前に呼び出されます。</summary>
      <remarks>
        <see cref="M:C1.WPF.DataGrid.DataGridRow.BindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridColumn)">BindCellContent</see>メソッドで DataContext を設定した場合は、メモリリークを防ぐために、ここでは null に設定する必要があります。
      </remarks>
      <param name="cellContent">行に現在連結されているビジュアル要素。</param>
      <param name="column">セルコンテンツが現在連結されている列。</param>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.GetCellContentRecyclingKey(C1.WPF.DataGrid.DataGridColumn)">GetCellContentRecyclingKey</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.CreateCellContent(C1.WPF.DataGrid.DataGridColumn)">CreateCellContent</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.BindCellContent(System.Windows.FrameworkElement,C1.WPF.DataGrid.DataGridColumn)">BindCellContent</seealso>
      <seealso cref="M:C1.WPF.DataGrid.DataGridRow.GetCellContentStyle(C1.WPF.DataGrid.DataGridColumn)">GetCellContentStyle</seealso>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.GetCellContentStyle(C1.WPF.DataGrid.DataGridColumn)">
      <summary>セルコンテンツに適用されるスタイルを取得します。</summary>
      <param name="column">セルコンテンツのスタイルを要求された列。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.BeginRowEdit">
      <summary>セルの編集を開始します。</summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.CancelRowEdit">
      <summary>行の編集をキャンセルします。</summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.CommitRowEdit">
      <summary>行の編集を適用します。</summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.OnBeginningRowEdit">
      <summary>行が編集される前に呼び出されます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.OnBeganRowEdit">
      <summary>行が編集されるときに呼び出されます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.OnCancelingRowEdit">
      <summary>行の変更がキャンセルされる前に呼び出されます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.OnCanceledRowEdit">
      <summary>行の変更がキャンセルされるときに呼び出されます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.OnCommitingRowEdit">
      <summary>行の変更がコミットされる前に呼び出されます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.OnCommittedRowEdit">
      <summary>行の変更がコミットされるときに呼び出されます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.Validate">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRow.DataItem" />を検証します。独自の検証ルールを実装するには、IDataErrorInfo または INotifyDataErrorInfo を実装します。
      </summary>
      <remarks>
        このメソッドが実行された後、
        <see cref="P:C1.WPF.DataGrid.DataGridRow.ValidationResults" />コレクションはエラーを含みます。
      </remarks>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.Validate(System.Boolean)">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridRow.DataItem" />を検証します。独自の検証ルールを実装するには、IDataErrorInfo または INotifyDataErrorInfo を実装します。
      </summary>
      <remarks>
        このメソッドが実行された後、
        <see cref="P:C1.WPF.DataGrid.DataGridRow.ValidationResults" />コレクションはエラーを含みます。
      </remarks>
      <param name="validateAllProperties">
        <c>true</c>に設定すると、すべてのプロパティが検証されます。
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRow.OnPropertyChanged(System.String)">
      <summary>
        <see cref="E:PropertyChanged" />イベントを発生させます。
      </summary>
      <param name="propertyName">変更されたプロパティの名前。</param>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridRow.HeightChanged">
      <summary>高さが変更された後に発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridRow.IsEditingChanged">
      <summary>IsEditing 値が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridRow.DetailsVisibilityChanged">
      <summary>ShowDetails 値が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridRow.VisibilityChanged">
      <summary>行の表示状態が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridRow.CanUserResizeChanged">
      <summary>CanUserResize 値が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridRow.CanUserToggleDetailsChanged">
      <summary>CanUserToggleDetails 値が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridRow.Loaded">
      <summary>行のコレクションに行が追加された後に発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.DataGrid">
      <summary>データグリッドを取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.ParentCollection">
      <summary>親のコレクションを取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.ShowVerticalFreezingSeparator">
      <summary>垂直方向のフリーズセパレータを表示するかどうかを示す値を取得します。</summary>
      <value>
        垂直方向のフリーズセパレータを表示する場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.Index">
      <summary>行のインデックスを取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.Type">
      <summary>行のタイプを取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.Level">
      <summary>行のレベルを取得します。グリッドデータがグループ化されている場合、この情報を使って行がインデントされます。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.IndentWidth">
      <summary>インデントの幅を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.Height">
      <summary>
        高さを取得または設定します。
        <remarks>スター長さは許可されていません。</remarks></summary>
      <remarks>
        <para>
          <see cref="T:C1.WPF.DataGrid.DataGridLength" />は４つのモードをサポートしますが、行では
          <see cref="F:C1.WPF.DataGrid.DataGridUnitType.Pixel" />と
          <see cref="F:C1.WPF.DataGrid.DataGridUnitType.Auto" />のみがサポートされます。
          <list type="table"><listheader><term>タイプ</term><description>説明</description></listheader><item><term>Pixel</term><description>行の高さは、指定されたピクセル数と同じになります。</description></item><item><term>Auto</term><description>行の高さは、行のセルの内容によって決定されます。</description></item></list></para>
        <para>
          <see cref="P:C1.WPF.DataGrid.DataGridRow.MinHeight" />および
          <see cref="P:C1.WPF.DataGrid.DataGridRow.MaxHeight" />は、このプロパティより優先されます。つまり、Height=100 と MinHeight=110 を設定した場合、実際の値は 110 になります。
        </para>
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.MinHeight">
      <summary>許可される最小の高さ（ピクセル単位）を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.MaxHeight">
      <summary>許可される最大の高さ（ピクセル単位）を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.ActualHeight">
      <summary>実際の高さをピクセル単位で取得します。</summary>
      <value>実際の高さ（ピクセル単位）。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.ActualHeightWithoutDetails">
      <summary>実際の高さをピクセル単位で取得します（詳細は含みません）。</summary>
      <value>実際の高さ（ピクセル単位）。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.CanUserResize">
      <summary>この行がユーザーによってリサイズ可能かどうかを示す値を取得または設定します。</summary>
      <value>
        この行がユーザーによってリサイズ可能な場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.CanUserToggleDetails">
      <summary>ユーザーが詳細をトグルできるかどうかを示す値を取得または設定します。</summary>
      <value>
        ユーザーが詳細をトグルできる場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.ActualCanUserToggleDetails">
      <summary>親 DataGrid のプロパティを考慮して、ユーザーが詳細の表示を切り替えることができるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.DataItem">
      <summary>行のデータを取得します。</summary>
      <value>行のデータです。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.Errors">
      <summary>この行に関連付けられたエラーのコレクションを取得します。対応する行ヘッダーにエラーメッセージを表示する場合は、ここにエラーを追加します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.ValidationResults">
      <summary>この行に関連付けられたエラーのコレクションを取得します。対応する行ヘッダーにエラーメッセージを表示する場合は、ここにエラーを追加します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.ParentGroup">
      <summary>親グループを取得します。</summary>
      <remarks>
        行がグループに含まれない場合は、
        <c>null</c>が返されます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.Presenter">
      <summary>行プレゼンタを取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.HeaderPresenter">
      <summary>ヘッダープレゼンタを取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.DetailsPresenter">
      <summary>詳細プレゼンタを取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.IsSelected">
      <summary>この行が選択されているかどうかを示す値を取得または設定します。</summary>
      <value>
        この行が選択されている場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.IsMouseOver">
      <summary>マウスが行の上にあるかどうかを示す値を取得します。</summary>
      <value>
        マウスが行の上にある場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.Visibility">
      <summary>行の表示状態を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.DetailsVisibility">
      <summary>この行の詳細が表示されているかどうかを示す値を取得または設定します。</summary>
      <value>
        この行に詳細が表示されている場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.ActualDetailsVisibility">
      <summary>親 DataGrid のプロパティを考慮して、この行に詳細が表示されているかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.IsEditable">
      <summary>この行が編集可能かどうかを示す値を取得します。</summary>
      <value>
        この行が編集可能場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.IsSelectable">
      <summary>ユーザーがこの行から現在のセルを設定できるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.IsEditing">
      <summary>この行が編集中かどうかを示す値を取得します。</summary>
      <value>
        この行が編集中の場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.VerticalOffset">
      <summary>垂直方向のオフセットをピクセル単位で取得します。</summary>
      <remarks>
        この行プレゼンタまたはこれ以前の行がこれまでに表示されていない場合、このオフセットは推定値です。
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />のテンプレートがまだロードされていない場合は、double.Nan が返されます。
      </remarks>
      <value>垂直方向のオフセット（ピクセル単位）。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.RowStyle">
      <summary>行のスタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.RowHeaderStyle">
      <summary>この行の行ヘッダープレゼンタに適用されるスタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.CellStyle">
      <summary>この行のすべてのセルに適用されるスタイルを取得または設定します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridRow.PropertyChanged">
      <summary>プロパティ値が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridGroupRow.GroupRowsVisibilityChanged">
      <summary>グループの表示/非表示に関連する行が変更されたときに発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridGroupRow.GroupRowsVisibility">
      <summary>グループに関連する行の表示/非表示を取得または設定します。</summary>
      <value>グループに関連する行の表示/非表示。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridGroupRow.GroupKeys">
      <summary>グループを識別するキーを取得します。</summary>
      <value>グループキー。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridGroupRow.Rows">
      <summary>グループ内の行を取得します。</summary>
      <value>グループ内の行。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridGroupRow.Column">
      <summary>グループに関連する列を取得します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridNewRow">
      <summary>
        <see cref="N:C1.WPF.DataGrid" />の新しい行を表します。
      </summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridNewRow.IsEnteringNewRowChanged">
      <summary>新しい行に入るときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridNewRow.IsEnteringNewRowChanging">
      <summary>変更状態に入る前に発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNewRow.IsEnteringNewRow">
      <summary>このインスタンスが新しい行を入力中かどうかを示す値を取得します。</summary>
      <value>
        このインスタンスが新しい行を入力中の場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridRowType">
      <summary>各種の行を定義する定数を指定します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowType.Undefined">
      <summary>行コレクションにまだ入っていない行。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowType.Item">
      <summary>共通の行。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowType.New">
      <summary>新しい行。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowType.Group">
      <summary>行のグループを表す行。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowType.Top">
      <summary>項目行の上端の行。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridRowType.Bottom">
      <summary>項目行の下端の行。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridRowError">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridRow" />と関連付けられているエラーを記述します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowError.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridRowError" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowError.#ctor(System.String)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridRowError" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="message">エラーメッセージ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowError.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridRowError" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="message">エラーメッセージ。</param>
      <param name="members">このエラーに関連付けられている列の名前。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowError.#ctor(System.ComponentModel.DataAnnotations.ValidationResult)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridRowError" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="validationResult">検証の結果。</param>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowError.Message">
      <summary>エラーメッセージを取得または設定します。</summary>
      <remarks>このメッセージは、行ヘッダーに表示されます。</remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowError.ColumnNames">
      <summary>このエラーに関連付けられている列の名前を取得または設定します。</summary>
      <remarks>指定された列に対応するセルが赤い境界線で強調表示されます。</remarks>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridRowCollection">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridRow" />のコレクションです。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowCollection.Contains(System.Int32)">
      <summary>このコレクション内の指定されたインデックス位置に行が含まれているかどうかを判定します。</summary>
      <param name="index">インデックス。</param>
      <returns>
        指定されたインデックス位置に行が含まれている場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowCollection.IndexOf(System.Object)">
      <summary>指定されたデータ項目のインデックスを取得します。</summary>
      <param name="dataItem">データ項目。</param>
      <returns>インデックス、見つからない場合は -1</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowCollection.GetLoadedRows">
      <summary>現在までにロードされた行を取得します。</summary>
      <returns>ロードされた行のコレクション</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowCollection.ExpandAll">
      <summary>すべてのグループを展開します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowCollection.Expand(System.Predicate{C1.WPF.DataGrid.DataGridGroupRow})">
      <summary>述語を満たすグループを展開します。</summary>
      <param name="predicate">述語。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowCollection.CollapseAll">
      <summary>すべてのグループを折りたたみます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowCollection.Collapse(System.Predicate{C1.WPF.DataGrid.DataGridGroupRow})">
      <summary>述語を満たすグループを折りたたみます。</summary>
      <param name="predicate">述語。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowCollection.AsEnumerable(System.Predicate{C1.WPF.DataGrid.DataGridRow},System.Predicate{C1.WPF.DataGrid.DataGridGroupRow})">
      <summary>行コレクションを IEnumerable として返します。DataGridGroupRow でないすべての行は AsEnumerable((r) =&gt; !(r is DataGridGroupRow), null)、現在表示中のすべての行（表示されているグループの「グループの子」を含む）は AsEnumerable(null, (g) =&gt; g.GroupRowsVisibility == Visibility.Visible)</summary>
      <param name="predicate">述語。</param>
      <param name="recursionPredicate">再帰の述語。グループ内の子の行を処理するかどうか。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowCollection.GetEnumerator">
      <summary>コレクションを反復処理する列挙子を返します。</summary>
      <returns>
        コレクションの反復処理に使用できる
        <see cref="T:System.Collections.Generic.IEnumerator`1" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowCollection.GetFirstVisibleRow(System.Boolean)">
      <summary>最初に表示されている行を取得します。</summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowCollection.GetLastVisibleRow(System.Boolean)">
      <summary>最後に表示されている行を取得します。</summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowCollection.GetVisibleRowsFromTop(System.Boolean)">
      <summary>上端から始まる行のコレクションを取得します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowCollection.GetVisibleRowsFromBottom(System.Boolean)">
      <summary>下端から始まる行のコレクションを取得します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridRowCollection.GetVisibleRowsFromIndex(System.Int32,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)">
      <summary>指定された位置および方向から行のコレクションを取得します。</summary>
      <param name="fromRowIndex">最初の行のインデックス。</param>
      <param name="direction">返される行の方向。</param>
      <returns>
      </returns>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowCollection.OwnerGroup">
      <summary>行のこのコレクションを所有しているグループを取得または設定します。コレクションがグループに属していない場合、このプロパティは null になります。</summary>
      <value>オーナーグループ。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowCollection.TopRows">
      <summary>項目行の上端に配置される行のコレクションを取得します。</summary>
      <value>一番上の行。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowCollection.BottomRows">
      <summary>項目行の下端に配置される行のコレクションを取得します。</summary>
      <value>一番下の行。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowCollection.IsLoading">
      <summary>このインスタンスがロード中かどうかを示す値を取得または設定します。</summary>
      <value>
        このインスタンスがロード中の場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowCollection.Count">
      <summary>行の数を取得します。</summary>
      <value>行の数。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowCollection.Item(System.Object)">
      <summary>
        指定されたデータ項目の
        <see cref="T:C1.WPF.DataGrid.DataGridRow" />を取得します。
      </summary>
      <value>
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowCollection.Item(System.Int32)">
      <summary>
        指定されたインデックスにある
        <see cref="T:C1.WPF.DataGrid.DataGridRow" />を取得します。
      </summary>
      <value>
      </value>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridRowCollection.CollectionChanged">
      <summary>コレクションの項目リストが変更されるか、コレクションがリセットされると発生します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridRowsAddedEventArgs">
      <summary>RowsAdded イベントにイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowsAddedEventArgs.AddedRows">
      <summary>追加された行を取得します。</summary>
      <value>追加される行。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridAutoGeneratingColumnEventArgs">
      <summary>自動生成列イベントのイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridAutoGeneratingColumnEventArgs.Cancel">
      <summary>イベントがキャンセルされたかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridAutoGeneratingColumnEventArgs.Column">
      <summary>生成される列を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridAutoGeneratingColumnEventArgs.Property">
      <summary>生成される列に対応するプロパティ情報を取得または設定します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridBeganEditEventArgs">
      <summary>BeganEdit イベントにイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridBeganEditEventArgs.Column">
      <summary>編集中のセルに対応する列を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridBeganEditEventArgs.Row">
      <summary>編集中のセルに対応する行を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridBeganEditEventArgs.EditingElement">
      <summary>編集中の UI 要素を取得します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridBeginningEditEventArgs">
      <summary>編集中イベントにイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridBeginningEditEventArgs.Cancel">
      <summary>イベントがキャンセルされたかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridBeginningEditEventArgs.Column">
      <summary>編集中のセルに対応する列を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridBeginningEditEventArgs.Row">
      <summary>編集中のセルに対応する行を取得します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridBeginningNewRowEventArgs">
      <summary>新しい行開始イベントのイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridBeginningNewRowEventArgs.Cancel">
      <summary>イベントがキャンセルされたかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridBeginningNewRowEventArgs.NewRow">
      <summary>新しい行を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridBeginningNewRowEventArgs.Item">
      <summary>新しい行に対応するデータ項目を取得または設定します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridCellEventArgs">
      <summary>セルに関連するイベントのイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellEventArgs.Cell">
      <summary>セルを取得します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridColumnEventArgs">
      <summary>列に関連するイベントのイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnEventArgs.Column">
      <summary>列を取得します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridColumnReorderingEventArgs">
      <summary>ColumnReordering イベントにイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnReorderingEventArgs.Cancel">
      <summary>イベントがキャンセルされたかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnReorderingEventArgs.Column">
      <summary>並べ替え列を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnReorderingEventArgs.TargetColumnIndex">
      <summary>列のターゲットインデックスを取得または設定します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridColumnValueEventArgs`1">
      <summary>列および関連値に関連するイベントのイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnValueEventArgs`1.Value">
      <summary>列に関連付けらている値を取得します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridColumnEditableValueEventArgs`1">
      <summary>列および関連値に関連するイベントのイベントデータを提供します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridColumnEditableValueEventArgs`1.#ctor(C1.WPF.DataGrid.DataGridColumn,`0)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridColumnEditableValueEventArgs`1" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="column">列。</param>
      <param name="value">値。</param>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnEditableValueEventArgs`1.Value">
      <summary>列に関連付けられている値を取得または設定します。</summary>
      <value>列に関連付けられている値。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridCreatingRowEventArgs">
      <summary>CreatingRow イベントにイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCreatingRowEventArgs.Type">
      <summary>行のタイプを取得します。</summary>
      <value>行のタイプ。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCreatingRowEventArgs.Row">
      <summary>使用される行を取得または設定します。</summary>
      <value>行。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCreatingRowEventArgs.DataItem">
      <summary>この行に関連付けられているデータ項目を取得します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridRowsDeletedEventArgs">
      <summary>RowsDeleted イベントにイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowsDeletedEventArgs.DeletedRows">
      <summary>削除された行を取得します。</summary>
      <value>削除された行。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridDeletingRowsEventArgs">
      <summary>DeletingRows イベントにイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDeletingRowsEventArgs.Cancel">
      <summary>イベントがキャンセルされたかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDeletingRowsEventArgs.DeletedRows">
      <summary>削除された行を取得します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridEditingRowEventArgs">
      <summary>編集イベントのイベントデータを提供します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridRowEventArgs">
      <summary>行に関連するイベントのイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowEventArgs.Row">
      <summary>行を取得します。</summary>
      <value>行。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridEditingRowEventArgs.Cancel">
      <summary>
        この
        <see cref="T:C1.WPF.DataGrid.DataGridEditingRowEventArgs" />がキャンセルされるかどうかを示す値を取得または設定します。
      </summary>
      <value>
        キャンセルされる場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridEndingEditEventArgs">
      <summary>終了中のセル編集イベントのイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridEndingEditEventArgs.Cancel">
      <summary>イベントがキャンセルされたかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridEndingEditEventArgs.Column">
      <summary>編集中のセルに対応する列を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridEndingEditEventArgs.Row">
      <summary>編集中のセルに対応する行を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridEndingEditEventArgs.EditingElement">
      <summary>編集中の UI 要素を取得します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridEndingNewRowEventArgs">
      <summary>終了中の新しい行イベントのイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridEndingNewRowEventArgs.Cancel">
      <summary>イベントがキャンセルされたかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridEndingNewRowEventArgs.NewRow">
      <summary>新しい行を取得します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridFilterChangedEventArgs">
      <summary>FilterChanged イベントにイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridFilterChangedEventArgs.OldFilteredColumns">
      <summary>現在フィルタ処理されている列を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridFilterChangedEventArgs.NewFilteredColumns">
      <summary>以前にフィルタ処理された列を取得します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridFilterChangingEventArgs">
      <summary>FilterChanging イベントのイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridFilterChangingEventArgs.ChangingColumns">
      <summary>イベントがキャンセルされない場合は、列がフィルタ処理されます。</summary>
      <value>イベントがキャンセルされない場合は、列がフィルタ処理されます。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridFilterLoadingEventArgs">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridColumn" />の FilterLoading イベントのイベントデータを提供します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridFilterLoadingEventArgs.Filter">
      <summary>この列で使用されるフィルタを取得または設定します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridGettingCellValueEventArgs">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridTemplateColumn" />の GettingCellValue イベントのイベントデータを提供します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridGettingCellValueEventArgs.Value">
      <summary>この列と指定された行に属するセルの値を表すオブジェクトを取得または設定します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridGroupChangedEventArgs">
      <summary>グループ変更済みイベントのイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridGroupChangedEventArgs.OldGroupedColumns">
      <summary>以前にグループ化された列を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridGroupChangedEventArgs.NewGroupedColumns">
      <summary>現在グループ化されている列を取得します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridGroupChangingEventArgs">
      <summary>GroupChanging イベントのイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridGroupChangingEventArgs.ChangingColumns">
      <summary>イベントがキャンセルされない場合は、列がグループ化されます。</summary>
      <value>イベントがキャンセルされない場合は、列がグループ化されます。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridMergingCellsEventArgs">
      <summary>セル結合イベントのイベントデータを提供します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridMergingCellsEventArgs.Merge(C1.WPF.DataGrid.DataGridCellsRange)">
      <summary>範囲を結合します。</summary>
      <param name="range">視覚的に結合する範囲。</param>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridRowDetailsEventArgs">
      <summary>行の詳細に関連するイベントのイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowDetailsEventArgs.DetailsElement">
      <summary>行の詳細を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowDetailsEventArgs.Row">
      <summary>詳細を所有する行を取得します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridSelectionChangedEventArgs">
      <summary>選択状態の変更イベントのイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSelectionChangedEventArgs.AddedRanges">
      <summary>選択範囲に追加された範囲を取得します。</summary>
      <value>追加された範囲。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSelectionChangedEventArgs.RemovedRanges">
      <summary>選択範囲から削除された範囲を取得します。</summary>
      <value>削除された範囲。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridSelectionDragEventArgs">
      <summary>選択範囲ドラッグイベントのイベントデータを提供します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectionDragEventArgs.GetPosition(System.Windows.UIElement)">
      <summary>マウスポインタ位置の x 座標と y 座標を返します。オプションで、指定された System.Windows.UIElement の座標原点に対して座標が評価されます。</summary>
      <param name="relativeTo">Silverlight プラグインに含まれ、オブジェクトツリーに接続された System.Windows.UIElement 派生オブジェクト。Silverlight 座標系全体に対するオブジェクトの位置を指定するには、relativeTo の値を null にします。</param>
      <returns>マウスポインタ位置の現在の x 座標と y 座標を表す System.Windows.Point。relativeTo として null が渡された場合、これは、Silverlight プラグインコンテンツ領域全体に対する座標です。null 以外の relativeTo が渡された場合、これは、relativeTo によって参照されるオブジェクトに対する座標です。</returns>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridSelectionDragStartedEventArgs">
      <summary>選択範囲ドラッグ開始イベントのイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSelectionDragStartedEventArgs.Cancel">
      <summary>イベントがキャンセルされたかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridSettingCellValueEventArgs">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridTemplateColumn" />の SettingCellValue イベントのイベントデータを提供します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSettingCellValueEventArgs.Value">
      <summary>この列と指定された行のセルに設定されようとしているオブジェクトを取得します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridSortChangedEventArgs">
      <summary>SortChanged イベントにイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSortChangedEventArgs.OldSortedColumns">
      <summary>以前にソートされた列を取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSortChangedEventArgs.NewSortedColumns">
      <summary>現在ソートされている列を取得します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridSortChangingEventArgs">
      <summary>SortChanging イベントのイベントデータを提供します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSortChangingEventArgs.ChangingColumns">
      <summary>イベントがキャンセルされない場合は、列がソートされます。</summary>
      <value>イベントがキャンセルされない場合は、列がソートされます。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridFilterException">
      <summary>FilterBy メソッドが呼び出されたが、コレクションビューが準備できていない場合は、このエラーが発生します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridFilterException.#ctor(System.String)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridFilterException" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="message">メッセージ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridFilterException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridFilterException" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="message">この例外の理由について説明するエラーメッセージ。</param>
      <param name="innerException">現在の例外の原因になった例外。または、内部の例外が指定されていない場合は null 参照（Visual Basic では Nothing）。</param>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridFinalizeEditingException">
      <summary>このエラーは、編集中のセルを適用できなかったときに発生します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridFinalizeEditingException.#ctor(System.String)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridFinalizeEditingException" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="message">メッセージ。</param>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridGroupException">
      <summary>GroupBy メソッドが呼び出されたが、コレクションビューが準備できていない場合は、このエラーが発生します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridGroupException.#ctor(System.String)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridGroupException" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="message">メッセージ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridGroupException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridGroupException" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="message">この例外の理由について説明するエラーメッセージ。</param>
      <param name="innerException">現在の例外の原因になった例外。または、内部の例外が指定されていない場合は null 参照（Visual Basic では Nothing）。</param>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridSortException">
      <summary>SortBy メソッドが呼び出されたが、コレクションビューが準備できていない場合は、このエラーが発生します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSortException.#ctor(System.String)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridSortException" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="message">メッセージ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSortException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridSortException" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="message">この例外の理由について説明するエラーメッセージ。</param>
      <param name="innerException">現在の例外の原因になった例外。または、内部の例外が指定されていない場合は null 参照（Visual Basic では Nothing）。</param>
    </member>
    <member name="T:C1.WPF.DataGrid.C1DataGridFilterHelper">
      <summary>
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />内のカスタムフィルタを処理するためのヘルパーメソッドを提供します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGridFilterHelper.GetPropertyValue``1(System.Object,System.String)">
      <summary>指定されたオブジェクトのプロパティ名からプロパティの値を取得します。</summary>
      <remarks>これは、必要なインデックス付きプロパティパスをサポートします。</remarks>
      <typeparam name="T">
      </typeparam>
      <param name="source">プロパティパスを適用するオブジェクト。</param>
      <param name="propertyPath">プロパティパス。</param>
      <returns>指定されたオブジェクトでプロパティパスを適用した後の結果のオブジェクト。</returns>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridFilter">
      <summary>C1DataGrid のフィルタのホストとして機能する Control を表します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridFilter.Clear">
      <summary>現在のフィルタ条件とフィルタコントロールに含まれる値をクリアします。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridFilter.Create">
      <summary>ユーザーによってフィルタコントロールで設定された現在のフィルタ条件に基づいて、フィルタを作成します。必要に応じて FilterChanged イベントを発生させます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridFilter.Load(C1.WPF.DataGrid.DataGridFilterState)">
      <summary>フィルタとフィルタコントロールを目的の状態に初期化します。</summary>
      <param name="filterState">目的の状態。</param>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilter.MouseOverBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridFilter.MouseOverBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilter.PressedBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridFilter.PressedBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilter.FocusBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridFilter.FocusBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridFilter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridFilter" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridFilter.OnApplyTemplate">
      <summary>関連するコントロールのパーツを参照できるように、コントロールのテンプレートをロードします。</summary>
      <remarks>
        このメソッドは、アプリケーションコードや内部処理（再構築レイアウトパスなど）が
        <see cref="M:ApplyTemplate" />メソッドを呼び出すときに必ず呼び出されます。
      </remarks>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridFilter.FilterChanged">
      <summary>フィルタ条件が変化すると発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridFilter.InnerControl">
      <summary>内部フィルタコントロールを取得または設定します。</summary>
      <value>フィルタの作成と設定に使用されるコントロールです。IDataGridFilter を実装する必要があり、Control クラスから継承される必要があります。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridFilter.MouseOverBrush">
      <summary>
        マウスがあるコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridFilter.PressedBrush">
      <summary>
        クリックされたボタンを描画するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridFilter.FocusBrush">
      <summary>
        フォーカスがあるコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridFilterState">
      <summary>フィルタの状態。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridFilterState.Equals(System.Object)">
      <summary>
        指定された
        <see cref="T:System.Object" />がこのインスタンスと等しいかどうかを判定します。
      </summary>
      <param name="obj">
        このインスタンスと比較する
        <see cref="T:System.Object" />。
      </param>
      <returns>
        指定された
        <see cref="T:System.Object" />がこのインスタンスと等しい場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridFilterState.GetHashCode">
      <summary>このインスタンスのハッシュコードを返します。</summary>
      <returns>このインスタンスのハッシュコード。これは、ハッシュアルゴリズムやハッシュテーブルなどのデータ構造での使用に適しています。</returns>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridFilterState.Tag">
      <summary>フィルタに関するカスタム情報を格納するために使用できる任意のオブジェクト値を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridFilterState.FilterInfo">
      <summary>適用されるフィルタを解説している基本情報を提供するオブジェクトのリストを取得または設定します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.FilterDescription">
      <summary>フィルタに関する情報を含んでいます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.FilterDescription.#ctor">
      <summary>コンストラクタ。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.FilterDescription.#ctor(System.String,C1.WPF.DataGrid.DataGridFilterState)">
      <summary>コンストラクタ。</summary>
      <param name="propertyName">フィルタの説明のプロパティ名。</param>
      <param name="state">フィルタの状態。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.FilterDescription.GetPredicate``1">
      <summary>このフィルタの説明の現在の状態を表す述語を返します。この述語を使用して、Linq ソースに対してフィルタを適用できます。</summary>
      <typeparam name="T">データソースタイプ内の要素</typeparam>
      <returns>フィルタ述語</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.FilterDescription.GetExpression``1">
      <summary>このフィルタの説明の現在の状態を表す表現ツリーを返します。表現ツリーを使用して、Ado ネットの Data Service ソースに対してフィルタを適用できます。</summary>
      <typeparam name="T">データソースタイプ内の要素</typeparam>
      <returns>フィルタ表現</returns>
    </member>
    <member name="P:C1.WPF.DataGrid.FilterDescription.PropertyName">
      <summary>フィルタ条件として使用されているプロパティ名を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.FilterDescription.State">
      <summary>このフィルタの説明の現在の状態を取得または設定します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.FilterInfo">
      <summary>C1DataGrid 列のフィルタ作成に使用された情報を含んでいます。フィルタは、１つ以上の FilterInfo インスタンスによって作成できます。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.FilterInfo.FilterOperation">
      <summary>現在のフィルタ操作。たとえば、テキストフィルタの場合、FilterOperation は 'Contains' または 'StartsWith' のどちらか。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.FilterInfo.FilterType">
      <summary>この FilterInfo の適用先の FilterType。たとえば、Text や CheckBox。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.FilterInfo.FilterCombination">
      <summary>複数の FilterInfo インスタンスを使ってフィルタを作成する場合に、And、Or、None などのフィルタの組み合わせを使って結合方法を指定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.FilterInfo.Value">
      <summary>フィルタを適用する際に使用されるフィルタ情報値です。たとえば、text.StartsWith("AAA") というテキストフィルタを作成するとき、その値は「AAA」になります。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.FilterOperation">
      <summary>FilterInfo を作成する有効な操作を表します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterOperation.Contains">
      <summary>Contains 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterOperation.Equal">
      <summary>Equal 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterOperation.GreaterThan">
      <summary>Greater than 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterOperation.GreaterThanOrEqual">
      <summary>Greater than or equal 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterOperation.IsEmpty">
      <summary>Is empty 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterOperation.IsNotEmpty">
      <summary>Is not empty 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterOperation.IsOneOf">
      <summary>Is one of 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterOperation.LessThan">
      <summary>Less than 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterOperation.LessThanOrEqual">
      <summary>Less than or equal 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterOperation.NotEqual">
      <summary>Not equal 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterOperation.StartsWith">
      <summary>Starts with 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterOperation.All">
      <summary>All 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterOperation.None">
      <summary>None 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterOperation.Some">
      <summary>Some 演算子を表します</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.FilterType">
      <summary>FilterInfo を作成する有効なフィルタタイプを表します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterType.CheckBox">
      <summary>ブール型のフィルタ</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterType.MultiValue">
      <summary>値のリストのフィルタ</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterType.DateTime">
      <summary>日付型のフィルタ</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterType.Image">
      <summary>画像タイプのフィルタ</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterType.Numeric">
      <summary>数値型のフィルタ</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterType.Text">
      <summary>テキスト型のフィルタ</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterType.Other">
      <summary>その他の型のフィルタ</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.FilterCombination">
      <summary>FilterInfo を作成する有効なフィルタの組み合わせを表します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterCombination.None">
      <summary>フィルタに論理演算子は適用されません。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterCombination.And">
      <summary>フィルタに And 論理演算子が適用されます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.FilterCombination.Or">
      <summary>フィルタに OR 論理演算子が適用されます。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridFilterInfo">
      <summary>C1DataGrid 列のフィルタ作成に使用された情報を含んでいます。フィルタは、１つ以上の FilterInfo インスタンスによって作成できます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridFilterInfo.Equals(System.Object)">
      <summary>
        指定された
        <see cref="T:System.Object" />がこのインスタンスと等しいかどうかを判定します。
      </summary>
      <param name="obj">
        このインスタンスと比較する
        <see cref="T:System.Object" />。
      </param>
      <returns>
        指定された
        <see cref="T:System.Object" />がこのインスタンスと等しい場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridFilterInfo.GetHashCode">
      <summary>このインスタンスのハッシュコードを返します。</summary>
      <returns>このインスタンスのハッシュコード。これは、ハッシュアルゴリズムやハッシュテーブルなどのデータ構造での使用に適しています。</returns>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridFilterInfo.FilterOperation">
      <summary>現在のフィルタ操作。たとえば、テキストフィルタの場合、FilterOperation は 'Contains' または 'StartsWith' のどちらか。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridFilterInfo.FilterType">
      <summary>この FilterInfo の適用先の FilterType。たとえば、Text や CheckBox</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridFilterInfo.FilterCombination">
      <summary>複数の FilterInfo インスタンスを使用してフィルタを作成する場合に、And、Or、None などのフィルタの組み合わせを使用して結合方法を指定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridFilterInfo.Value">
      <summary>フィルタを適用する際に使用されるフィルタ情報値です。たとえば、text.StartsWith("AAA") というテキストフィルタを作成するとき、その値は「AAA」になります。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridFilterOperation">
      <summary>FilterInfo を作成する有効な操作を表します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterOperation.Contains">
      <summary>Contains 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterOperation.Equal">
      <summary>Equal 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterOperation.GreaterThan">
      <summary>Greater than 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterOperation.GreaterThanOrEqual">
      <summary>Greater than or equal 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterOperation.IsEmpty">
      <summary>Is empty 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterOperation.IsNotEmpty">
      <summary>Is not empty 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterOperation.IsOneOf">
      <summary>Is one of 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterOperation.LessThan">
      <summary>Less than 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterOperation.LessThanOrEqual">
      <summary>Less than or equal 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterOperation.NotEqual">
      <summary>Not equal 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterOperation.StartsWith">
      <summary>Starts with 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterOperation.EndsWith">
      <summary>Ends with 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterOperation.All">
      <summary>All 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterOperation.None">
      <summary>None 演算子を表します</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterOperation.Some">
      <summary>Some 演算子を表します</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridFilterType">
      <summary>FilterInfo を作成する有効なフィルタタイプを表します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterType.CheckBox">
      <summary>ブール型のフィルタ</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterType.MultiValue">
      <summary>値のリストのフィルタ</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterType.DateTime">
      <summary>日付型のフィルタ</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterType.Image">
      <summary>画像タイプのフィルタ</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterType.Numeric">
      <summary>数値型のフィルタ</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterType.Text">
      <summary>テキスト型のフィルタ</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterType.Other">
      <summary>その他の型のフィルタ</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridFilterCombination">
      <summary>FilterInfo を作成する有効なフィルタの組み合わせを表します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterCombination.None">
      <summary>フィルタに論理演算子は適用されません。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterCombination.And">
      <summary>フィルタに And 論理演算子が適用されます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridFilterCombination.Or">
      <summary>フィルタに OR 論理演算子が適用されます。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridGroupState">
      <summary>列のソート状態。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridGroupState.ToString">
      <summary>
        現在の
        <see cref="T:System.Object" />を表す
        <see cref="T:System.String" />を返します。
      </summary>
      <returns>
        現在の
        <see cref="T:System.Object" />を表す
        <see cref="T:System.String" />。
      </returns>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridGroupState.Direction">
      <summary>ソートの方向を取得または設定します。</summary>
      <value>ソートの方向。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridGroupState.Index">
      <summary>列間のソートのインデックスを取得または設定します。</summary>
      <value>列間のソートのインデックス。</value>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridGroupState.PropertyChanged">
      <summary>プロパティ値が変更されたときに発生します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridGroupStateTypeConverter">
      <summary>
        文字列を
        <see cref="T:C1.WPF.DataGrid.DataGridSortState" />に変換します。xaml からソート状態を設定するために使用されます。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridGroupStateTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>型コンバータが指定された型からこのコンバータの型にオブジェクトを変換できるかどうかを返します。</summary>
      <param name="context">書式コンテキストを提供する object。</param>
      <param name="sourceType">変換元の型。</param>
      <returns>このコンバータが変換を実行できる場合は true、そうでない場合は false。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridGroupStateTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定された値をこのコンバータのタイプに変換します。</summary>
      <param name="context">書式コンテキストを提供する object。</param>
      <param name="culture">
        現在のカルチャとして使用する
        <see cref="T:System.Globalization.CultureInfo" />。
      </param>
      <param name="value">このコンバータの型に変換する値。</param>
      <returns>変換後の値。</returns>
      <exception cref="T:System.NotSupportedException">変換を実行することはできません。</exception>
    </member>
    <member name="T:C1.WPF.DataGrid.GroupDescription">
      <summary>グループに関する情報を含んでいます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.GroupDescription.#ctor">
      <summary>コンストラクタ。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.GroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter,C1.WPF.DataGrid.DataGridGroupState)">
      <summary>コンストラクタ。</summary>
      <param name="propertyName">グループの説明のプロパティ名。</param>
      <param name="converter">グループの説明に使用されるコンバータ。</param>
      <param name="state">グループの状態。</param>
    </member>
    <member name="P:C1.WPF.DataGrid.GroupDescription.PropertyName">
      <summary>ソート条件として使用されているプロパティ名を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.GroupDescription.GroupConverter">
      <summary>データのグループ化に使用されるグループコンバータを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.GroupDescription.State">
      <summary>昇順でソートするか降順でソートするかを示す値を取得または設定します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridCellsRange">
      <summary>２つのセルによって決定されるセル範囲を指定します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.#ctor(C1.WPF.DataGrid.DataGridRow)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridCellsRange" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="row">行。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.#ctor(C1.WPF.DataGrid.DataGridColumn)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridCellsRange" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="column">列。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.#ctor(C1.WPF.DataGrid.DataGridColumn,C1.WPF.DataGrid.DataGridColumn)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridCellsRange" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="leftColumn">左の列。</param>
      <param name="rightColumn">右の列。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.#ctor(C1.WPF.DataGrid.DataGridRow,C1.WPF.DataGrid.DataGridRow)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridCellsRange" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="topRow">一番上の行。</param>
      <param name="bottomRow">一番下の行。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.#ctor(C1.WPF.DataGrid.DataGridCell)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridCellsRange" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="cell">セル。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.#ctor(C1.WPF.DataGrid.DataGridCell,C1.WPF.DataGrid.DataGridCell)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridCellsRange" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="topLeftCell">左上のセル。</param>
      <param name="bottomRightCell">右下のセル。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.#ctor(C1.WPF.DataGrid.DataGridCellsRange)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridCellsRange" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="range">範囲。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.Equals(System.Object)">
      <summary>
        指定された
        <see cref="T:System.Object" />が現在の
        <see cref="T:System.Object" />と等しいかどうかを判定します。
      </summary>
      <param name="obj">
        現在の
        <see cref="T:System.Object" />と比較する
        <see cref="T:System.Object" />。
      </param>
      <returns>
        指定された
        <see cref="T:System.Object" />が現在の
        <see cref="T:System.Object" />と等しい場合は true、そうでない場合は false。
      </returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="obj" />パラメータが null。
      </exception>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.GetHashCode">
      <summary>特定のタイプのハッシュ関数として機能します。</summary>
      <returns>
        現在の
        <see cref="T:System.Object" />のハッシュコード。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.Contains(C1.WPF.DataGrid.DataGridCellsRange)">
      <summary>この範囲インスタンスが、指定された範囲を含んでいるかどうかを判定します。</summary>
      <param name="range">範囲。</param>
      <returns>
        この範囲インスタンスが、指定された範囲を含んでいる場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.Contains(C1.WPF.DataGrid.DataGridCell)">
      <summary>この範囲インスタンスが、指定されたセルを含んでいるかどうかを判定します。</summary>
      <param name="cell">セル。</param>
      <returns>
        この範囲インスタンスが、指定されたセルを含んでいる場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.Contains(C1.WPF.DataGrid.DataGridRow)">
      <summary>この範囲インスタンスが、指定された行を含んでいるかどうかを判定します。</summary>
      <param name="row">行。</param>
      <returns>
        この範囲インスタンスが、指定された行を含んでいる場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.Contains(C1.WPF.DataGrid.DataGridColumn)">
      <summary>この範囲インスタンスが、指定された列を含んでいるかどうかを判定します。</summary>
      <param name="column">列。</param>
      <returns>
        この範囲インスタンスが、指定された列を含んでいる場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.Intersects(C1.WPF.DataGrid.DataGridCellsRange)">
      <summary>この範囲インスタンスが、指定された範囲と重なるかどうかを判定します。</summary>
      <param name="range">範囲。</param>
      <returns>
        この範囲インスタンスが、指定された範囲と重なる場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.Subtract(C1.WPF.DataGrid.DataGridCellsRange)">
      <summary>指定された範囲をこの範囲インスタンスから減算して得られた範囲の配列を返します。</summary>
      <param name="range">範囲。</param>
      <returns>指定された範囲をこの範囲インスタンスから減算して得られた範囲の配列を返します</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.IsSingleCell">
      <summary>この範囲が１つのセルかどうかを判定します。</summary>
      <returns>
        この範囲が１つのセルの場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.IsSingleRow">
      <summary>この範囲が１つの行かどうかを判定します。</summary>
      <returns>
        この範囲が１つの行の場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.IsSingleColumn">
      <summary>この範囲が１つの列かどうかを判定します。</summary>
      <returns>
        この範囲が１つの列の場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.op_Inequality(C1.WPF.DataGrid.DataGridCellsRange,C1.WPF.DataGrid.DataGridCellsRange)">
      <summary>演算子 != を実装します。</summary>
      <param name="obj">obj です。</param>
      <param name="obj2">obj2 です。</param>
      <returns>演算子の結果。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.op_Equality(C1.WPF.DataGrid.DataGridCellsRange,C1.WPF.DataGrid.DataGridCellsRange)">
      <summary>演算子 == を実装します。</summary>
      <param name="obj">obj です。</param>
      <param name="obj2">obj2 です。</param>
      <returns>演算子の結果。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRange.ToString">
      <summary>
        このインスタンスを表す
        <see cref="T:System.String" />を返します。
      </summary>
      <returns>
        このインスタンスを表す
        <see cref="T:System.String" />。
      </returns>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellsRange.TopLeftCell">
      <summary>左上のセルを取得します。</summary>
      <value>左上のセル。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellsRange.BottomRightCell">
      <summary>右下のセルを取得します。</summary>
      <value>右下のセル。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellsRange.IsValid">
      <summary>この範囲が有効であるかどうかを示す値を取得します。いずれかのセルがオーナーデータグリッドに属していない場合、この範囲は無効になります。</summary>
      <value>
        この範囲が有効な場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellsRange.Columns">
      <summary>一部のセルがこの範囲に属している列を取得します。</summary>
      <value>列。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellsRange.Rows">
      <summary>一部のセルがこの範囲に属している行を取得します。</summary>
      <value>行。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridCellsRangeCollection">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridCellsRange" />のコレクションです。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRangeCollection.Add(C1.WPF.DataGrid.DataGridCellsRange)">
      <summary>指定された範囲を追加します。</summary>
      <param name="range">範囲。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRangeCollection.Clear">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" />からすべての範囲を削除します。
      </summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" />プロパティは読み取り専用です。
      </exception>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRangeCollection.Contains(C1.WPF.DataGrid.DataGridCellsRange)">
      <summary>指定された範囲がこのコレクションに含まれるかどうかを判定します。</summary>
      <param name="range">範囲。</param>
      <returns>
        このコレクションが、指定された範囲を含んでいる場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRangeCollection.Contains(C1.WPF.DataGrid.DataGridCellsRange,System.Boolean)">
      <summary>指定された範囲がこのコレクションに含まれるかどうかを判定します。</summary>
      <param name="range">範囲。</param>
      <param name="isEqualToARange">
        <c>true</c>に設定されると、指定された範囲が、含まれている範囲の一部と同じ場合にのみ true を返します。
      </param>
      <returns>
        このコレクションが、指定された範囲を含んでいる場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRangeCollection.Contains(C1.WPF.DataGrid.DataGridCell,System.Boolean)">
      <summary>指定された範囲がこのコレクションに含まれるかどうかを判定します。</summary>
      <param name="cell">セル。</param>
      <param name="isEqualToARange">
        <c>true</c>に設定されると、指定されたセルが、含まれている範囲の一部と同じ場合にのみ true を返します。
      </param>
      <returns>
        このコレクションが、指定された範囲を含んでいる場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRangeCollection.Contains(C1.WPF.DataGrid.DataGridRow,System.Boolean)">
      <summary>指定された範囲がこのコレクションに含まれるかどうかを判定します。</summary>
      <param name="row">行。</param>
      <param name="isEqualToARange">
        <c>true</c>に設定されると、指定された行が、含まれている範囲の一部と同じ場合にのみ true を返します。
      </param>
      <returns>
        このコレクションが、指定された範囲を含んでいる場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRangeCollection.Contains(C1.WPF.DataGrid.DataGridColumn,System.Boolean)">
      <summary>指定された範囲がこのコレクションに含まれるかどうかを判定します。</summary>
      <param name="column">列。</param>
      <param name="isEqualToARange">
        <c>true</c>に設定されると、指定された列が、含まれている範囲の一部と同じ場合にのみ true を返します。
      </param>
      <returns>
        このコレクションが、指定された範囲を含んでいる場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRangeCollection.CopyTo(C1.WPF.DataGrid.DataGridCellsRange[],System.Int32)">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" />の要素を特定の
        <see cref="T:System.Array" />インデックス位置から順に
        <see cref="T:System.Array" />にコピーします。
      </summary>
      <param name="array">
        <see cref="T:System.Collections.Generic.ICollection`1" />からコピーされる要素のコピー先になる１次元
        <see cref="T:System.Array" />。
        <see cref="T:System.Array" />のインデックスは０から始まります。
      </param>
      <param name="arrayIndex">
        コピーを開始する位置の０から始まる
        <paramref name="array" />のインデックス。
      </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />が null。
      </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" />が０より小さい。
      </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />が多次元。または、ソース
        <see cref="T:System.Collections.Generic.ICollection`1" />内の要素の数が、使用可能なソース（
        <paramref name="arrayIndex" />から目的の
        <paramref name="array" />の最後まで）より大きい。または、タイプ
        <paramref name="T" />を目的の
        <paramref name="array" />のタイプに自動的にキャストできない。
      </exception>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRangeCollection.Remove(C1.WPF.DataGrid.DataGridCellsRange)">
      <summary>指定された範囲をコレクションから削除します。指定された範囲がコレクション内の範囲の一部に重なる場合、コレクション内の範囲は分割されます。</summary>
      <param name="range">範囲。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRangeCollection.Remove(C1.WPF.DataGrid.DataGridRow)">
      <summary>指定された行をコレクション内の範囲から削除します。</summary>
      <param name="row">行。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRangeCollection.Remove(C1.WPF.DataGrid.DataGridColumn)">
      <summary>指定された列をコレクション内から削除します。</summary>
      <param name="column">列。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRangeCollection.Clean">
      <summary>すべての無効な範囲を削除します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRangeCollection.GetEnumerator">
      <summary>コレクションを反復処理する列挙子を返します。</summary>
      <returns>
        コレクションの反復処理に使用できる
        <see cref="T:System.Collections.Generic.IEnumerator`1" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsRangeCollection.ToString">
      <summary>セルの範囲のセットを表す System.String を返します。</summary>
      <returns>セルの範囲のセットを表す System.String</returns>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellsRangeCollection.Rows">
      <summary>含まれる範囲の一部に一部のセルが属している行のコレクション。</summary>
      <value>行。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellsRangeCollection.Columns">
      <summary>含まれる範囲の一部に一部のセルが属している列のコレクション。</summary>
      <value>列。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellsRangeCollection.Count">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" />に含まれる要素の数を取得します。
      </summary>
      <value>
      </value>
      <returns>
        <see cref="T:System.Collections.Generic.ICollection`1" />に含まれる要素の数。
      </returns>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellsRangeCollection.IsReadOnly">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" />が読み取り専用かどうかを示す値を取得します。
      </summary>
      <value>
      </value>
      <returns>
        <see cref="T:System.Collections.Generic.ICollection`1" />が読み取り専用である場合は true、そうでない場合は false。
      </returns>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridSelectedItemsCollection`1">
      <summary>選択されたセル、列、または行のコレクション。</summary>
      <typeparam name="T">
      </typeparam>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectedItemsCollection`1.#ctor(System.Func{System.Int32,`0},System.Func{System.Int32},System.Func{`0,System.Boolean},System.Func{System.Collections.Generic.IEnumerable{`0}})">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridSelectedItemsCollection`1" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="indexer">indexer 関数。</param>
      <param name="count">count 関数。</param>
      <param name="contains">contains 関数。</param>
      <param name="enumerable">enumerable 関数。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectedItemsCollection`1.Contains(`0)">
      <summary>指定された項目がこのコレクションに含まれるかどうかを判定します。</summary>
      <param name="item">項目。</param>
      <returns>
        このコレクションが項目を含んでいる場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectedItemsCollection`1.GetEnumerator">
      <summary>コレクションを反復処理する列挙子を返します。</summary>
      <returns>
        コレクションの反復処理に使用できる
        <see cref="T:System.Collections.Generic.IEnumerator`1" />オブジェクト。
      </returns>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSelectedItemsCollection`1.Item(System.Int32)">
      <summary>
        指定されたインデックスにある
        <see cref="!:T" />を取得します。
      </summary>
      <value>
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSelectedItemsCollection`1.Count">
      <summary>項目の数を取得します。</summary>
      <value>項目の数。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridSelection">
      <summary>選択されたセル、列、および行を管理します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelection.BeginUpdate">
      <summary>更新を開始します。EndUpdate メソッドが呼び出されるまで、変更は有効になりません。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelection.EndUpdate">
      <summary>更新を終了します。保留中の変更が実行され、対応するイベントが発生します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelection.EndUpdate(System.Boolean,System.Boolean)">
      <summary>指定した場合は、変更をコミットして更新を終了します。</summary>
      <param name="commitChanges">
        <c>true</c>に設定すると、保留中の変更が実行され、対応するイベントが発生します。
      </param>
      <param name="forceChanges">
        <c>true</c>に設定すると、
        <see cref="E:C1.WPF.DataGrid.DataGridSelection.SelectionChanging" />イベントで範囲を変更できなくなります。
      </param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelection.Add(C1.WPF.DataGrid.DataGridCell,C1.WPF.DataGrid.DataGridCell)">
      <summary>
        <paramref name="fromCell" />から
        <paramref name="toCell" />の範囲を選択範囲に追加します。範囲選択を受け付けない選択モードである場合は、
        <paramref name="toCell" />が選択されます。
      </summary>
      <param name="fromCell">開始セル。</param>
      <param name="toCell">終了セル。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelection.Add(C1.WPF.DataGrid.DataGridCell)">
      <summary>
        選択範囲に
        <paramref name="cell" />を追加します。
      </summary>
      <param name="cell">選択範囲に追加されるセル。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelection.Add(C1.WPF.DataGrid.DataGridCellsRange)">
      <summary>指定された範囲を選択範囲に追加します。</summary>
      <param name="range">範囲。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelection.Add(C1.WPF.DataGrid.DataGridRow,C1.WPF.DataGrid.DataGridRow)">
      <summary>
        <paramref name="fromRow" />から
        <paramref name="toRow" />の範囲を選択範囲に追加します。範囲選択を受け付けない選択モードである場合は、
        <paramref name="toRow" />が選択されます。
      </summary>
      <param name="fromRow">開始行。</param>
      <param name="toRow">終了行。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelection.Add(C1.WPF.DataGrid.DataGridColumn,C1.WPF.DataGrid.DataGridColumn)">
      <summary>
        <paramref name="fromColumn" />から
        <paramref name="toColumn" />の範囲を選択範囲に追加します。
      </summary>
      <param name="fromColumn">開始列。</param>
      <param name="toColumn">終了列。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelection.Remove(C1.WPF.DataGrid.DataGridCell)">
      <summary>選択モードを考慮して、指定されたセルを削除します。つまり、選択モードが単一行または複数行の場合は、指定されたセルを含む行全体が削除されます。</summary>
      <param name="cell">削除するセル。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelection.Remove(C1.WPF.DataGrid.DataGridCell,C1.WPF.DataGrid.DataGridCell)">
      <summary>選択モードを考慮して、指定されたセルの範囲を削除します。つまり、選択モードが複数行の場合は、指定されたセルの列情報は無視され、逆も同様です。</summary>
      <param name="fromCell">開始セル。</param>
      <param name="toCell">終了セル。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelection.Remove(C1.WPF.DataGrid.DataGridRow,C1.WPF.DataGrid.DataGridRow)">
      <summary>選択モードを考慮して、指定されたセルの範囲を削除します。</summary>
      <param name="fromRow">開始行。</param>
      <param name="toRow">終了行。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelection.Remove(C1.WPF.DataGrid.DataGridColumn,C1.WPF.DataGrid.DataGridColumn)">
      <summary>選択モードを考慮して、指定されたセルの範囲を削除します。</summary>
      <param name="fromColumn">開始列。</param>
      <param name="toColumn">終了列。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelection.Clear">
      <summary>選択範囲をクリアします。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelection.SelectAll">
      <summary>すべての表示されているセルを選択します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSelection.SelectedRows">
      <summary>選択された行を取得します。</summary>
      <value>選択された行。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSelection.SelectedColumns">
      <summary>選択された列を取得します。</summary>
      <value>選択された列。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSelection.SelectedCells">
      <summary>選択されたセルを取得します。</summary>
      <value>選択されたセル。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSelection.SelectedRanges">
      <summary>選択された範囲を取得します。</summary>
      <value>選択された範囲。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSelection.Mode">
      <summary>セルの列または行の選択方法を指定するモードを取得します。</summary>
      <value>モード。</value>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridSelection.SelectionChanged">
      <summary>選択が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridSelection.SelectionChanging">
      <summary>選択範囲の変更中に発生します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridSelectionMode">
      <summary>使用可能な選択モードを指定します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridSelectionMode.None">
      <summary>任意の要素が選択されます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridSelectionMode.SingleCell">
      <summary>１つのセルのみ選択できます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridSelectionMode.SingleRow">
      <summary>同時に１つの行のみ選択できます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridSelectionMode.SingleColumn">
      <summary>同時に１つの列のみ選択できます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridSelectionMode.SingleRange">
      <summary>同時に１つのセル範囲のみ選択できます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridSelectionMode.MultiRow">
      <summary>［Ctrl］および［Shift］キーを使用して、同時に複数の行を選択することが可能です。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridSelectionMode.MultiColumn">
      <summary>［Ctrl］および［Shift］キーを使用して、同時に複数の列を選択することが可能です。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridSelectionMode.MultiRange">
      <summary>［Ctrl］および［Shift］キーを使用して、同時に複数のセル、セル範囲、列、または行を選択することが可能です。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridSelectionModeExtension">
      <summary>SelectionMode 列挙を拡張し、それらをいくつかのグループに分類します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectionModeExtension.IsRowSelectionMode(C1.WPF.DataGrid.DataGridSelectionMode)">
      <summary>この選択モードで行を選択するかどうかを判定します。</summary>
      <param name="selectionMode">選択モード。</param>
      <returns>
        この選択モードで行を選択する場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectionModeExtension.IsColumnSelectionMode(C1.WPF.DataGrid.DataGridSelectionMode)">
      <summary>この選択モードで列を選択するかどうかを判定します。</summary>
      <param name="selectionMode">選択モード。</param>
      <returns>
        この選択モードで列を選択する場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectionModeExtension.IsCellSelectionMode(C1.WPF.DataGrid.DataGridSelectionMode)">
      <summary>この選択モードでセルを選択するかどうかを判定します。</summary>
      <param name="selectionMode">選択モード。</param>
      <returns>
        この選択モードでセルを選択する場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectionModeExtension.IsSingleMode(C1.WPF.DataGrid.DataGridSelectionMode)">
      <summary>この選択モードで１つの要素のみを選択するかどうかを決定します。</summary>
      <param name="selectionMode">選択モード。</param>
      <returns>
        この選択モードで１つの要素のみを選択する場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectionModeExtension.IsMultiMode(C1.WPF.DataGrid.DataGridSelectionMode)">
      <summary>この選択モードで複数の要素を選択するかどうかを決定します。</summary>
      <param name="selectionMode">選択モード。</param>
      <returns>
        この選択モードで複数の要素を選択する場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridSelectionManager">
      <summary>選択範囲を管理します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectionManager.Select(C1.WPF.DataGrid.DataGridCell)">
      <summary>指定されたセルを選択します。</summary>
      <param name="cell">セル。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectionManager.Select(C1.WPF.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
      <summary>指定されたセルを選択します。</summary>
      <param name="cell">セル。</param>
      <param name="shift">
        <c>true</c>に設定さた場合は、［Shift］キーを押したように動作します。
      </param>
      <param name="ctrl">
        <c>true</c>に設定さた場合は、［Ctrl］キーを押したように動作します。
      </param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectionManager.Select(C1.WPF.DataGrid.DataGridRow)">
      <summary>指定した行を選択します。</summary>
      <param name="row">行。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectionManager.Select(C1.WPF.DataGrid.DataGridRow,System.Boolean,System.Boolean)">
      <summary>指定した行を選択します。</summary>
      <param name="row">行。</param>
      <param name="shift">
        <c>true</c>に設定さた場合は、［Shift］キーを押したように動作します。
      </param>
      <param name="ctrl">
        <c>true</c>に設定さた場合は、［Ctrl］キーを押したように動作します。
      </param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectionManager.Select(C1.WPF.DataGrid.DataGridColumn)">
      <summary>指定された列を選択します。</summary>
      <param name="column">列。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectionManager.Select(C1.WPF.DataGrid.DataGridColumn,System.Boolean,System.Boolean)">
      <summary>指定された列を選択します。</summary>
      <param name="column">終了列。</param>
      <param name="shift">
        <c>true</c>に設定さた場合は、［Shift］キーを押したように動作します。
      </param>
      <param name="ctrl">
        <c>true</c>に設定さた場合は、［Ctrl］キーを押したように動作します。
      </param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectionManager.Clear">
      <summary>選択範囲をクリアします。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectionManager.SelectAll">
      <summary>すべての表示されている行を選択します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSelectionManager.Selection">
      <summary>選択範囲をクエリーおよび変更するための選択範囲オブジェクトを取得します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSelectionManager.SelectedRow">
      <summary>最初に選択された行を取得します。選択された行がない場合は、null を返します。</summary>
      <value>最初に選択された行。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSelectionManager.SelectedRows">
      <summary>選択された行を取得します。</summary>
      <value>選択された行。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSelectionManager.SelectedCells">
      <summary>選択されたセルを取得します。</summary>
      <value>選択されたセル。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSelectionManager.SelectedColumns">
      <summary>選択された列を取得します。</summary>
      <value>選択された列。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridSortDirection">
      <summary>ソート方向の状態。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridSortDirection.None">
      <summary>不規則。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridSortDirection.Ascending">
      <summary>昇順。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridSortDirection.Descending">
      <summary>降順。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridSortState">
      <summary>列のソート状態。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSortState.ToString">
      <summary>
        現在の
        <see cref="T:System.Object" />を表す
        <see cref="T:System.String" />を返します。
      </summary>
      <returns>
        現在の
        <see cref="T:System.Object" />を表す
        <see cref="T:System.String" />。
      </returns>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSortState.Direction">
      <summary>ソートの方向を取得または設定します。</summary>
      <value>ソートの方向。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSortState.Index">
      <summary>列間のソートのインデックスを取得または設定します。</summary>
      <value>列間のソートのインデックス。</value>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridSortState.PropertyChanged">
      <summary>プロパティ値が変更されたときに発生します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridSortStateTypeConverter">
      <summary>
        文字列を
        <see cref="T:C1.WPF.DataGrid.DataGridSortState" />に変換します。xaml からソート状態を設定するために使用されます。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSortStateTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>型コンバータが指定された型からこのコンバータの型にオブジェクトを変換できるかどうかを返します。</summary>
      <param name="context">書式コンテキストを提供する object。</param>
      <param name="sourceType">変換元の型。</param>
      <returns>このコンバータが変換を実行できる場合は true、そうでない場合は false。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSortStateTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定された値をこのコンバータのタイプに変換します。</summary>
      <param name="context">書式コンテキストを提供する object。</param>
      <param name="culture">
        現在のカルチャとして使用する
        <see cref="T:System.Globalization.CultureInfo" />。
      </param>
      <param name="value">このコンバータの型に変換する値。</param>
      <returns>変換後の値。</returns>
      <exception cref="T:System.NotSupportedException">変換を実行することはできません。</exception>
    </member>
    <member name="T:C1.WPF.DataGrid.SortDescription">
      <summary>コレクションをソートする基準として使用する方向とプロパティ名を定義します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.SortDescription.#ctor">
      <summary>コンストラクタ。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.SortDescription.#ctor(System.String,C1.WPF.DataGrid.DataGridSortState)">
      <summary>コンストラクタ。</summary>
      <param name="propertyName">ソートの説明のプロパティ名。</param>
      <param name="state">ソートの状態。</param>
    </member>
    <member name="P:C1.WPF.DataGrid.SortDescription.PropertyName">
      <summary>ソート条件として使用されているプロパティ名を取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.SortDescription.State">
      <summary>昇順でソートするか降順でソートするかを示す値を取得または設定します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.StringListConverter">
      <summary>
        文字列のカンマ区切りリストを
        <c>List&lt;string&gt;</c>に変換します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.StringListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>型コンバータが指定された型からこのコンバータの型にオブジェクトを変換できるかどうかを返します。</summary>
      <param name="context">書式コンテキストを提供するオブジェクト。</param>
      <param name="sourceType">変換元の型。</param>
      <returns>このコンバータが変換を実行できる場合は true、そうでない場合は false。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.StringListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>型コンバーターがオブジェクトを指定した型に変換できるかどうかを取得します。</summary>
      <param name="context">書式コンテキスト情報を提供するオブジェクト。</param>
      <param name="destinationType">変換したい型。</param>
      <returns>このコンバーターが変換できる場合は true、そうでない場合は false。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.StringListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定された値を目的の変換タイプのコンバータに変換します。</summary>
      <param name="context">書式コンテキストを提供するオブジェクト。</param>
      <param name="culture">
        現在のカルチャとして使用する
        <see cref="T:System.Globalization.CultureInfo" />。
      </param>
      <param name="value">このコンバータの型に変換する値。</param>
      <returns>変換後の値。</returns>
      <exception cref="T:System.NotImplementedException">
        基本
        <see cref="T:System.ComponentModel.TypeConverter" />で実装されていない
        <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />。
      </exception>
    </member>
    <member name="M:C1.WPF.DataGrid.StringListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定した値オブジェクトを指定した型に変換します。</summary>
      <param name="context">書式コンテキスト情報を提供するオブジェクト。</param>
      <param name="culture">
        現在のカルチャとして使用する
        <see cref="T:System.Globalization.CultureInfo" />。
      </param>
      <param name="value">変換するオブジェクト。</param>
      <param name="destinationType">オブジェクトを変換する型。</param>
      <returns>変換されたオブジェクト。</returns>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridLength">
      <summary>長さを記述します。ピクセルなどの絶対値または Auto、Star などの相対値で表すことができます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridLength.#ctor(System.Double)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridLength" />構造の新しいインスタンスを初期化します。
      </summary>
      <param name="pixels">ピクセル数。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridLength.#ctor(System.Double,C1.WPF.DataGrid.DataGridUnitType)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridLength" />構造の新しいインスタンスを初期化します。
      </summary>
      <param name="value">値。</param>
      <param name="type">長さを表すために使用される単位のタイプ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridLength.op_Equality(C1.WPF.DataGrid.DataGridLength,C1.WPF.DataGrid.DataGridLength)">
      <summary>２つの DataGridLength 構造体が等しいかどうかを比較します。</summary>
      <param name="gl1">比較する最初の DataGridLength のインスタンス。</param>
      <param name="gl2">比較する２番目の DataGridLength のインスタンス。</param>
      <returns>DataGridLength の２つのインスタンスが同じ値と DataGridUnitType を持つ場合は true、そうでない場合は false。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridLength.op_Inequality(C1.WPF.DataGrid.DataGridLength,C1.WPF.DataGrid.DataGridLength)">
      <summary>２つの DataGridLength 構造を比較し、それらが等しいかどうかを判定します。</summary>
      <param name="gl1">比較する最初の DataGridLength のインスタンス。</param>
      <param name="gl2">比較する２番目の DataGridLength のインスタンス。</param>
      <returns>DataGridLength の２つのインスタンスが同じ値と DataGridUnitType を持たない場合は true、そうでない場合は false。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridLength.Equals(System.Object)">
      <summary>
        指定された
        <see cref="T:System.Object" />がこのインスタンスと等しいかどうかを判定します。
      </summary>
      <param name="obj">
        このインスタンスと比較する
        <see cref="T:System.Object" />。
      </param>
      <returns>
        指定された
        <see cref="T:System.Object" />がこのインスタンスと等しい場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridLength.GetHashCode">
      <summary>このインスタンスのハッシュコードを返します。</summary>
      <returns>このインスタンスのハッシュコード。これは、ハッシュアルゴリズムやハッシュテーブルなどのデータ構造での使用に適しています。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridLength.ToString">
      <summary>
        このインスタンスを表す
        <see cref="T:System.String" />を返します。
      </summary>
      <returns>
        このインスタンスを表す
        <see cref="T:System.String" />。
      </returns>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridLength.Type">
      <summary>単位のタイプを取得します。</summary>
      <value>タイプ。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridLength.Value">
      <summary>値を取得します。</summary>
      <value>値。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridLength.IsAbsolute">
      <summary>長さがピクセル数で表されるかどうかを示す値を取得します。</summary>
      <value>
        長さがピクセルで表される場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridLength.IsAuto">
      <summary>長さが Auto であるかどうかを示す値を取得します。</summary>
      <value>
        長さが Auto である場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridLength.IsStar">
      <summary>長さが Star であるかどうかを示す値を取得します。</summary>
      <value>
        長さが Star である場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridLength.IsAutoStar">
      <summary>長さが Auto Star であるかどうかを示す値を取得します。</summary>
      <value>
        長さが Auto Star である場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridLength.Auto">
      <summary>Auto 長さを取得します。</summary>
      <value>Auto 長さ。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridUnitType">
      <summary>DataGridLength オブジェクトが保持している値の種類を記述します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridUnitType.Auto">
      <summary>サイズは、コンテンツオブジェクトのサイズプロパティによって決定されます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridUnitType.Pixel">
      <summary>値は、ピクセル単位で表されます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridUnitType.Star">
      <summary>値は、使用可能なスペースの加重比率として表されます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridUnitType.AutoStar">
      <summary>値は、Star と同様に使用可能なスペースの加重比率として表されますが、最小値は Auto の長さとして決定されます。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridLengthTypeConverter">
      <summary>
        文字列と
        <see cref="T:C1.WPF.DataGrid.DataGridLength" />を相互に変換します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridLengthTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>型コンバータが指定された型からこのコンバータの型にオブジェクトを変換できるかどうかを返します。</summary>
      <param name="context">書式コンテキストを提供するオブジェクト。</param>
      <param name="sourceType">変換元の型。</param>
      <returns>このコンバータが変換を実行できる場合は true、そうでない場合は false。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridLengthTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定された値を目的の変換タイプのコンバータに変換します。</summary>
      <param name="context">書式コンテキストを提供するオブジェクト。</param>
      <param name="culture">
        現在のカルチャとして使用する
        <see cref="T:System.Globalization.CultureInfo" />。
      </param>
      <param name="value">このコンバータの型に変換する値。</param>
      <returns>変換後の値。</returns>
      <exception cref="T:System.NotImplementedException">
        基本
        <see cref="T:System.ComponentModel.TypeConverter" />で実装されていない
        <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />。
      </exception>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridViewProperties">
      <summary>ビューの補足情報が含まれます。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridViewProperties.CellsAreaMargin">
      <summary>セル領域のマージンを取得します。グループ化された列がない場合は０。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridViewProperties.IsDraggingVerticalFreezingSeparator">
      <summary>垂直方向のフリーズセパレータがドラッグされているかどうかを示す値を取得または設定します。</summary>
      <value>
        垂直方向のフリーズセパレータがドラッグされている場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridViewProperties.IsOverVerticalFreezingSeparator">
      <summary>マウスが垂直方向のフリーズセパレータ上にあるかどうかを示す値を取得または設定します。</summary>
      <value>
        マウスが垂直方向のフリーズセパレータ上にある場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridViewProperties.PropertyChanged">
      <summary>プロパティ値が変更されたときに発生します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridColumnHeaderRow">
      <summary>
        列ヘッダーとして表示する
        <see cref="N:C1.WPF.DataGrid" />の行を表します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridViewport">
      <summary>データグリッドの表示領域に関する情報、たとえば、どの列または行を表示するかや、ビューポートのサイズなどを含みます。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridViewport.ScrollToHorizontalOffset(System.Double)">
      <summary>データグリッドのコンテンツを指定された水平方向オフセット位置までスクロールします。</summary>
      <param name="horizontalOffset">水平方向のオフセット。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridViewport.ScrollToVerticalOffset(System.Double)">
      <summary>データグリッドのコンテンツを指定された垂直方向オフセット位置までスクロールします。</summary>
      <param name="verticalOffset">垂直方向のオフセット。</param>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridViewport.CellsRange">
      <summary>現在表示されているセルの範囲を取得します。</summary>
      <value>現在表示されているセルの範囲。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridViewport.Size">
      <summary>ビューポートのサイズを取得します。</summary>
      <value>ビューポートのサイズ。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridViewport.ExtentSize">
      <summary>コンテンツが占めるサイズを取得します。このサイズは推定値です。スクロール位置が変わると変化する可能性があります。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridViewport.FirstVisibleRow">
      <summary>表示されている上端の行を取得します。</summary>
      <value>表示されている上端の行。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridViewport.LastVisibleRow">
      <summary>表示されている下端の行を取得します。</summary>
      <value>表示されている下端の行。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridViewport.FirstVisibleColumn">
      <summary>表示されている左端の列を取得します。</summary>
      <value>表示されている左端の列。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridViewport.LastVisibleColumn">
      <summary>表示されている右端の列を取得します。</summary>
      <value>表示されている右端の列。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridViewport.Rows">
      <summary>現在ビューポート内にある行のコレクションを取得します。</summary>
      <value>現在ビューポート内にある行のコレクション。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridViewport.Columns">
      <summary>現在ビューポート内にある列のコレクションを取得します。</summary>
      <value>現在ビューポート内にある列のコレクション。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridViewport.HorizontalOffset">
      <summary>スクロールされたコンテンツの水平方向のオフセットを含む値を取得します。</summary>
      <value>水平方向のオフセット。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridViewport.VerticalOffset">
      <summary>スクロールされたコンテンツの垂直方向のオフセットを含む値を取得します。</summary>
      <value>垂直方向のオフセット。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy">
      <summary>このインスタンスは、セル間を移動するキーボードイベントを管理します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.IDataGridInputHandlingStrategy">
      <summary>キーボードナビゲーションによるインターフェイス。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.IDataGridInputHandlingStrategy.HandleKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>キーダウンを処理します。</summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.Windows.Input.KeyEventArgs" />インスタンス。
      </param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.#ctor(C1.WPF.DataGrid.C1DataGrid)">
      <summary>
        <see cref="!:DataGridDefaultNavigationStrategy" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="dataGrid">データグリッド。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.HandleKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>キーダウンを処理します。</summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.Windows.Input.KeyEventArgs" />インスタンス。
      </param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GoToFirstCell(C1.WPF.DataGrid.C1DataGrid,System.Boolean,System.Boolean)">
      <summary>最初のセルに移動します。</summary>
      <param name="dataGrid">データグリッド。</param>
      <param name="shift">
        <c>true</c>に設定された場合は、［Shift］キーが押されたとして動作します。
      </param>
      <param name="ctrl">
        <c>true</c>に設定された場合は、［Ctrl］キーが押されたとして動作します。
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GoToLastCell(C1.WPF.DataGrid.C1DataGrid,System.Boolean,System.Boolean)">
      <summary>最後のセルに移動します。</summary>
      <param name="dataGrid">データグリッド。</param>
      <param name="shift">
        <c>true</c>に設定された場合は、［Shift］キーが押されたとして動作します。
      </param>
      <param name="ctrl">
        <c>true</c>に設定された場合は、［Ctrl］キーが押されたとして動作します。
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GoToRightMostCell(C1.WPF.DataGrid.DataGridCell)">
      <summary>右端のセルに移動します。</summary>
      <param name="currentCell">現在のセル。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GoToRightMostCell(C1.WPF.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
      <summary>右端のセルに移動します。</summary>
      <param name="currentCell">現在のセル。</param>
      <param name="shift">
        <c>true</c>に設定された場合は、［Shift］キーが押されたとして動作します。
      </param>
      <param name="ctrl">
        <c>true</c>に設定された場合は、［Ctrl］キーが押されたとして動作します。
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GoToLeftMostCell(C1.WPF.DataGrid.DataGridCell)">
      <summary>左端のセルに移動します。</summary>
      <param name="currentCell">現在のセル。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GoToLeftMostCell(C1.WPF.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
      <summary>左端のセルに移動します。</summary>
      <param name="currentCell">現在のセル。</param>
      <param name="shift">
        <c>true</c>に設定された場合は、［Shift］キーが押されたとして動作します。
      </param>
      <param name="ctrl">
        <c>true</c>に設定された場合は、［Ctrl］キーが押されたとして動作します。
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GoToRightCell(C1.WPF.DataGrid.DataGridCell)">
      <summary>右のセルに移動します。</summary>
      <param name="currentCell">現在のセル。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GoToRightCell(C1.WPF.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
      <summary>右のセルに移動します。</summary>
      <param name="currentCell">現在のセル。</param>
      <param name="shift">
        <c>true</c>に設定された場合は、［Shift］キーが押されたとして動作します。
      </param>
      <param name="ctrl">
        <c>true</c>に設定された場合は、［Ctrl］キーが押されたとして動作します。
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GoToLeftCell(C1.WPF.DataGrid.DataGridCell)">
      <summary>左のセルに移動します。</summary>
      <param name="currentCell">現在のセル。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GoToLeftCell(C1.WPF.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
      <summary>左のセルに移動します。</summary>
      <param name="currentCell">現在のセル。</param>
      <param name="shift">
        <c>true</c>に設定された場合は、［Shift］キーが押されたとして動作します。
      </param>
      <param name="ctrl">
        <c>true</c>に設定された場合は、［Ctrl］キーが押されたとして動作します。
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GoToDownCell(C1.WPF.DataGrid.DataGridCell)">
      <summary>下のセルに移動します。</summary>
      <param name="currentCell">現在のセル。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GoToDownCell(C1.WPF.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
      <summary>下のセルに移動します。</summary>
      <param name="currentCell">現在のセル。</param>
      <param name="shift">
        <c>true</c>に設定された場合は、［Shift］キーが押されたとして動作します。
      </param>
      <param name="ctrl">
        <c>true</c>に設定された場合は、［Ctrl］キーが押されたとして動作します。
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GoToUpCell(C1.WPF.DataGrid.DataGridCell)">
      <summary>上のセルに移動します。</summary>
      <param name="currentCell">現在のセル。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GoToUpCell(C1.WPF.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
      <summary>上のセルに移動します。</summary>
      <param name="currentCell">現在のセル。</param>
      <param name="shift">
        <c>true</c>に設定された場合は、［Shift］キーが押されたとして動作します。
      </param>
      <param name="ctrl">
        <c>true</c>に設定された場合は、［Ctrl］キーが押されたとして動作します。
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GoToTopCell(C1.WPF.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
      <summary>上端のセルに移動します。</summary>
      <param name="currentCell">現在のセル。</param>
      <param name="shift">
        <c>true</c>に設定された場合は、［Shift］キーが押されたとして動作します。
      </param>
      <param name="ctrl">
        <c>true</c>に設定された場合は、［Ctrl］キーが押されたとして動作します。
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GoToBottomCell(C1.WPF.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
      <summary>下端のセルに移動します。</summary>
      <param name="currentCell">現在のセル。</param>
      <param name="shift">
        <c>true</c>に設定された場合は、［Shift］キーが押されたとして動作します。
      </param>
      <param name="ctrl">
        <c>true</c>に設定された場合は、［Ctrl］キーが押されたとして動作します。
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.SetCurrentCell(C1.WPF.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
      <summary>現在のセルを設定します。</summary>
      <param name="cell">セル。</param>
      <param name="shift">
        <c>true</c>に設定された場合は、［Shift］キーが押されたとして動作します。
      </param>
      <param name="ctrl">
        <c>true</c>に設定された場合は、［Ctrl］キーが押されたとして動作します。
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GetLeftMostCell(C1.WPF.DataGrid.DataGridCell)">
      <summary>現在のセルを基準に、表示可能な左端のセルを取得します。</summary>
      <param name="currentCell">現在のセル。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GetLeftMostVisibleColumn(C1.WPF.DataGrid.C1DataGrid)">
      <summary>表示可能な左端の列を取得します。</summary>
      <param name="dataGrid">データグリッド。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GetRightMostCell(C1.WPF.DataGrid.DataGridCell)">
      <summary>現在のセルを基準に、表示可能な右端のセルを取得します。</summary>
      <param name="currentCell">現在のセル。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GetRightMostVisibleColumn(C1.WPF.DataGrid.C1DataGrid)">
      <summary>表示可能な右端の列を取得します。</summary>
      <param name="dataGrid">データグリッド。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GetTopVisibleRow(C1.WPF.DataGrid.C1DataGrid)">
      <summary>表示可能な上端の行を取得します。</summary>
      <param name="dataGrid">データグリッド。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GetBottomVisibleRow(C1.WPF.DataGrid.C1DataGrid)">
      <summary>表示可能な下端の行を取得します。</summary>
      <param name="dataGrid">データグリッド。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GetTopCell(C1.WPF.DataGrid.DataGridCell)">
      <summary>現在のセルを基準に、表示可能な上端のセルを取得します。</summary>
      <param name="currentCell">現在のセル。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GetBottomCell(C1.WPF.DataGrid.DataGridCell)">
      <summary>現在のセルを基準に、表示可能な下端のセルを取得します。</summary>
      <param name="currentCell">現在のセル。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GetNextVisibleColumn(C1.WPF.DataGrid.DataGridColumn)">
      <summary>現在の列を基準に、次に表示可能な列を取得します。</summary>
      <param name="currentColumn">現在の列。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GetPreviousVisibleColumn(C1.WPF.DataGrid.DataGridColumn)">
      <summary>現在の列を基準に、前に表示可能な列を取得します。</summary>
      <param name="currentColumn">現在の列。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GetNextVisibleRow(C1.WPF.DataGrid.DataGridRow)">
      <summary>現在の行を基準に、次に表示可能な行を取得します。</summary>
      <param name="currentRow">現在の行。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GetPreviousVisibleRow(C1.WPF.DataGrid.DataGridRow)">
      <summary>現在の行を基準に、前に表示可能な行を取得します。</summary>
      <param name="currentRow">現在の行。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GetNextEditableCell(C1.WPF.DataGrid.DataGridCell)">
      <summary>現在のセルを基準に、編集可能な次のセルを取得します。</summary>
      <param name="currentCell">現在のセル。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GetPreviousEditableCell(C1.WPF.DataGrid.DataGridCell)">
      <summary>現在のセルを基準に、編集可能な前のセルを取得します。</summary>
      <param name="currentCell">現在のセル。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GetClipboardContent">
      <summary>クリップボードの内容になるテキストを取得します。</summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.GetFormattedSelection(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>書式設定された選択範囲を表すテキストを取得します。</summary>
      <param name="separator">列間の区切り文字です。</param>
      <param name="lineSeparator">行セパレータです。</param>
      <param name="copyRowHeaders">
        <c>true</c>に設定すると、行ヘッダーの列が生成されます。
      </param>
      <param name="copyColumnHeaders">
        <c>true</c>に設定された場合は、列タイトルのための行を生成します。
      </param>
      <param name="copyIndentGroupsColumns">
        <c>true</c>に設定された場合は、インデントレベルごとに１つの列が生成されます。
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.SetClipboardContent(System.String)">
      <summary>クリップボードの内容になるテキストを取得します。</summary>
      <returns>
      </returns>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.DataGrid">
      <summary>オーナーデータグリッドを取得します。</summary>
      <value>オーナーデータグリッド。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDefaultInputHandlingStrategy.SelectionManager">
      <summary>選択範囲を操作するための選択範囲マネージャを取得します。</summary>
      <value>選択範囲を操作するための選択範囲マネージャ。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridCellsPanel">
      <summary>セルが含まれるパネル。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsPanel.MeasureOverride(System.Windows.Size)">
      <summary>Silverlight レイアウトの「メジャー」の受け渡し動作を提供します。クラスはこのメソッドをオーバーライドして、クラス自体のメジャーの受け渡し動作を定義することができます。</summary>
      <param name="availableSize">このオブジェクトが子オブジェクトに与えることができるサイズ。Infinity を指定すると、どのようなコンテンツにもオブジェクトのサイズを合わせられることを示すことができます。</param>
      <returns>このオブジェクトがレイアウトの際に必要と判断するサイズ。割り当てられた子オブジェクトのサイズの計算に基づきます。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Silverlight レイアウトの「Arrange」の受け渡し動作を提供します。クラスはこのメソッドをオーバーライドして、クラス自体の配置の受け渡し動作を定義することができます。</summary>
      <param name="finalSize">親の内部で、このオブジェクトがそれ自体およびその子を配置するために使用する最終エリアです。</param>
      <returns>実際に使用するサイズ。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsPanel.UpdateSelection">
      <summary>選択範囲状態を更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsPanel.UpdateMouseOver">
      <summary>マウスオーバー状態を更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsPanel.UpdateValidationState">
      <summary>検証状態を更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsPanel.UpdateCurrentCell">
      <summary>現在のセルを更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsPanel.UpdateLines">
      <summary>セルの境界線を更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridCellsPanel.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridCellsPanel" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridCellsPanel.RowPresenter">
      <summary>このセルパネルのコンテナである行プレゼンタを取得します。</summary>
      <value>行プレゼンタ。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridOptionsVisibility">
      <summary>
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridOptionsVisibility.Visible">
      <summary>オプションのドロップダウンは常に表示されます。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridOptionsVisibility.OnMouseOver">
      <summary>マウスを列ヘッダー上に置くと、オプションのドロップダウンが表示されます。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridDetailsPresenter">
      <summary>行の詳細のビジュアル要素を表します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDetailsPresenter.HorizontalGridLineVisibilityProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridDetailsPresenter.HorizontalGridLineVisibility" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDetailsPresenter.HorizontalGridLineBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridDetailsPresenter.HorizontalGridLineBrush" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridDetailsPresenter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridDetailsPresenter" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDetailsPresenter.Row">
      <summary>オーナー行を取得します。</summary>
      <value>行。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDetailsPresenter.DataGrid">
      <summary>オーナーデータグリッドを取得します。</summary>
      <value>データグリッド。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDetailsPresenter.HorizontalGridLineVisibility">
      <summary>true の場合は、水平方向のグリッド線が表示されます。</summary>
      <remarks>
        このプロパティは、プレゼンタが属する
        <see cref="T:C1.WPF.DataGrid.C1DataGrid" />によって制御されます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDetailsPresenter.HorizontalGridLineBrush">
      <summary>水平方向のグリッド線を表示するために使用されるブラシ。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridFocusPresenter">
      <summary>セル内で使用されるフォーカスのビジュアル要素を表します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridFocusPresenter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridFocusPresenter" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridGroupColumnHeaderPresenter">
      <summary>グループ化パネルの項目のビジュアル要素を表します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridGroupColumnHeaderPresenter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridGroupColumnHeaderPresenter" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridGroupingPanel">
      <summary>列ごとのグループ化に使用されるパネル。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridGroupingPanel.MeasureOverride(System.Windows.Size)">
      <summary>Silverlight レイアウトの「メジャー」の受け渡し動作を提供します。クラスはこのメソッドをオーバーライドして、クラス自体のメジャーの受け渡し動作を定義することができます。</summary>
      <param name="availableSize">このオブジェクトが子オブジェクトに与えることができるサイズ。Infinity を指定すると、どのようなコンテンツにもオブジェクトのサイズを合わせられることを示すことができます。</param>
      <returns>このオブジェクトがレイアウトの際に必要と判断するサイズ。割り当てられた子オブジェクトのサイズの計算に基づきます。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridGroupingPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Silverlight レイアウトの「Arrange」の受け渡し動作を提供します。クラスはこのメソッドをオーバーライドして、クラス自体の配置の受け渡し動作を定義することができます。</summary>
      <param name="finalSize">親の内部で、このオブジェクトがそれ自体およびその子を配置するために使用する最終エリアです。</param>
      <returns>実際に使用するサイズ。</returns>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridGroupingPanel.IndentHeightProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridGroupingPanel.IndentHeight" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridGroupingPanel.ColumnsHeaderGapProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridGroupingPanel.ColumnsHeaderGap" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridGroupingPanel.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridGroupingPanel" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridGroupingPanel.DataGrid">
      <summary>パネルが属するデータグリッドを取得します。</summary>
      <value>パネルが属するデータグリッド。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridGroupingPanel.IndentHeight">
      <summary>各ステップの距離（垂直方向）。この値が０の場合、列ヘッダーは水平方向に表示され、段階状には表示されません。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridGroupingPanel.ColumnsHeaderGap">
      <summary>列ヘッダー間の距離（水平方向）。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridGroupRowPresenter">
      <summary>グループを表す行プレゼンタ。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridSelectableRowPresenter">
      <summary>選択範囲およびマウスオーバーに対応する要素を含む行のビジュアル要素を表します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectableRowPresenter.UpdateSelection">
      <summary>選択範囲状態を更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectableRowPresenter.UpdateEditingRow">
      <summary>編集中の状態を更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectableRowPresenter.UpdateMouseOver">
      <summary>マウスオーバー状態を更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectableRowPresenter.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseEnter" />イベントが発生する前に呼び出されます。
      </summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectableRowPresenter.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeave" />イベントが発生する前に呼び出されます。
      </summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectableRowPresenter.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />イベントが発生する前に呼び出されます。
      </summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectableRowPresenter.ChangeVisualStateSelection(System.Boolean)">
      <summary>Selection 表示状態グループの現在の表示状態をオブジェクトのプロパティに一致するように更新します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectableRowPresenter.ChangeVisualStateCommon(System.Boolean)">
      <summary>Common 表示状態グループの現在の表示状態をオブジェクトのプロパティに一致するように更新します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridSelectableRowPresenter.IsSelectedProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridSelectableRowPresenter.IsSelected" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridSelectableRowPresenter.IsEditingProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridSelectableRowPresenter.IsEditing" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridSelectableRowPresenter.MouseOverBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridSelectableRowPresenter.MouseOverBrush" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridSelectableRowPresenter.PressedBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridSelectableRowPresenter.PressedBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridSelectableRowPresenter.SelectedBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridSelectableRowPresenter.SelectedBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectableRowPresenter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridSelectableRowPresenter" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectableRowPresenter.OnApplyTemplate">
      <summary>
        新しいテンプレートが適用されたときに、
        <see cref="T:C1.WPF.DataGrid.DataGridSelectableRowPresenter" />コントロールのビジュアルツリーを作成します。
      </summary>
      <remarks>
        このメソッドは、アプリケーションコードや内部処理（再構築レイアウトパスなど）が
        <see cref="M:ApplyTemplate" />メソッドを呼び出すときに必ず呼び出されます。
      </remarks>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectableRowPresenter.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>依存プロパティの実効値が更新されている場合に呼び出されます。</summary>
      <param name="e">変更されたプロパティと、その古い値と新しい値を示すイベントデータ。</param>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSelectableRowPresenter.IsSelected">
      <summary>行が現在選択中の場合は、true を返します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSelectableRowPresenter.IsEditing">
      <summary>行が現在編集モードの場合は、true を返します。</summary>
    </member>
    <member name="E:C1.WPF.DataGrid.DataGridSelectableRowPresenter.IsMouseOverChanged">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridSelectableRowPresenter.IsMouseOver" />プロパティが変更されると発生します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSelectableRowPresenter.MouseOverBrush">
      <summary>
        マウスがある行の強調表示に使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSelectableRowPresenter.PressedBrush">
      <summary>
        クリックされたボタンを描画するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridSelectableRowPresenter.SelectedBackground">
      <summary>
        選択されたコントロールを強調表示するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridGroupRowPresenter.GroupContentProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridGroupRowPresenter.GroupContent" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridGroupRowPresenter.IsCheckedProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridGroupRowPresenter.IsChecked" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridGroupRowPresenter.GroupContentMarginProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridGroupRowPresenter.GroupContentMargin" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridGroupRowPresenter.ButtonBackgroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridGroupRowPresenter.ButtonBackground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridGroupRowPresenter.ButtonForegroundProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridGroupRowPresenter.ButtonForeground" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridGroupRowPresenter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridGroupRowPresenter" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridGroupRowPresenter.OnApplyTemplate">
      <summary>関連するコントロールのパーツを参照できるように、コントロールのテンプレートをロードします。</summary>
      <remarks>
        このメソッドは、アプリケーションコードや内部処理（再構築レイアウトパスなど）が
        <see cref="M:ApplyTemplate" />メソッドを呼び出すときに必ず呼び出されます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridGroupRowPresenter.GroupContent">
      <summary>グループのタイトルとして表示されるテキストまたは UIElement を取得または設定します</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridGroupRowPresenter.IsChecked">
      <summary>このグループが展開されているか、折りたたまれているかを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridGroupRowPresenter.GroupContentMargin">
      <summary>グループタイトルおよび折りたたみ/展開チェックボックスに適用されるマージンを取得または設定します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridGroupRowPresenter.ButtonBackground">
      <summary>
        コントロール内のボタンの背景に割り当てられる
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridGroupRowPresenter.ButtonForeground">
      <summary>
        コントロール内のボタンの前景に割り当てられる
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridNewRowHeaderPresenter">
      <summary>新規行ヘッダーのビジュアル要素を表します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridNewRowHeaderPresenter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridNewRowHeaderPresenter" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridNewRowPresenter">
      <summary>新しい行のビジュアル要素を表します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridNewRowPresenter.Load">
      <summary>プレゼンタを初期化します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridNewRowPresenter.Unload">
      <summary>プレゼンタを終了処理します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridNewRowPresenter.WatermarkTextProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridNewRowPresenter.WatermarkText" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridNewRowPresenter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridNewRowPresenter" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridNewRowPresenter.OnApplyTemplate">
      <summary>関連するコントロールのパーツを参照できるように、コントロールのテンプレートをロードします。</summary>
      <remarks>
        このメソッドは、アプリケーションコードや内部処理（再構築レイアウトパスなど）が
        <see cref="M:ApplyTemplate" />メソッドを呼び出すときに必ず呼び出されます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNewRowPresenter.WatermarkText">
      <summary>データが入力される前に、行全体に表示されるウォーターマークテキストを取得または設定します。</summary>
      <remarks>デフォルト値は、「新しい行を入力するにはここをクリック」です。</remarks>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridToggleGroupButton">
      <summary>グループの切り替えに使用されるボタン。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridToggleGroupButton.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridToggleGroupButton" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridVerticalFreezingSeparatorPresenter">
      <summary>垂直方向のフリーズセパレータのビジュアル要素を表します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridVerticalFreezingSeparatorPresenter.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseEnter" />イベントが発生する前に呼び出されます。
      </summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridVerticalFreezingSeparatorPresenter.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeave" />イベントが発生する前に呼び出されます。
      </summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridVerticalFreezingSeparatorPresenter.ChangeVisualStateMovement(System.Boolean)">
      <summary>Movement 表示状態グループの現在の表示状態をオブジェクトのプロパティに一致するように更新します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridVerticalFreezingSeparatorPresenter.MouseOverBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridVerticalFreezingSeparatorPresenter.MouseOverBrush" />依存関係プロパティを識別します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridVerticalFreezingSeparatorPresenter.PressedBrushProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridVerticalFreezingSeparatorPresenter.PressedBrush" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridVerticalFreezingSeparatorPresenter.#ctor">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridVerticalFreezingSeparatorPresenter" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridVerticalFreezingSeparatorPresenter.OnApplyTemplate">
      <summary>関連するコントロールのパーツを参照できるように、コントロールのテンプレートをロードします。</summary>
      <remarks>
        このメソッドは、アプリケーションコードや内部処理（再構築レイアウトパスなど）が
        <see cref="M:ApplyTemplate" />メソッドを呼び出すときに必ず呼び出されます。
      </remarks>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridVerticalFreezingSeparatorPresenter.MouseOverBrush">
      <summary>
        マウスがあるセパレータの強調表示に使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridVerticalFreezingSeparatorPresenter.PressedBrush">
      <summary>
        クリックされたボタンを描画するために使用される
        <see cref="T:System.Windows.Media.Brush" />を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridScrollStep">
      <summary>通常、スクロールバーのアップ/ダウンボタン、およびマウスホイールによって実行される１回のスクロールに使用される長さを表します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridScrollStep.#ctor(System.Double)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridScrollStep" />構造の新しいインスタンスを初期化します。
      </summary>
      <param name="value">値。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridScrollStep.#ctor(System.Double,C1.WPF.DataGrid.DataGridScrollStepUnitType)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.DataGridScrollStep" />構造の新しいインスタンスを初期化します。
      </summary>
      <param name="value">値。</param>
      <param name="type">型。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridScrollStep.ToString">
      <summary>このインスタンスの完全修飾された型名を返します。</summary>
      <returns>
        完全修飾された型名を含む
        <see cref="T:System.String" />。
      </returns>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridScrollStep.IsDiscrete">
      <summary>このインスタンスが離散値かどうかを示す値を取得します。</summary>
      <value>
        このインスタンスが離散値の場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridScrollStep.IsAbsolute">
      <summary>このインスタンスが絶対値かどうかを示す値を取得します。</summary>
      <value>
        このインスタンスが絶対値の場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridScrollStep.Value">
      <summary>値を取得します。</summary>
      <value>値。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridScrollStep.Discrete">
      <summary>離散的なインスタンスを取得します。</summary>
      <value>離散値。</value>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridScrollStep.StepUnitType">
      <summary>ステップ単位の型を取得します。</summary>
      <value>ステップ単位の型。</value>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridScrollStepUnitType">
      <summary>データグリッド内でスクロールに使用される単位。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridScrollStepUnitType.Discrete">
      <summary>行のように、不連続の単位でスクロールします。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridScrollStepUnitType.Pixel">
      <summary>指定したピクセル数をスクロールします。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.DataGridScrollStepConverter">
      <summary>
        文字列を
        <see cref="T:C1.WPF.DataGrid.DataGridScrollStepConverter" />に変換します。
      </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridScrollStepConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>型コンバータが指定された型からこのコンバータの型にオブジェクトを変換できるかどうかを返します。</summary>
      <param name="context">書式コンテキストを提供する object。</param>
      <param name="sourceType">変換元の型。</param>
      <returns>このコンバータが変換を実行できる場合は true、そうでない場合は false。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridScrollStepConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定された値をこのコンバータのタイプに変換します。</summary>
      <param name="context">書式コンテキストを提供する object。</param>
      <param name="culture">
        現在のカルチャとして使用する
        <see cref="T:System.Globalization.CultureInfo" />。
      </param>
      <param name="value">このコンバータの型に変換する値。</param>
      <returns>変換後の値。</returns>
      <exception cref="T:System.NotImplementedException">
        基本
        <see cref="T:System.ComponentModel.TypeConverter" />で実装されていない
        <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />。
      </exception>
    </member>
    <member name="T:C1.WPF.DataGrid.ScaleMode">
      <summary>グリッドコンテンツをページサイズに合わせて拡大縮小する方法を指定します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.ScaleMode.ActualSize">
      <summary>実際のサイズで印刷し、必要に応じて改ページを挿入します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.ScaleMode.PageWidth">
      <summary>ページ幅に合わせて印刷します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.ScaleMode.SinglePage">
      <summary>単一ページに合わせて印刷します。</summary>
    </member>
    <member name="T:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid">
      <summary>強力に型付けされたリソースクラス（ローカライズされた文字列の参照などに使用）。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.Culture">
      <summary>この強力に型付けされたリソースクラスを使用するすべてのリソースの参照において、現在のスレッドの CurrentUICulture プロパティをオーバーライドします。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.AddNewRow">
      <summary>「Click here to add a new row（新しい行を追加するにはここをクリック）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.CheckBoxFilter_Checked">
      <summary>「Checked :（チェック済み:）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.ComboBoxFilter_SelectAll">
      <summary>「Select All（すべて選択）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.DateTimeFilter_End">
      <summary>「End（終了）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.DateTimeFilter_Start">
      <summary>「Start（開始）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.EmptyGroupPanel">
      <summary>「Drag a column here to group by that column.（ここに列をドラッグして、その列でグループ化します。）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.Filter_Clear">
      <summary>「Clear（クリア）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.Filter_Filter">
      <summary>「Filter（フィルタ）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.NumericFilter_And">
      <summary>「And（および）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.NumericFilter_Equals">
      <summary>「Equals（～に等しい）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.NumericFilter_GraterOrEquals">
      <summary>「Greater/Equals（～以上）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.NumericFilter_Greater">
      <summary>「Greater（～より大きい）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.NumericFilter_Less">
      <summary>「Less（～より小さい）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.NumericFilter_LessOrEquals">
      <summary>「Less/Equals（～以下）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.NumericFilter_None">
      <summary>「None（なし）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.NumericFilter_NotEquals">
      <summary>「Not Equals（～と等しくない）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.NumericFilter_Or">
      <summary>「Or（または）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.TextFilter_Contains">
      <summary>「Contains（～を含む）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.TextFilter_EndsWith">
      <summary>「Ends With（～で終わる）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.TextFilter_Equals">
      <summary>「Equals（～に等しい）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.TextFilter_NotEquals">
      <summary>「Not Equals（～と等しくない）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.TextFilter_StartsWith">
      <summary>「Starts With（～で始まる）」に相当するローカライズされた文字列を検索します。</summary>
    </member>
    <member name="T:C1.WPF.DataGrid.CustomPropertyInfo">
      <summary>PropertyDescriptor（WPF 連結で使用可）をカプセル化し、それを PropertyInfo（WPF と Silverlight で使用可）として公開するクラス。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.CustomPropertyInfo.#ctor(System.Type,System.ComponentModel.PropertyDescriptor)">
      <summary>
        <see cref="T:C1.WPF.DataGrid.CustomPropertyInfo" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="declaringType">宣言する型。</param>
      <param name="pd">プロパティディスクリプタ。</param>
    </member>
    <member name="M:C1.WPF.DataGrid.CustomPropertyInfo.GetValue(System.Object,System.Object[])">
      <summary>インデックス付きプロパティの場合はオプションのインデックス値を付けて、プロパティの値を返します。</summary>
      <param name="obj">返されるプロパティ値を含むオブジェクト。</param>
      <param name="index">インデックス付きプロパティのオプションのインデックス値。インデックス付きでないプロパティの場合、この値は null でなければなりません。</param>
      <returns>
        <paramref name="obj" />パラメータのプロパティ値。
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" />配列に必要な引数のタイプが含まれていない。または、プロパティの get アクセサが見つからない。
      </exception>
      <exception cref="T:System.Reflection.TargetException">
        オブジェクトがターゲットタイプと一致しない。または、プロパティはインスタンスプロパティだが、
        <paramref name="obj" />が null である。
      </exception>
      <exception cref="T:System.Reflection.TargetParameterCountException">
        <paramref name="index" />のパラメータの数がインデックス付きプロパティがとるパラメータの数と一致しません。
      </exception>
      <exception cref="T:System.MethodAccessException">クラス内でプライベートメソッドまたはプロテクトメソッドへの不正なアクセスの試みがありました。</exception>
      <exception cref="T:System.Reflection.TargetInvocationException">
        プロパティ値の取得中にエラーが発生しました。たとえば、インデックス付きプロパティに対して指定されたインデックス値が範囲外です。
        <see cref="P:System.Exception.InnerException" />プロパティにエラーの理由が示されます。
      </exception>
    </member>
    <member name="M:C1.WPF.DataGrid.CustomPropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>
        派生クラスでオーバーライドされた場合は、指定された連結、インデックス、および
        <see cref="T:System.Globalization.CultureInfo" />を持つプロパティの値を返します。
      </summary>
      <param name="obj">返されるプロパティ値を含むオブジェクト。</param>
      <param name="invokeAttr">呼び出し属性。これは BindingFlags（InvokeMethod、CreateInstance、Static、GetField、SetField、GetProperty、SetProperty）のいずれかのビットフラグでなければなりません。適切な呼び出し属性が指定されている必要があります。静的メンバが呼び出される場合は、BindingFlags の Static フラグが設定されている必要があります。</param>
      <param name="binder">
        連結、引数タイプの強制、メンバの呼び出し、およびリフレクションによる MemberInfo オブジェクトの取得を可能にするオブジェクト。
        <paramref name="binder" />が null の場合は、デフォルトのバインダが使用されます。
      </param>
      <param name="index">インデックス付きプロパティのオプションのインデックス値。インデックス付きでないプロパティの場合、この値は null でなければなりません。</param>
      <param name="culture">ローカライズされるリソースのカルチャを表す CultureInfo オブジェクト。このカルチャに対してリソースがローカライズされない場合は、一致を検索するために続けて CultureInfo.Parent メソッドが呼び出されます。この値が null の場合は、CultureInfo.CurrentUICulture プロパティから CultureInfo が取得されます。</param>
      <returns>
        <paramref name="obj" />のプロパティ値。
      </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" />配列に必要な引数のタイプが含まれていない。または、プロパティの get アクセサが見つからない。
      </exception>
      <exception cref="T:System.Reflection.TargetException">
        オブジェクトがターゲットタイプと一致しない。または、プロパティはインスタンスプロパティだが、
        <paramref name="obj" />が null である。
      </exception>
      <exception cref="T:System.Reflection.TargetParameterCountException">
        <paramref name="index" />のパラメータの数がインデックス付きプロパティがとるパラメータの数と一致しません。
      </exception>
      <exception cref="T:System.MethodAccessException">クラス内でプライベートメソッドまたはプロテクトメソッドへの不正なアクセスの試みがありました。</exception>
      <exception cref="T:System.Reflection.TargetInvocationException">
        プロパティ値の取得中にエラーが発生しました。たとえば、インデックス付きプロパティに対して指定されたインデックス値が範囲外です。
        <see cref="P:System.Exception.InnerException" />プロパティにエラーの理由が示されます。
      </exception>
    </member>
    <member name="M:C1.WPF.DataGrid.CustomPropertyInfo.SetValue(System.Object,System.Object,System.Object[])">
      <summary>インデックスプロパティの場合はオプションのインデックス値を付けて、プロパティの値を設定します。</summary>
      <param name="obj">設定されるプロパティ値を含むオブジェクト。</param>
      <param name="value">このプロパティの新しい値。</param>
      <param name="index">インデックス付きプロパティのオプションのインデックス値。インデックス付きでないプロパティの場合、この値は null でなければなりません。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" />配列に必要な引数のタイプが含まれていない。または、プロパティの set アクセサが見つからない。
      </exception>
      <exception cref="T:System.Reflection.TargetException">
        オブジェクトがターゲットタイプと一致しない。または、プロパティはインスタンスプロパティだが、
        <paramref name="obj" />が null である。
      </exception>
      <exception cref="T:System.Reflection.TargetParameterCountException">
        <paramref name="index" />のパラメータの数がインデックス付きプロパティがとるパラメータの数と一致しません。
      </exception>
      <exception cref="T:System.MethodAccessException">クラス内でプライベートメソッドまたはプロテクトメソッドへの不正なアクセスの試みがありました。</exception>
      <exception cref="T:System.Reflection.TargetInvocationException">
        プロパティ値の設定中にエラーが発生しました。たとえば、インデックス付きプロパティに対して指定されたインデックス値が範囲外です。
        <see cref="P:System.Exception.InnerException" />プロパティにエラーの理由が示されます。
      </exception>
    </member>
    <member name="M:C1.WPF.DataGrid.CustomPropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>派生クラスでオーバーライドされた場合は、指定されたオブジェクトのプロパティ値を指定された値に設定します。</summary>
      <param name="obj">設定されるプロパティ値を含むオブジェクト。</param>
      <param name="value">このプロパティの新しい値。</param>
      <param name="invokeAttr">
        呼び出し属性。これは
        <see cref="T:System.Reflection.BindingFlags" />（InvokeMethod、CreateInstance、Static、GetField、SetField、GetProperty、SetProperty）のいずれかのビットフラグでなければなりません。適切な呼び出し属性が指定されている必要があります。静的メンバが呼び出される場合は、BindingFlags の Static フラグが設定されている必要があります。
      </param>
      <param name="binder">
        連結、引数タイプの強制、メンバの呼び出し、およびリフレクションによる
        <see cref="T:System.Reflection.MemberInfo" />オブジェクトの取得を可能にするオブジェクト。
        <paramref name="binder" />が null の場合は、デフォルトのバインダが使用されます。
      </param>
      <param name="index">インデックス付きプロパティのオプションのインデックス値。インデックス付きでないプロパティの場合、この値は null でなければなりません。</param>
      <param name="culture">
        ローカライズされるリソースのカルチャを表す
        <see cref="T:System.Globalization.CultureInfo" />オブジェクト。このカルチャに対してリソースがローカライズされない場合は、一致を検索するために続けて CultureInfo.Parent メソッドが呼び出されます。この値が null の場合は、CultureInfo.CurrentUICulture プロパティから CultureInfo が取得されます。
      </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" />配列に必要な引数のタイプが含まれていない。または、プロパティの set アクセサが見つからない。
      </exception>
      <exception cref="T:System.Reflection.TargetException">
        オブジェクトがターゲットタイプと一致しない。または、プロパティはインスタンスプロパティだが、
        <paramref name="obj" />が null である。
      </exception>
      <exception cref="T:System.Reflection.TargetParameterCountException">
        <paramref name="index" />のパラメータの数がインデックス付きプロパティがとるパラメータの数と一致しません。
      </exception>
      <exception cref="T:System.MethodAccessException">クラス内でプライベートメソッドまたはプロテクトメソッドへの不正なアクセスの試みがありました。</exception>
      <exception cref="T:System.Reflection.TargetInvocationException">
        プロパティ値の設定中にエラーが発生しました。たとえば、インデックス付きプロパティに対して指定されたインデックス値が範囲外です。
        <see cref="P:System.Exception.InnerException" />プロパティにエラーの理由が示されます。
      </exception>
    </member>
    <member name="M:C1.WPF.DataGrid.CustomPropertyInfo.IsDefined(System.Type,System.Boolean)">
      <summary>
        派生クラスでオーバーライドされた場合は、
        <paramref name="attributeType" />の１つ以上のインスタンスがこのメンバに適用されるかどうかを示します。
      </summary>
      <param name="attributeType">カスタム属性の適用先の Type オブジェクト。</param>
      <param name="inherit">このメンバの継承チェインを検索して、それらの属性を探すかどうかを指定します。</param>
      <returns>
        <paramref name="attributeType" />の１つ以上のインスタンスがこのメンバに適用される場合は true、そうでない場合は false。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.CustomPropertyInfo.GetCustomAttributes(System.Boolean)">
      <summary>派生クラスでオーバーライドされた場合は、すべてのカスタム属性を含む配列を返します。</summary>
      <param name="inherit">このメンバの継承チェインを検索して、それらの属性を探すかどうかを指定します。</param>
      <returns>すべてのカスタム属性を含む配列。または、何も属性が定義されていない場合はゼロ個の要素を含む配列。</returns>
      <exception cref="T:System.InvalidOperationException">このメンバは、リフレクション専用コンテキストにロードされる型に属します。「方法：リフレクション専用コンテキストにアセンブリをロードする」を参照してください。</exception>
      <exception cref="T:System.TypeLoadException">カスタム属性タイプはロードできません。</exception>
    </member>
    <member name="M:C1.WPF.DataGrid.CustomPropertyInfo.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>
        派生クラスでオーバーライドされた場合は、
        <see cref="T:System.Type" />で識別されるカスタム属性の配列を返します。
      </summary>
      <param name="attributeType">検索する属性のタイプ。このタイプに割り当てることができる属性のみが返されます。</param>
      <param name="inherit">このメンバの継承チェインを検索して、それらの属性を探すかどうかを指定します。</param>
      <returns>このメンバに適用されているカスタム属性の配列。または、属性が適用されていない場合はゼロ個の要素を含む配列。</returns>
      <exception cref="T:System.TypeLoadException">カスタム属性タイプはロードできません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeType" />が null の場合。
      </exception>
      <exception cref="T:System.InvalidOperationException">このメンバは、リフレクション専用コンテキストにロードされる型に属します。「方法：リフレクション専用コンテキストにアセンブリをロードする」を参照してください。</exception>
    </member>
    <member name="M:C1.WPF.DataGrid.CustomPropertyInfo.GetIndexParameters">
      <summary>派生クラスでオーバーライドされた場合は、このプロパティのすべてのインデックスパラメータの配列を返します。</summary>
      <returns>インデックスのパラメータを含む ParameterInfo 型の配列。</returns>
    </member>
    <member name="M:C1.WPF.DataGrid.CustomPropertyInfo.GetSetMethod(System.Boolean)">
      <summary>派生クラスでオーバーライドされた場合は、このプロパティの set アクセサを返します。</summary>
      <param name="nonPublic">非パブリックのアクセサを返すかどうかを示します。非パブリックのアクセサを返す場合は true、そうでない場合は false。</param>
      <returns>
        値 条件 このプロパティの Set メソッドを表す
        <see cref="T:System.Reflection.MethodInfo" />オブジェクト。set アクセサがパブリック。または、
        <paramref name="nonPublic" />が true で set アクセサが非パブリック。null
        <paramref name="nonPublic" />が true で、プロパティが読み取り専用。
        <paramref name="nonPublic" />が false で、set アクセサが非パブリック。または、set アクセサがない。
      </returns>
      <exception cref="T:System.Security.SecurityException">
        要求されたメソッドは非パブリックで、呼び出し元がこの非パブリックメソッドに反映する
        <see cref="T:System.Security.Permissions.ReflectionPermission" />を持ちません。
      </exception>
    </member>
    <member name="M:C1.WPF.DataGrid.CustomPropertyInfo.GetGetMethod(System.Boolean)">
      <summary>派生クラスでオーバーライドされた場合は、このプロパティのパブリックまたは非パブリックの get アクセサを返します。</summary>
      <param name="nonPublic">非パブリックの get アクセサを返すかどうかを示します。非パブリックのアクセサを返す場合は true、そうでない場合は false。</param>
      <returns>
        <paramref name="nonPublic" />が true の場合は、このプロパティの get アクセサを表す MethodInfo オブジェクト。
        <paramref name="nonPublic" />が false で get アクセサが非パブリックの場合、または
        <paramref name="nonPublic" />が true で get アクセサが存在しない場合は、null を返します。
      </returns>
      <exception cref="T:System.Security.SecurityException">
        要求されたメソッドは非パブリックで、呼び出し元がこの非パブリックメソッドに反映する
        <see cref="T:System.Security.Permissions.ReflectionPermission" />を持ちません。
      </exception>
    </member>
    <member name="M:C1.WPF.DataGrid.CustomPropertyInfo.GetAccessors(System.Boolean)">
      <summary>現在のインスタンスによって反映されるプロパティのアクセサ（パブリックの get と set および指定されている場合は非パブリックの get と set など）を反映する要素を含む配列を返します。</summary>
      <param name="nonPublic">MethodInfo 配列に非パブリックメソッドを返すかどうかを示します。非パブリックメソッドを入れる場合は true、そうでない場合は false。</param>
      <returns>
        現在のインスタンスによって反映されるプロパティの get、set などのアクセサを反映する要素を含む
        <see cref="T:System.Reflection.MethodInfo" />オブジェクトの配列。
        <paramref name="nonPublic" />が true の場合、この配列には、パブリックと非パブリックの get、set などのアクセサが含まれます。
        <paramref name="nonPublic" />が false の場合、この配列には、パブリックのみの get、set などのアクセサが含まれます。指定された可視性を持つアクセサが見つからない場合、このメソッドは、ゼロ個の要素を含む配列を返します。
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.CustomPropertyInfo.Equals(System.Object)">
      <summary>
        指定された
        <see cref="T:System.Object" />がこのインスタンスと等しいかどうかを判定します。
      </summary>
      <param name="obj">
        このインスタンスと比較する
        <see cref="T:System.Object" />。
      </param>
      <returns>
        指定された
        <see cref="T:System.Object" />がこのインスタンスと等しい場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="obj" />パラメータが null。
      </exception>
    </member>
    <member name="M:C1.WPF.DataGrid.CustomPropertyInfo.GetHashCode">
      <summary>このインスタンスのハッシュコードを返します。</summary>
      <returns>このインスタンスのハッシュコード。これは、ハッシュアルゴリズムやハッシュテーブルなどのデータ構造での使用に適しています。</returns>
    </member>
    <member name="P:C1.WPF.DataGrid.CustomPropertyInfo.Name">
      <summary>現在のメンバの名前を取得します。</summary>
      <returns>
        このメンバの名前を含む
        <see cref="T:System.String" />。
      </returns>
    </member>
    <member name="P:C1.WPF.DataGrid.CustomPropertyInfo.PropertyType">
      <summary>このプロパティの型を取得します。</summary>
      <returns>このプロパティの型。</returns>
    </member>
    <member name="P:C1.WPF.DataGrid.CustomPropertyInfo.CanRead">
      <summary>プロパティを読み取ることができるかどうかを示す値を取得します。</summary>
      <returns>このプロパティを読み取ることができる場合は true、そうでない場合は false。</returns>
    </member>
    <member name="P:C1.WPF.DataGrid.CustomPropertyInfo.CanWrite">
      <summary>プロパティを書き込むことができるかどうかを示す値を取得します。</summary>
      <returns>このプロパティに書き込むことができる場合は true、そうでない場合は false。</returns>
    </member>
    <member name="P:C1.WPF.DataGrid.CustomPropertyInfo.DeclaringType">
      <summary>このメンバを宣言するクラスを取得します。</summary>
      <returns>このメンバを宣言するクラスの Type オブジェクト。</returns>
    </member>
    <member name="P:C1.WPF.DataGrid.CustomPropertyInfo.ReflectedType">
      <summary>MemberInfo のこのインスタンスを取得する際に使用されたクラスオブジェクトを取得します。</summary>
      <returns>この MemberInfo オブジェクトの取得元の Type オブジェクト。</returns>
    </member>
    <member name="P:C1.WPF.DataGrid.CustomPropertyInfo.Attributes">
      <summary>このプロパティの属性を取得します。</summary>
      <returns>このプロパティの属性。</returns>
    </member>
    <member name="F:C1.WPF.DataGrid.C1DataGrid.LoadingIndicatorStyleProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.C1DataGrid.LoadingIndicatorStyle" />依存プロパティを識別します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.C1DataGrid.LoadingIndicatorStyle">
      <summary>ローディングインジケータに使用される Style を取得または設定します。</summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateTimeColumn.CustomDateFormatProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridDateTimeColumn.CustomDateFormat" />値を取得または設定します。
      </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.DataGridDateTimeColumn.CustomTimeFormatProperty">
      <summary>
        <see cref="P:C1.WPF.DataGrid.DataGridDateTimeColumn.CustomTimeFormat" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeColumn.CustomDateFormat">
      <summary>日付ピッカーに適用される書式を取得または設定します。 このプロパティは、EditMode が DataTime または Date である場合にのみ適用されます。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeColumn.CustomTimeFormat">
      <summary>時刻エディタに適用される書式を取得または設定します。</summary>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.SortBy(System.Collections.Generic.KeyValuePair{C1.WPF.DataGrid.DataGridColumn,C1.WPF.DataGrid.DataGridSortDirection}[])">
      <summary>指定された列および方向で、データをソートします。</summary>
      <param name="columns">列とソート方向のペア。</param>
      <exception cref="T:C1.WPF.DataGrid.DataGridSortException">この例外は、コレクションビューがソート操作を実行する準備ができていないときに発生します。</exception>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.SortBy(C1.WPF.DataGrid.DataGridColumnValue{C1.WPF.DataGrid.DataGridSortDirection}[])">
      <summary>指定された列および方向で、データをソートします。</summary>
      <param name="columns">列とソート方向から成るペアの配列。</param>
      <exception cref="T:C1.WPF.DataGrid.DataGridSortException">この例外は、コレクションビューがソート操作を実行する準備ができていないときに発生します。</exception>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.FilterBy(System.Collections.Generic.KeyValuePair{C1.WPF.DataGrid.DataGridColumn,C1.WPF.DataGrid.DataGridFilterState}[])">
      <summary>指定された列およびフィルタ状態によってデータをフィルタします。</summary>
      <param name="columns">列とフィルタ状態のペア。</param>
      <exception cref="T:C1.WPF.DataGrid.DataGridFilterException">この例外は、コレクションビューがフィルタ処理を実行する準備ができていないときに発生します。</exception>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.FilterBy(C1.WPF.DataGrid.DataGridColumnValue{C1.WPF.DataGrid.DataGridFilterState}[])">
      <summary>指定された列およびフィルタ状態によってデータをフィルタします。</summary>
      <param name="columns">列とフィルタ状態のペア。</param>
      <exception cref="T:C1.WPF.DataGrid.DataGridFilterException">この例外は、コレクションビューがフィルタ処理を実行する準備ができていないときに発生します。</exception>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.GroupBy(System.Collections.Generic.KeyValuePair{C1.WPF.DataGrid.DataGridColumn,C1.WPF.DataGrid.DataGridSortDirection}[])">
      <summary>指定された列および方向で、データをグループ化します。</summary>
      <param name="columns">列とグループ方向のペア。</param>
      <exception cref="T:C1.WPF.DataGrid.DataGridGroupException">この例外は、コレクションビューがグループ化操作を実行する準備ができていないときに発生します。</exception>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.GroupBy(C1.WPF.DataGrid.DataGridColumnValue{C1.WPF.DataGrid.DataGridSortDirection}[])">
      <summary>指定された列および方向で、データをグループ化します。</summary>
      <param name="columns">列とグループ方向のペア。</param>
      <exception cref="T:C1.WPF.DataGrid.DataGridGroupException">この例外は、コレクションビューがグループ化操作を実行する準備ができていないときに発生します。</exception>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRow.DefaultHeight">
      <summary>行のデフォルトの高さを取得します。</summary>
      <value>デフォルトの高さ。</value>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGridFilterHelper.BuildFilterPredicate``1(C1.WPF.DataGrid.DataGridColumnValue{C1.WPF.DataGrid.DataGridFilterState}[],C1.WPF.DataGrid.DataGridFilterCombination)">
      <summary>
        列セットの
        <see cref="T:C1.WPF.DataGrid.DataGridFilterState" />値の配列からフィルタ述語を作成します。
      </summary>
      <typeparam name="T">
      </typeparam>
      <param name="filterStates">フィルタ状態。</param>
      <param name="concat">使用する連結演算子（OR、AND）。</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.WPF.DataGrid.C1DataGrid.GetPageImagesAsync(C1.WPF.DataGrid.ScaleMode,System.Windows.Size,System.Windows.Thickness,System.Int32,System.Boolean)">
      <summary>すべての画像を取得します。このメソッドは、呼び出し元のスレッドをブロックしません。</summary>
      <param name="scaleMode">ページに収まるようにドキュメントを拡大縮小する方法。</param>
      <param name="pageSize">ページのサイズ（ピクセル単位）。</param>
      <param name="margin">ページ周囲のマージン（ピクセル単位）。</param>
      <param name="maxPages">印刷する最大ページ数。</param>
      <param name="showPageInfo">生成されるイメージにページ番号やカウントなどのページ情報を追加するかどうかを示します。</param>
    </member>
    <member name="E:C1.WPF.DataGrid.C1DataGrid.GetPageCompleted">
      <summary>ページが生成されたときに発生します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridComboBoxColumn.DefaultAutoWidth">
      <summary>AutoStar サイズモードにおけるデフォルトのの列サイズを返します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.DefaultAutoWidth">
      <summary>AutoStar サイズモードにおけるデフォルトのの列サイズを返します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowHeaderColumn.DefaultAutoWidth">
      <summary>AutoStar サイズモードにおけるデフォルトのの列サイズを返します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridDateTimeColumn.DefaultAutoWidth">
      <summary>AutoStar サイズモードにおけるデフォルトのの列サイズを返します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridHyperlinkColumn.DefaultAutoWidth">
      <summary>AutoStar サイズモードにおけるデフォルトのの列サイズを返します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNumericColumn.DefaultAutoWidth">
      <summary>AutoStar サイズモードにおけるデフォルトのの列サイズを返します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridTextColumn.DefaultAutoWidth">
      <summary>AutoStar サイズモードにおけるデフォルトのの列サイズを返します。</summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowsPanel.DataGrid">
      <summary>
            Returns reference to the owning <see cref="T:C1.WPF.DataGrid.C1DataGrid" /> control.
            </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridRowsHeaderPanel.DataGrid">
      <summary>
            Returns reference to the owning <see cref="T:C1.WPF.DataGrid.C1DataGrid" /> control.
            </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumnsHeaderPanel.DataGrid">
      <summary>
            Returns reference to the owning <see cref="T:C1.WPF.DataGrid.C1DataGrid" /> control.
            </summary>
    </member>
    <member name="T:C1.WPF.DataGrid.C1RowIndexHeaderMode">
      <summary>
            Determines what index should be displayed in the row header.
            </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1RowIndexHeaderMode.RowIndex">
      <summary>
            The index of row as displayed in control.
            </summary>
    </member>
    <member name="F:C1.WPF.DataGrid.C1RowIndexHeaderMode.DataIndex">
      <summary>
            The index of row in the underlying data source.
            </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.ActualGroupHeader">
      <summary>
            Gets the actual header that appears in the grouping panel as the column header is dragged there.
            </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridColumn.ActualCanUserResize">
      <summary>
            Gets the value determining whether user can resize column according to the column and owning control settings.
            </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridNumericFilter.Operators">
      <summary>
            Gets the list of supported numeric operators.
            </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.DataGridTextFilter.SupportedOperations">
      <summary>
            Gets the list of supported operations.
            </summary>
    </member>
    <member name="M:C1.WPF.DataGrid.DataGridSelectionManager.Select(System.Collections.Generic.IEnumerable{C1.WPF.DataGrid.DataGridCellsRange},System.Boolean,C1.WPF.DataGrid.DataGridCell,System.Object)">
      <summary>
            Selects the specified cell ranges.
            </summary>
      <param name="ranges">DataGridCellsRange objects to select.</param>
      <param name="selectVisibleCells">
      </param>
      <param name="preferedCell">
      </param>
      <param name="latestSelectedObject">
      </param>
    </member>
    <member name="T:C1.WPF.DataGrid.GetPageCompletedEventArgs">
      <summary>
             Provides event data for PageComleted event.
            </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.GetPageCompletedEventArgs.IsPageCountValid">
      <summary>
            Gets a value indicating whether <see cref="P:C1.WPF.DataGrid.GetPageCompletedEventArgs.PageCount" /> is the total number of pages.
            </summary>
      <value>true if pagination is complete and PageCount is the total number of pages; otherwise, false, if pagination is in process and PageCount is the number of pages currently formatted (not the total).</value>
    </member>
    <member name="P:C1.WPF.DataGrid.GetPageCompletedEventArgs.PageCount">
      <summary>
            Gets the number of pages currently formatted.
            </summary>
    </member>
    <member name="P:C1.WPF.DataGrid.GetPageCompletedEventArgs.Pages">
      <summary>
            Returns list of generated pages.
            </summary>
    </member>
  </members>
</doc>